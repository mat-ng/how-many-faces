/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=l(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return N;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(u(n,8)),s=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));s=s.mul(p).add(o(h))}else s=(s=s.mul(a)).add(o(h))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var N=l(0,-2147483648,!1);n.MIN_VALUE=N;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(u(e,6),this.unsigned),s=this,i="";;){var l=s.div(a),c=(s.sub(l.mul(a)).toInt()>>>0).toString(e);if((s=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(b)},I.neg=I.negate,I.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=s+(65535&e.low))>>>16,p+=(d+=a+u)>>>16,c+=(p+=n+o)>>>16,c+=t+i,l((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(N))return e.isOdd()?N:g;if(e.eq(N))return this.isOdd()?N:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=s*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+a*p+s*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(N))return e.eq(b)||e.eq(v)?N:e.eq(N)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(N))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(a);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),s=s.add(p),a=a.sub(d)}return s},I.div=I.divide,I.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return l(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},448:(e,t,n)=>{"use strict";var r=n(294),a=n(840);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),h=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,d={},f={};function m(e,t,n,r,a,s,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function x(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!h.call(f,e)||!h.call(d,e)&&(p.test(e)?f[e]=!0:(d[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var v=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),N=Symbol.for("react.fragment"),I=Symbol.for("react.strict_mode"),S=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),C=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),$=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),A=Symbol.for("react.memo"),_=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var F=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var D=Symbol.iterator;function O(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=D&&e[D]||e["@@iterator"])?e:null}var M,L=Object.assign;function z(e){if(void 0===M)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);M=t&&t[1]||""}return"\n"+M+e}var P=!1;function B(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),s=r.stack.split("\n"),i=a.length-1,o=s.length-1;1<=i&&0<=o&&a[i]!==s[o];)o--;for(;1<=i&&0<=o;i--,o--)if(a[i]!==s[o]){if(1!==i||1!==o)do{if(i--,0>--o||a[i]!==s[o]){var l="\n"+a[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=i&&0<=o);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?z(e):""}function W(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return B(e.type,!1);case 11:return B(e.type.render,!1);case 1:return B(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case N:return"Fragment";case k:return"Portal";case S:return"Profiler";case I:return"StrictMode";case $:return"Suspense";case R:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case A:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case _:t=e._payload,e=e._init;try{return U(e(t))}catch(e){}}return null}function V(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===I?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function G(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function j(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=H(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function K(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=G(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&x(e,"checked",t,!1)}function Z(e,t){Q(e,t);var n=G(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,G(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+G(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:G(n)}}function se(e,t){var n=G(t.value),r=G(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,he=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var de={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||de.hasOwnProperty(e)&&de[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(de).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),de[t]=de[e]}))}));var ye=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(s(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ve=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Ne=null,Ie=null;function Se(e){if(e=xa(e)){if("function"!=typeof ke)throw Error(s(280));var t=e.stateNode;t&&(t=wa(t),ke(e.stateNode,e.type,t))}}function Te(e){Ne?Ie?Ie.push(e):Ie=[e]:Ne=e}function Ce(){if(Ne){var e=Ne,t=Ie;if(Ie=Ne=null,Se(e),t)for(e=0;e<t.length;e++)Se(t[e])}}function Ee(e,t){return e(t)}function $e(){}var Re=!1;function Ae(e,t,n){if(Re)return e(t,n);Re=!0;try{return Ee(e,t,n)}finally{Re=!1,(null!==Ne||null!==Ie)&&($e(),Ce())}}function _e(e,t){var n=e.stateNode;if(null===n)return null;var r=wa(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(s(231,t,typeof n));return n}var Fe=!1;if(c)try{var De={};Object.defineProperty(De,"passive",{get:function(){Fe=!0}}),window.addEventListener("test",De,De),window.removeEventListener("test",De,De)}catch(ce){Fe=!1}function Oe(e,t,n,r,a,s,i,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var Me=!1,Le=null,ze=!1,Pe=null,Be={onError:function(e){Me=!0,Le=e}};function We(e,t,n,r,a,s,i,o,l){Me=!1,Le=null,Oe.apply(Be,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ve(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ge(e){if(Ue(e)!==e)throw Error(s(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return Ge(a),e;if(i===r)return Ge(a),t;i=i.sibling}throw Error(s(188))}if(n.return!==r.return)n=a,r=i;else{for(var o=!1,l=a.child;l;){if(l===n){o=!0,n=a,r=i;break}if(l===r){o=!0,r=a,n=i;break}l=l.sibling}if(!o){for(l=i.child;l;){if(l===n){o=!0,n=i,r=a;break}if(l===r){o=!0,r=i,n=a;break}l=l.sibling}if(!o)throw Error(s(189))}}if(n.alternate!==r)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?je(e):null}function je(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=je(e);if(null!==t)return t;e=e.sibling}return null}var qe=a.unstable_scheduleCallback,Ke=a.unstable_cancelCallback,Xe=a.unstable_shouldYield,Ye=a.unstable_requestPaint,Qe=a.unstable_now,Ze=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,st=null,it=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(ot(e)/lt|0)|0},ot=Math.log,lt=Math.LN2,ut=64,ct=4194304;function ht(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,s=e.pingedLanes,i=268435455&n;if(0!==i){var o=i&~a;0!==o?r=ht(o):0!=(s&=i)&&(r=ht(s))}else 0!=(i=n&~a)?r=ht(i):0!==s&&(r=ht(s));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&a)&&((a=r&-r)>=(s=t&-t)||16===a&&0!=(4194240&s)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-it(t)),r|=e[n],t&=~a;return r}function dt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return 0==(4194240&(ut<<=1))&&(ut=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var xt=0;function vt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var wt,kt,Nt,It,St,Tt=!1,Ct=[],Et=null,$t=null,Rt=null,At=new Map,_t=new Map,Ft=[],Dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ot(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":$t=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":At.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":_t.delete(t.pointerId)}}function Mt(e,t,n,r,a,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:s,targetContainers:[a]},null!==t&&null!==(t=xa(t))&&kt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Lt(e){var t=ba(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ve(n)))return e.blockedOn=t,void St(e.priority,(function(){Nt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function zt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=xa(n))&&kt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);ve=r,n.target.dispatchEvent(r),ve=null,t.shift()}return!0}function Pt(e,t,n){zt(e)&&n.delete(t)}function Bt(){Tt=!1,null!==Et&&zt(Et)&&(Et=null),null!==$t&&zt($t)&&($t=null),null!==Rt&&zt(Rt)&&(Rt=null),At.forEach(Pt),_t.forEach(Pt)}function Wt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Bt)))}function Ut(e){function t(t){return Wt(t,e)}if(0<Ct.length){Wt(Ct[0],e);for(var n=1;n<Ct.length;n++){var r=Ct[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Et&&Wt(Et,e),null!==$t&&Wt($t,e),null!==Rt&&Wt(Rt,e),At.forEach(t),_t.forEach(t),n=0;n<Ft.length;n++)(r=Ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Ft.length&&null===(n=Ft[0]).blockedOn;)Lt(n),null===n.blockedOn&&Ft.shift()}var Vt=v.ReactCurrentBatchConfig,Gt=!0;function Ht(e,t,n,r){var a=xt,s=Vt.transition;Vt.transition=null;try{xt=1,qt(e,t,n,r)}finally{xt=a,Vt.transition=s}}function jt(e,t,n,r){var a=xt,s=Vt.transition;Vt.transition=null;try{xt=4,qt(e,t,n,r)}finally{xt=a,Vt.transition=s}}function qt(e,t,n,r){if(Gt){var a=Xt(e,t,n,r);if(null===a)Gr(e,t,r,Kt,n),Ot(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return Et=Mt(Et,e,t,n,r,a),!0;case"dragenter":return $t=Mt($t,e,t,n,r,a),!0;case"mouseover":return Rt=Mt(Rt,e,t,n,r,a),!0;case"pointerover":var s=a.pointerId;return At.set(s,Mt(At.get(s)||null,e,t,n,r,a)),!0;case"gotpointercapture":return s=a.pointerId,_t.set(s,Mt(_t.get(s)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Ot(e,r),4&t&&-1<Dt.indexOf(e)){for(;null!==a;){var s=xa(a);if(null!==s&&wt(s),null===(s=Xt(e,t,n,r))&&Gr(e,t,r,Kt,n),s===a)break;a=s}null!==a&&r.stopPropagation()}else Gr(e,t,r,null,n)}}var Kt=null;function Xt(e,t,n,r){if(Kt=null,null!==(e=ba(e=we(r))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ve(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Qt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,r=n.length,a="value"in Qt?Qt.value:Qt.textContent,s=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[s-t];t++);return Jt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,s){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(un),hn=L({},un,{view:0,detail:0}),pn=an(hn),dn=L({},hn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(sn=e.screenX-ln.screenX,on=e.screenY-ln.screenY):on=sn=0,ln=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=an(dn),mn=an(L({},dn,{dataTransfer:0})),gn=an(L({},hn,{relatedTarget:0})),yn=an(L({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=L({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),xn=an(bn),vn=an(L({},un,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Nn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function In(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Nn[e])&&!!t[e]}function Sn(){return In}var Tn=L({},hn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=an(Tn),En=an(L({},dn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),$n=an(L({},hn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),Rn=an(L({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),An=L({},dn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),_n=an(An),Fn=[9,13,27,32],Dn=c&&"CompositionEvent"in window,On=null;c&&"documentMode"in document&&(On=document.documentMode);var Mn=c&&"TextEvent"in window&&!On,Ln=c&&(!Dn||On&&8<On&&11>=On),zn=String.fromCharCode(32),Pn=!1;function Bn(e,t){switch(e){case"keyup":return-1!==Fn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1,Vn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Gn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Vn[e.type]:"textarea"===t}function Hn(e,t,n,r){Te(r),0<(t=jr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var jn=null,qn=null;function Kn(e){zr(e,0)}function Xn(e){if(q(va(e)))return e}function Yn(e,t){if("change"===e)return t}var Qn=!1;if(c){var Zn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Zn=Jn}else Zn=!1;Qn=Zn&&(!document.documentMode||9<document.documentMode)}function tr(){jn&&(jn.detachEvent("onpropertychange",nr),qn=jn=null)}function nr(e){if("value"===e.propertyName&&Xn(qn)){var t=[];Hn(t,qn,e,we(e)),Ae(Kn,t)}}function rr(e,t,n){"focusin"===e?(tr(),qn=n,(jn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(qn)}function sr(e,t){if("click"===e)return Xn(t)}function ir(e,t){if("input"===e||"change"===e)return Xn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function lr(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!h.call(t,a)||!or(e[a],t[a]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function hr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?hr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pr(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fr(e){var t=pr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&hr(n.ownerDocument.documentElement,n)){if(null!==r&&dr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,s=Math.min(r.start,a);r=void 0===r.end?s:Math.min(r.end,a),!e.extend&&s>r&&(a=r,r=s,s=a),a=cr(n,s);var i=cr(n,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),s>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,yr=null,br=null,xr=!1;function vr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;xr||null==gr||gr!==K(r)||(r="selectionStart"in(r=gr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&lr(br,r)||(br=r,0<(r=jr(yr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function wr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var kr={animationend:wr("Animation","AnimationEnd"),animationiteration:wr("Animation","AnimationIteration"),animationstart:wr("Animation","AnimationStart"),transitionend:wr("Transition","TransitionEnd")},Nr={},Ir={};function Sr(e){if(Nr[e])return Nr[e];if(!kr[e])return e;var t,n=kr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ir)return Nr[e]=n[t];return e}c&&(Ir=document.createElement("div").style,"AnimationEvent"in window||(delete kr.animationend.animation,delete kr.animationiteration.animation,delete kr.animationstart.animation),"TransitionEvent"in window||delete kr.transitionend.transition);var Tr=Sr("animationend"),Cr=Sr("animationiteration"),Er=Sr("animationstart"),$r=Sr("transitionend"),Rr=new Map,Ar="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function _r(e,t){Rr.set(e,t),l(t,[e])}for(var Fr=0;Fr<Ar.length;Fr++){var Dr=Ar[Fr];_r(Dr.toLowerCase(),"on"+(Dr[0].toUpperCase()+Dr.slice(1)))}_r(Tr,"onAnimationEnd"),_r(Cr,"onAnimationIteration"),_r(Er,"onAnimationStart"),_r("dblclick","onDoubleClick"),_r("focusin","onFocus"),_r("focusout","onBlur"),_r($r,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Or="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Or));function Lr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,i,o,l,u){if(We.apply(this,arguments),Me){if(!Me)throw Error(s(198));var c=Le;Me=!1,Le=null,ze||(ze=!0,Pe=c)}}(r,t,void 0,e),e.currentTarget=null}function zr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var s=void 0;if(t)for(var i=r.length-1;0<=i;i--){var o=r[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==s&&a.isPropagationStopped())break e;Lr(a,o,u),s=l}else for(i=0;i<r.length;i++){if(l=(o=r[i]).instance,u=o.currentTarget,o=o.listener,l!==s&&a.isPropagationStopped())break e;Lr(a,o,u),s=l}}}if(ze)throw e=Pe,ze=!1,Pe=null,e}function Pr(e,t){var n=t[ma];void 0===n&&(n=t[ma]=new Set);var r=e+"__bubble";n.has(r)||(Vr(t,e,2,!1),n.add(r))}function Br(e,t,n){var r=0;t&&(r|=4),Vr(n,e,r,t)}var Wr="_reactListening"+Math.random().toString(36).slice(2);function Ur(e){if(!e[Wr]){e[Wr]=!0,i.forEach((function(t){"selectionchange"!==t&&(Mr.has(t)||Br(t,!1,e),Br(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Wr]||(t[Wr]=!0,Br("selectionchange",!1,t))}}function Vr(e,t,n,r){switch(Yt(t)){case 1:var a=Ht;break;case 4:a=jt;break;default:a=qt}n=a.bind(null,t,n,e),a=void 0,!Fe||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Gr(e,t,n,r,a){var s=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var o=r.stateNode.containerInfo;if(o===a||8===o.nodeType&&o.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==o;){if(null===(i=ba(o)))return;if(5===(l=i.tag)||6===l){r=s=i;continue e}o=o.parentNode}}r=r.return}Ae((function(){var r=s,a=we(n),i=[];e:{var o=Rr.get(e);if(void 0!==o){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=Cn;break;case"focusin":u="focus",l=gn;break;case"focusout":u="blur",l=gn;break;case"beforeblur":case"afterblur":l=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=$n;break;case Tr:case Cr:case Er:l=yn;break;case $r:l=Rn;break;case"scroll":l=pn;break;case"wheel":l=_n;break;case"copy":case"cut":case"paste":l=xn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=En}var c=0!=(4&t),h=!c&&"scroll"===e,p=c?null!==o?o+"Capture":null:o;c=[];for(var d,f=r;null!==f;){var m=(d=f).stateNode;if(5===d.tag&&null!==m&&(d=m,null!==p&&null!=(m=_e(f,p))&&c.push(Hr(f,m,d))),h)break;f=f.return}0<c.length&&(o=new l(o,u,null,n,a),i.push({event:o,listeners:c}))}}if(0==(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===ve||!(u=n.relatedTarget||n.fromElement)||!ba(u)&&!u[fa])&&(l||o)&&(o=a.window===a?a:(o=a.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?ba(u):null)&&(u!==(h=Ue(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=fn,m="onMouseLeave",p="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(c=En,m="onPointerLeave",p="onPointerEnter",f="pointer"),h=null==l?o:va(l),d=null==u?o:va(u),(o=new c(m,f+"leave",l,n,a)).target=h,o.relatedTarget=d,m=null,ba(a)===r&&((c=new c(p,f+"enter",u,n,a)).target=d,c.relatedTarget=h,m=c),h=m,l&&u)e:{for(p=u,f=0,d=c=l;d;d=qr(d))f++;for(d=0,m=p;m;m=qr(m))d++;for(;0<f-d;)c=qr(c),f--;for(;0<d-f;)p=qr(p),d--;for(;f--;){if(c===p||null!==p&&c===p.alternate)break e;c=qr(c),p=qr(p)}c=null}else c=null;null!==l&&Kr(i,o,l,c,!1),null!==u&&null!==h&&Kr(i,h,u,c,!0)}if("select"===(l=(o=r?va(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g=Yn;else if(Gn(o))if(Qn)g=ir;else{g=ar;var y=rr}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=sr);switch(g&&(g=g(e,r))?Hn(i,g,n,a):(y&&y(e,o,r),"focusout"===e&&(y=o._wrapperState)&&y.controlled&&"number"===o.type&&ee(o,"number",o.value)),y=r?va(r):window,e){case"focusin":(Gn(y)||"true"===y.contentEditable)&&(gr=y,yr=r,br=null);break;case"focusout":br=yr=gr=null;break;case"mousedown":xr=!0;break;case"contextmenu":case"mouseup":case"dragend":xr=!1,vr(i,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":vr(i,n,a)}var b;if(Dn)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else Un?Bn(e,n)&&(x="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(x="onCompositionStart");x&&(Ln&&"ko"!==n.locale&&(Un||"onCompositionStart"!==x?"onCompositionEnd"===x&&Un&&(b=en()):(Zt="value"in(Qt=a)?Qt.value:Qt.textContent,Un=!0)),0<(y=jr(r,x)).length&&(x=new vn(x,e,null,n,a),i.push({event:x,listeners:y}),(b||null!==(b=Wn(n)))&&(x.data=b))),(b=Mn?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Pn=!0,zn);case"textInput":return(e=t.data)===zn&&Pn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!Dn&&Bn(e,t)?(e=en(),Jt=Zt=Qt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=jr(r,"onBeforeInput")).length&&(a=new vn("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=b)}zr(i,t)}))}function Hr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function jr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,s=a.stateNode;5===a.tag&&null!==s&&(a=s,null!=(s=_e(e,n))&&r.unshift(Hr(e,s,a)),null!=(s=_e(e,t))&&r.push(Hr(e,s,a))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Kr(e,t,n,r,a){for(var s=t._reactName,i=[];null!==n&&n!==r;){var o=n,l=o.alternate,u=o.stateNode;if(null!==l&&l===r)break;5===o.tag&&null!==u&&(o=u,a?null!=(l=_e(n,s))&&i.unshift(Hr(n,l,o)):a||null!=(l=_e(n,s))&&i.push(Hr(n,l,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Xr=/\r\n?/g,Yr=/\u0000|\uFFFD/g;function Qr(e){return("string"==typeof e?e:""+e).replace(Xr,"\n").replace(Yr,"")}function Zr(e,t,n){if(t=Qr(t),Qr(e)!==t&&n)throw Error(s(425))}function Jr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,sa="function"==typeof Promise?Promise:void 0,ia="function"==typeof queueMicrotask?queueMicrotask:void 0!==sa?function(e){return sa.resolve(null).then(e).catch(oa)}:ra;function oa(e){setTimeout((function(){throw e}))}function la(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Ut(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Ut(t)}function ua(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ha=Math.random().toString(36).slice(2),pa="__reactFiber$"+ha,da="__reactProps$"+ha,fa="__reactContainer$"+ha,ma="__reactEvents$"+ha,ga="__reactListeners$"+ha,ya="__reactHandles$"+ha;function ba(e){var t=e[pa];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fa]||n[pa]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[pa])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function xa(e){return!(e=e[pa]||e[fa])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function va(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wa(e){return e[da]||null}var ka=[],Na=-1;function Ia(e){return{current:e}}function Sa(e){0>Na||(e.current=ka[Na],ka[Na]=null,Na--)}function Ta(e,t){Na++,ka[Na]=e.current,e.current=t}var Ca={},Ea=Ia(Ca),$a=Ia(!1),Ra=Ca;function Aa(e,t){var n=e.type.contextTypes;if(!n)return Ca;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,s={};for(a in n)s[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function _a(e){return null!=e.childContextTypes}function Fa(){Sa($a),Sa(Ea)}function Da(e,t,n){if(Ea.current!==Ca)throw Error(s(168));Ta(Ea,t),Ta($a,n)}function Oa(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(s(108,V(e)||"Unknown",a));return L({},n,r)}function Ma(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ca,Ra=Ea.current,Ta(Ea,e),Ta($a,$a.current),!0}function La(e,t,n){var r=e.stateNode;if(!r)throw Error(s(169));n?(e=Oa(e,t,Ra),r.__reactInternalMemoizedMergedChildContext=e,Sa($a),Sa(Ea),Ta(Ea,e)):Sa($a),Ta($a,n)}var za=null,Pa=!1,Ba=!1;function Wa(e){null===za?za=[e]:za.push(e)}function Ua(){if(!Ba&&null!==za){Ba=!0;var e=0,t=xt;try{var n=za;for(xt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}za=null,Pa=!1}catch(t){throw null!==za&&(za=za.slice(e+1)),qe(Je,Ua),t}finally{xt=t,Ba=!1}}return null}var Va=v.ReactCurrentBatchConfig;function Ga(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Ha=Ia(null),ja=null,qa=null,Ka=null;function Xa(){Ka=qa=ja=null}function Ya(e){var t=Ha.current;Sa(Ha),e._currentValue=t}function Qa(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Za(e,t){ja=e,Ka=qa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(wo=!0),e.firstContext=null)}function Ja(e){var t=e._currentValue;if(Ka!==e)if(e={context:e,memoizedValue:t,next:null},null===qa){if(null===ja)throw Error(s(308));qa=e,ja.dependencies={lanes:0,firstContext:e}}else qa=qa.next=e;return t}var es=null,ts=!1;function ns(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function rs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function as(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ss(e,t){var n=e.updateQueue;null!==n&&(n=n.shared,tu(e)?(null===(e=n.interleaved)?(t.next=t,null===es?es=[n]:es.push(n)):(t.next=e.next,e.next=t),n.interleaved=t):(null===(e=n.pending)?t.next=t:(t.next=e.next,e.next=t),n.pending=t))}function is(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}function os(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?a=s=i:s=s.next=i,n=n.next}while(null!==n);null===s?a=s=t:s=s.next=t}else a=s=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:s,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function ls(e,t,n,r){var a=e.updateQueue;ts=!1;var s=a.firstBaseUpdate,i=a.lastBaseUpdate,o=a.shared.pending;if(null!==o){a.shared.pending=null;var l=o,u=l.next;l.next=null,null===i?s=u:i.next=u,i=l;var c=e.alternate;null!==c&&(o=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===o?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l)}if(null!==s){var h=a.baseState;for(i=0,c=u=l=null,o=s;;){var p=o.lane,d=o.eventTime;if((r&p)===p){null!==c&&(c=c.next={eventTime:d,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var f=e,m=o;switch(p=t,d=n,m.tag){case 1:if("function"==typeof(f=m.payload)){h=f.call(d,h,p);break e}h=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null==(p="function"==typeof(f=m.payload)?f.call(d,h,p):f))break e;h=L({},h,p);break e;case 2:ts=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(p=a.effects)?a.effects=[o]:p.push(o))}else d={eventTime:d,lane:p,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(u=c=d,l=h):c=c.next=d,i|=p;if(null===(o=o.next)){if(null===(o=a.shared.pending))break;o=(p=o).next,p.next=null,a.lastBaseUpdate=p,a.shared.pending=null}}if(null===c&&(l=h),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===s&&(a.shared.lanes=0);Fl|=i,e.lanes=i,e.memoizedState=h}}function us(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(s(191,a));a.call(r)}}}var cs=(new r.Component).refs;function hs(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ps={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=Ql(),a=Zl(e),s=as(r,a);s.payload=t,null!=n&&(s.callback=n),ss(e,s),null!==(t=Jl(e,a,r))&&is(t,e,a)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=Ql(),a=Zl(e),s=as(r,a);s.tag=1,s.payload=t,null!=n&&(s.callback=n),ss(e,s),null!==(t=Jl(e,a,r))&&is(t,e,a)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Ql(),r=Zl(e),a=as(n,r);a.tag=2,null!=t&&(a.callback=t),ss(e,a),null!==(t=Jl(e,r,n))&&is(t,e,r)}};function ds(e,t,n,r,a,s,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,s,i):!(t.prototype&&t.prototype.isPureReactComponent&&lr(n,r)&&lr(a,s))}function fs(e,t,n){var r=!1,a=Ca,s=t.contextType;return"object"==typeof s&&null!==s?s=Ja(s):(a=_a(t)?Ra:Ea.current,s=(r=null!=(r=t.contextTypes))?Aa(e,a):Ca),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ps,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=s),t}function ms(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ps.enqueueReplaceState(t,t.state,null)}function gs(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=cs,ns(e);var s=t.contextType;"object"==typeof s&&null!==s?a.context=Ja(s):(s=_a(t)?Ra:Ea.current,a.context=Aa(e,s)),a.state=e.memoizedState,"function"==typeof(s=t.getDerivedStateFromProps)&&(hs(e,t,s,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&ps.enqueueReplaceState(a,a.state,null),ls(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}var ys=[],bs=0,xs=null,vs=0,ws=[],ks=0,Ns=null,Is=1,Ss="";function Ts(e,t){ys[bs++]=vs,ys[bs++]=xs,xs=e,vs=t}function Cs(e,t,n){ws[ks++]=Is,ws[ks++]=Ss,ws[ks++]=Ns,Ns=e;var r=Is;e=Ss;var a=32-it(r)-1;r&=~(1<<a),n+=1;var s=32-it(t)+a;if(30<s){var i=a-a%5;s=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Is=1<<32-it(t)+a|n<<a|r,Ss=s+e}else Is=1<<s|n<<a|r,Ss=e}function Es(e){null!==e.return&&(Ts(e,1),Cs(e,1,0))}function $s(e){for(;e===xs;)xs=ys[--bs],ys[bs]=null,vs=ys[--bs],ys[bs]=null;for(;e===Ns;)Ns=ws[--ks],ws[ks]=null,Ss=ws[--ks],ws[ks]=null,Is=ws[--ks],ws[ks]=null}var Rs=null,As=null,_s=!1,Fs=null;function Ds(e,t){var n=Ru(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function Os(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,Rs=e,As=ua(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,Rs=e,As=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ns?{id:Is,overflow:Ss}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ru(18,null,null,0)).stateNode=t,n.return=e,e.child=n,Rs=e,As=null,!0);default:return!1}}function Ms(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function Ls(e){if(_s){var t=As;if(t){var n=t;if(!Os(e,t)){if(Ms(e))throw Error(s(418));t=ua(n.nextSibling);var r=Rs;t&&Os(e,t)?Ds(r,n):(e.flags=-4097&e.flags|2,_s=!1,Rs=e)}}else{if(Ms(e))throw Error(s(418));e.flags=-4097&e.flags|2,_s=!1,Rs=e}}}function zs(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Rs=e}function Ps(e){if(e!==Rs)return!1;if(!_s)return zs(e),_s=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=As)){if(Ms(e)){for(e=As;e;)e=ua(e.nextSibling);throw Error(s(418))}for(;t;)Ds(e,t),t=ua(t.nextSibling)}if(zs(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){As=ua(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}As=null}}else As=Rs?ua(e.stateNode.nextSibling):null;return!0}function Bs(){As=Rs=null,_s=!1}function Ws(e){null===Fs?Fs=[e]:Fs.push(e)}function Us(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var r=n.stateNode}if(!r)throw Error(s(147,e));var a=r,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=a.refs;t===cs&&(t=a.refs={}),null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function Vs(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Gs(e){return(0,e._init)(e._payload)}function Hs(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=_u(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Mu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){var s=n.type;return s===N?h(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===_&&Gs(s)===t.type)?((r=a(t,n.props)).ref=Us(e,t,n),r.return=e,r):((r=Fu(n.type,n.key,n.props,null,e.mode,r)).ref=Us(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Lu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function h(e,t,n,r,s){return null===t||7!==t.tag?((t=Du(n,e.mode,r,s)).return=e,t):((t=a(t,n)).return=e,t)}function p(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Mu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Fu(t.type,t.key,t.props,null,e.mode,n)).ref=Us(e,null,t),n.return=e,n;case k:return(t=Lu(t,e.mode,n)).return=e,t;case _:return p(e,(0,t._init)(t._payload),n)}if(te(t)||O(t))return(t=Du(t,e.mode,n,null)).return=e,t;Vs(e,t)}return null}function d(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===a?u(e,t,n,r):null;case k:return n.key===a?c(e,t,n,r):null;case _:return d(e,t,(a=n._init)(n._payload),r)}if(te(n)||O(n))return null!==a?null:h(e,t,n,r,null);Vs(e,n)}return null}function f(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case w:return u(t,e=e.get(null===r.key?n:r.key)||null,r,a);case k:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case _:return f(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||O(r))return h(t,e=e.get(n)||null,r,a,null);Vs(t,r)}return null}function m(a,s,o,l){for(var u=null,c=null,h=s,m=s=0,g=null;null!==h&&m<o.length;m++){h.index>m?(g=h,h=null):g=h.sibling;var y=d(a,h,o[m],l);if(null===y){null===h&&(h=g);break}e&&h&&null===y.alternate&&t(a,h),s=i(y,s,m),null===c?u=y:c.sibling=y,c=y,h=g}if(m===o.length)return n(a,h),_s&&Ts(a,m),u;if(null===h){for(;m<o.length;m++)null!==(h=p(a,o[m],l))&&(s=i(h,s,m),null===c?u=h:c.sibling=h,c=h);return _s&&Ts(a,m),u}for(h=r(a,h);m<o.length;m++)null!==(g=f(h,a,m,o[m],l))&&(e&&null!==g.alternate&&h.delete(null===g.key?m:g.key),s=i(g,s,m),null===c?u=g:c.sibling=g,c=g);return e&&h.forEach((function(e){return t(a,e)})),_s&&Ts(a,m),u}function g(a,o,l,u){var c=O(l);if("function"!=typeof c)throw Error(s(150));if(null==(l=c.call(l)))throw Error(s(151));for(var h=c=null,m=o,g=o=0,y=null,b=l.next();null!==m&&!b.done;g++,b=l.next()){m.index>g?(y=m,m=null):y=m.sibling;var x=d(a,m,b.value,u);if(null===x){null===m&&(m=y);break}e&&m&&null===x.alternate&&t(a,m),o=i(x,o,g),null===h?c=x:h.sibling=x,h=x,m=y}if(b.done)return n(a,m),_s&&Ts(a,g),c;if(null===m){for(;!b.done;g++,b=l.next())null!==(b=p(a,b.value,u))&&(o=i(b,o,g),null===h?c=b:h.sibling=b,h=b);return _s&&Ts(a,g),c}for(m=r(a,m);!b.done;g++,b=l.next())null!==(b=f(m,a,g,b.value,u))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),o=i(b,o,g),null===h?c=b:h.sibling=b,h=b);return e&&m.forEach((function(e){return t(a,e)})),_s&&Ts(a,g),c}return function e(r,s,i,l){if("object"==typeof i&&null!==i&&i.type===N&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case w:e:{for(var u=i.key,c=s;null!==c;){if(c.key===u){if((u=i.type)===N){if(7===c.tag){n(r,c.sibling),(s=a(c,i.props.children)).return=r,r=s;break e}}else if(c.elementType===u||"object"==typeof u&&null!==u&&u.$$typeof===_&&Gs(u)===c.type){n(r,c.sibling),(s=a(c,i.props)).ref=Us(r,c,i),s.return=r,r=s;break e}n(r,c);break}t(r,c),c=c.sibling}i.type===N?((s=Du(i.props.children,r.mode,l,i.key)).return=r,r=s):((l=Fu(i.type,i.key,i.props,null,r.mode,l)).ref=Us(r,s,i),l.return=r,r=l)}return o(r);case k:e:{for(c=i.key;null!==s;){if(s.key===c){if(4===s.tag&&s.stateNode.containerInfo===i.containerInfo&&s.stateNode.implementation===i.implementation){n(r,s.sibling),(s=a(s,i.children||[])).return=r,r=s;break e}n(r,s);break}t(r,s),s=s.sibling}(s=Lu(i,r.mode,l)).return=r,r=s}return o(r);case _:return e(r,s,(c=i._init)(i._payload),l)}if(te(i))return m(r,s,i,l);if(O(i))return g(r,s,i,l);Vs(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==s&&6===s.tag?(n(r,s.sibling),(s=a(s,i)).return=r,r=s):(n(r,s),(s=Mu(i,r.mode,l)).return=r,r=s),o(r)):n(r,s)}}var js=Hs(!0),qs=Hs(!1),Ks={},Xs=Ia(Ks),Ys=Ia(Ks),Qs=Ia(Ks);function Zs(e){if(e===Ks)throw Error(s(174));return e}function Js(e,t){switch(Ta(Qs,t),Ta(Ys,e),Ta(Xs,Ks),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Sa(Xs),Ta(Xs,t)}function ei(){Sa(Xs),Sa(Ys),Sa(Qs)}function ti(e){Zs(Qs.current);var t=Zs(Xs.current),n=le(t,e.type);t!==n&&(Ta(Ys,e),Ta(Xs,n))}function ni(e){Ys.current===e&&(Sa(Xs),Sa(Ys))}var ri=Ia(0);function ai(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var si=[];function ii(){for(var e=0;e<si.length;e++)si[e]._workInProgressVersionPrimary=null;si.length=0}var oi=v.ReactCurrentDispatcher,li=v.ReactCurrentBatchConfig,ui=0,ci=null,hi=null,pi=null,di=!1,fi=!1,mi=0,gi=0;function yi(){throw Error(s(321))}function bi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function xi(e,t,n,r,a,i){if(ui=i,ci=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,oi.current=null===e||null===e.memoizedState?no:ro,e=n(r,a),fi){i=0;do{if(fi=!1,mi=0,25<=i)throw Error(s(301));i+=1,pi=hi=null,t.updateQueue=null,oi.current=ao,e=n(r,a)}while(fi)}if(oi.current=to,t=null!==hi&&null!==hi.next,ui=0,pi=hi=ci=null,di=!1,t)throw Error(s(300));return e}function vi(){var e=0!==mi;return mi=0,e}function wi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===pi?ci.memoizedState=pi=e:pi=pi.next=e,pi}function ki(){if(null===hi){var e=ci.alternate;e=null!==e?e.memoizedState:null}else e=hi.next;var t=null===pi?ci.memoizedState:pi.next;if(null!==t)pi=t,hi=e;else{if(null===e)throw Error(s(310));e={memoizedState:(hi=e).memoizedState,baseState:hi.baseState,baseQueue:hi.baseQueue,queue:hi.queue,next:null},null===pi?ci.memoizedState=pi=e:pi=pi.next=e}return pi}function Ni(e,t){return"function"==typeof t?t(e):t}function Ii(e){var t=ki(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var r=hi,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var o=a.next;a.next=i.next,i.next=o}r.baseQueue=a=i,n.pending=null}if(null!==a){i=a.next,r=r.baseState;var l=o=null,u=null,c=i;do{var h=c.lane;if((ui&h)===h)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var p={lane:h,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=p,o=r):u=u.next=p,ci.lanes|=h,Fl|=h}c=c.next}while(null!==c&&c!==i);null===u?o=r:u.next=l,or(r,t.memoizedState)||(wo=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{i=a.lane,ci.lanes|=i,Fl|=i,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Si(e){var t=ki(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var o=a=a.next;do{i=e(i,o.action),o=o.next}while(o!==a);or(i,t.memoizedState)||(wo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function Ti(){}function Ci(e,t){var n=ci,r=ki(),a=t(),i=!or(r.memoizedState,a);if(i&&(r.memoizedState=a,wo=!0),r=r.queue,zi(Ri.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==pi&&1&pi.memoizedState.tag){if(n.flags|=2048,Fi(9,$i.bind(null,n,r,a,t),void 0,null),null===Tl)throw Error(s(349));0!=(30&ui)||Ei(n,t,a)}return a}function Ei(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ci.updateQueue)?(t={lastEffect:null,stores:null},ci.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function $i(e,t,n,r){t.value=n,t.getSnapshot=r,Ai(t)&&Jl(e,1,-1)}function Ri(e,t,n){return n((function(){Ai(t)&&Jl(e,1,-1)}))}function Ai(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!or(e,n)}catch(e){return!0}}function _i(e){var t=wi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ni,lastRenderedState:e},t.queue=e,e=e.dispatch=Yi.bind(null,ci,e),[t.memoizedState,e]}function Fi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ci.updateQueue)?(t={lastEffect:null,stores:null},ci.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Di(){return ki().memoizedState}function Oi(e,t,n,r){var a=wi();ci.flags|=e,a.memoizedState=Fi(1|t,n,void 0,void 0===r?null:r)}function Mi(e,t,n,r){var a=ki();r=void 0===r?null:r;var s=void 0;if(null!==hi){var i=hi.memoizedState;if(s=i.destroy,null!==r&&bi(r,i.deps))return void(a.memoizedState=Fi(t,n,s,r))}ci.flags|=e,a.memoizedState=Fi(1|t,n,s,r)}function Li(e,t){return Oi(8390656,8,e,t)}function zi(e,t){return Mi(2048,8,e,t)}function Pi(e,t){return Mi(4,2,e,t)}function Bi(e,t){return Mi(4,4,e,t)}function Wi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ui(e,t,n){return n=null!=n?n.concat([e]):null,Mi(4,4,Wi.bind(null,t,e),n)}function Vi(){}function Gi(e,t){var n=ki();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&bi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Hi(e,t){var n=ki();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&bi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ji(e,t,n){return 0==(21&ui)?(e.baseState&&(e.baseState=!1,wo=!0),e.memoizedState=n):(or(n,t)||(n=mt(),ci.lanes|=n,Fl|=n,e.baseState=!0),t)}function qi(e,t){var n=xt;xt=0!==n&&4>n?n:4,e(!0);var r=li.transition;li.transition={};try{e(!1),t()}finally{xt=n,li.transition=r}}function Ki(){return ki().memoizedState}function Xi(e,t,n){var r=Zl(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Qi(e)?Zi(t,n):(Ji(e,t,n),null!==(e=Jl(e,r,n=Ql()))&&eo(e,t,r))}function Yi(e,t,n){var r=Zl(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Qi(e))Zi(t,a);else{Ji(e,t,a);var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=s(i,n);if(a.hasEagerState=!0,a.eagerState=o,or(o,i))return}catch(e){}null!==(e=Jl(e,r,n=Ql()))&&eo(e,t,r)}}function Qi(e){var t=e.alternate;return e===ci||null!==t&&t===ci}function Zi(e,t){fi=di=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Ji(e,t,n){tu(e)?(null===(e=t.interleaved)?(n.next=n,null===es?es=[t]:es.push(t)):(n.next=e.next,e.next=n),t.interleaved=n):(null===(e=t.pending)?n.next=n:(n.next=e.next,e.next=n),t.pending=n)}function eo(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,bt(e,n)}}var to={readContext:Ja,useCallback:yi,useContext:yi,useEffect:yi,useImperativeHandle:yi,useInsertionEffect:yi,useLayoutEffect:yi,useMemo:yi,useReducer:yi,useRef:yi,useState:yi,useDebugValue:yi,useDeferredValue:yi,useTransition:yi,useMutableSource:yi,useSyncExternalStore:yi,useId:yi,unstable_isNewReconciler:!1},no={readContext:Ja,useCallback:function(e,t){return wi().memoizedState=[e,void 0===t?null:t],e},useContext:Ja,useEffect:Li,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Oi(4194308,4,Wi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Oi(4194308,4,e,t)},useInsertionEffect:function(e,t){return Oi(4,2,e,t)},useMemo:function(e,t){var n=wi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=wi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Xi.bind(null,ci,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},wi().memoizedState=e},useState:_i,useDebugValue:Vi,useDeferredValue:function(e){return wi().memoizedState=e},useTransition:function(){var e=_i(!1),t=e[0];return e=qi.bind(null,e[1]),wi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ci,a=wi();if(_s){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===Tl)throw Error(s(349));0!=(30&ui)||Ei(r,t,n)}a.memoizedState=n;var i={value:n,getSnapshot:t};return a.queue=i,Li(Ri.bind(null,r,i,e),[e]),r.flags|=2048,Fi(9,$i.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=wi(),t=Tl.identifierPrefix;if(_s){var n=Ss;t=":"+t+"R"+(n=(Is&~(1<<32-it(Is)-1)).toString(32)+n),0<(n=mi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=gi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ro={readContext:Ja,useCallback:Gi,useContext:Ja,useEffect:zi,useImperativeHandle:Ui,useInsertionEffect:Pi,useLayoutEffect:Bi,useMemo:Hi,useReducer:Ii,useRef:Di,useState:function(){return Ii(Ni)},useDebugValue:Vi,useDeferredValue:function(e){return ji(ki(),hi.memoizedState,e)},useTransition:function(){return[Ii(Ni)[0],ki().memoizedState]},useMutableSource:Ti,useSyncExternalStore:Ci,useId:Ki,unstable_isNewReconciler:!1},ao={readContext:Ja,useCallback:Gi,useContext:Ja,useEffect:zi,useImperativeHandle:Ui,useInsertionEffect:Pi,useLayoutEffect:Bi,useMemo:Hi,useReducer:Si,useRef:Di,useState:function(){return Si(Ni)},useDebugValue:Vi,useDeferredValue:function(e){var t=ki();return null===hi?t.memoizedState=e:ji(t,hi.memoizedState,e)},useTransition:function(){return[Si(Ni)[0],ki().memoizedState]},useMutableSource:Ti,useSyncExternalStore:Ci,useId:Ki,unstable_isNewReconciler:!1};function so(e,t){try{var n="",r=t;do{n+=W(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function io(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var oo,lo,uo,co="function"==typeof WeakMap?WeakMap:Map;function ho(e,t,n){(n=as(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wl||(Wl=!0,Ul=r),io(0,t)},n}function po(e,t,n){(n=as(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){io(0,t)}}var s=e.stateNode;return null!==s&&"function"==typeof s.componentDidCatch&&(n.callback=function(){io(0,t),"function"!=typeof r&&(null===Vl?Vl=new Set([this]):Vl.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function fo(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new co;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=Iu.bind(null,e,t,n),t.then(e,e))}function mo(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function go(e,t,n,r,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=as(-1,1)).tag=2,ss(n,t))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}function yo(e,t){if(!_s)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function bo(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function xo(e,t,n){var r=t.pendingProps;switch($s(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return bo(t),null;case 1:case 17:return _a(t.type)&&Fa(),bo(t),null;case 3:return r=t.stateNode,ei(),Sa($a),Sa(Ea),ii(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ps(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==Fs&&(su(Fs),Fs=null))),bo(t),null;case 5:ni(t);var a=Zs(Qs.current);if(n=t.type,null!==e&&null!=t.stateNode)lo(e,t,n,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(s(166));return bo(t),null}if(e=Zs(Xs.current),Ps(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[pa]=t,r[da]=i,e=0!=(1&t.mode),n){case"dialog":Pr("cancel",r),Pr("close",r);break;case"iframe":case"object":case"embed":Pr("load",r);break;case"video":case"audio":for(a=0;a<Or.length;a++)Pr(Or[a],r);break;case"source":Pr("error",r);break;case"img":case"image":case"link":Pr("error",r),Pr("load",r);break;case"details":Pr("toggle",r);break;case"input":Y(r,i),Pr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Pr("invalid",r);break;case"textarea":ae(r,i),Pr("invalid",r)}for(var l in be(n,i),a=null,i)if(i.hasOwnProperty(l)){var u=i[l];"children"===l?"string"==typeof u?r.textContent!==u&&(!0!==i.suppressHydrationWarning&&Zr(r.textContent,u,e),a=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(!0!==i.suppressHydrationWarning&&Zr(r.textContent,u,e),a=["children",""+u]):o.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&Pr("scroll",r)}switch(n){case"input":j(r),J(r,i,!0);break;case"textarea":j(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Jr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[pa]=t,e[da]=r,oo(e,t),t.stateNode=e;e:{switch(l=xe(n,r),n){case"dialog":Pr("cancel",e),Pr("close",e),a=r;break;case"iframe":case"object":case"embed":Pr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Or.length;a++)Pr(Or[a],e);a=r;break;case"source":Pr("error",e),a=r;break;case"img":case"image":case"link":Pr("error",e),Pr("load",e),a=r;break;case"details":Pr("toggle",e),a=r;break;case"input":Y(e,r),a=X(e,r),Pr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=L({},r,{value:void 0}),Pr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Pr("invalid",e)}for(i in be(n,a),u=a)if(u.hasOwnProperty(i)){var c=u[i];"style"===i?ge(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&he(e,c):"children"===i?"string"==typeof c?("textarea"!==n||""!==c)&&pe(e,c):"number"==typeof c&&pe(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=c&&"onScroll"===i&&Pr("scroll",e):null!=c&&x(e,i,c,l))}switch(n){case"input":j(e),J(e,r,!1);break;case"textarea":j(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+G(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return bo(t),null;case 6:if(e&&null!=t.stateNode)uo(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(s(166));if(n=Zs(Qs.current),Zs(Xs.current),Ps(t)){if(r=t.stateNode,n=t.memoizedProps,r[pa]=t,(i=r.nodeValue!==n)&&null!==(e=Rs))switch(e.tag){case 3:Zr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,0!=(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[pa]=t,t.stateNode=r}return bo(t),null;case 13:if(Sa(ri),r=t.memoizedState,_s&&null!==As&&0!=(1&t.mode)&&0==(128&t.flags)){for(r=As;r;)r=ua(r.nextSibling);return Bs(),t.flags|=98560,t}if(null!==r&&null!==r.dehydrated){if(r=Ps(t),null===e){if(!r)throw Error(s(318));if(!(r=null!==(r=t.memoizedState)?r.dehydrated:null))throw Error(s(317));r[pa]=t}else Bs(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;return bo(t),null}return null!==Fs&&(su(Fs),Fs=null),0!=(128&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?Ps(t):n=null!==e.memoizedState,r!==n&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&ri.current)?0===Al&&(Al=3):fu())),null!==t.updateQueue&&(t.flags|=4),bo(t),null);case 4:return ei(),null===e&&Ur(t.stateNode.containerInfo),bo(t),null;case 10:return Ya(t.type._context),bo(t),null;case 19:if(Sa(ri),null===(i=t.memoizedState))return bo(t),null;if(r=0!=(128&t.flags),null===(l=i.rendering))if(r)yo(i,!1);else{if(0!==Al||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=ai(e))){for(t.flags|=128,yo(i,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(l=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=l.childLanes,i.lanes=l.lanes,i.child=l.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=l.memoizedProps,i.memoizedState=l.memoizedState,i.updateQueue=l.updateQueue,i.type=l.type,e=l.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ta(ri,1&ri.current|2),t.child}e=e.sibling}null!==i.tail&&Qe()>Pl&&(t.flags|=128,r=!0,yo(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ai(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),yo(i,!0),null===i.tail&&"hidden"===i.tailMode&&!l.alternate&&!_s)return bo(t),null}else 2*Qe()-i.renderingStartTime>Pl&&1073741824!==n&&(t.flags|=128,r=!0,yo(i,!1),t.lanes=4194304);i.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=i.last)?n.sibling=l:t.child=l,i.last=l)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Qe(),t.sibling=null,n=ri.current,Ta(ri,r?1&n|2:1&n),t):(bo(t),null);case 22:case 23:return cu(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&$l)&&(bo(t),6&t.subtreeFlags&&(t.flags|=8192)):bo(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}oo=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},lo=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Zs(Xs.current);var s,i=null;switch(n){case"input":a=X(e,a),r=X(e,r),i=[];break;case"select":a=L({},a,{value:void 0}),r=L({},r,{value:void 0}),i=[];break;case"textarea":a=re(e,a),r=re(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in be(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var l=a[c];for(s in l)l.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(o.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var u=r[c];if(l=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(s in l)!l.hasOwnProperty(s)||u&&u.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in u)u.hasOwnProperty(s)&&l[s]!==u[s]&&(n||(n={}),n[s]=u[s])}else n||(i||(i=[]),i.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(i=i||[]).push(c,u)):"children"===c?"string"!=typeof u&&"number"!=typeof u||(i=i||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(o.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Pr("scroll",e),i||l===u||(i=[])):(i=i||[]).push(c,u))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},uo=function(e,t,n,r){n!==r&&(t.flags|=4)};var vo=v.ReactCurrentOwner,wo=!1;function ko(e,t,n,r){t.child=null===e?qs(t,null,n,r):js(t,e.child,n,r)}function No(e,t,n,r,a){n=n.render;var s=t.ref;return Za(t,a),r=xi(e,t,n,r,s,a),n=vi(),null===e||wo?(_s&&n&&Es(t),t.flags|=1,ko(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Go(e,t,a))}function Io(e,t,n,r,a){if(null===e){var s=n.type;return"function"!=typeof s||Au(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fu(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,So(e,t,s,r,a))}if(s=e.child,0==(e.lanes&a)){var i=s.memoizedProps;if((n=null!==(n=n.compare)?n:lr)(i,r)&&e.ref===t.ref)return Go(e,t,a)}return t.flags|=1,(e=_u(s,r)).ref=t.ref,e.return=t,t.child=e}function So(e,t,n,r,a){if(null!==e){var s=e.memoizedProps;if(lr(s,r)&&e.ref===t.ref){if(wo=!1,t.pendingProps=r=s,0==(e.lanes&a))return t.lanes=e.lanes,Go(e,t,a);0!=(131072&e.flags)&&(wo=!0)}}return Eo(e,t,n,r,a)}function To(e,t,n){var r=t.pendingProps,a=r.children,s=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ta(Rl,$l),$l|=n;else{if(0==(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ta(Rl,$l),$l|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==s?s.baseLanes:n,Ta(Rl,$l),$l|=r}else null!==s?(r=s.baseLanes|n,t.memoizedState=null):r=n,Ta(Rl,$l),$l|=r;return ko(e,t,a,n),t.child}function Co(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Eo(e,t,n,r,a){var s=_a(n)?Ra:Ea.current;return s=Aa(t,s),Za(t,a),n=xi(e,t,n,r,s,a),r=vi(),null===e||wo?(_s&&r&&Es(t),t.flags|=1,ko(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Go(e,t,a))}function $o(e,t,n,r,a){if(_a(n)){var s=!0;Ma(t)}else s=!1;if(Za(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),fs(t,n,r),gs(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,u=n.contextType;u="object"==typeof u&&null!==u?Ja(u):Aa(t,u=_a(n)?Ra:Ea.current);var c=n.getDerivedStateFromProps,h="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;h||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==r||l!==u)&&ms(t,i,r,u),ts=!1;var p=t.memoizedState;i.state=p,ls(t,r,i,a),l=t.memoizedState,o!==r||p!==l||$a.current||ts?("function"==typeof c&&(hs(t,n,c,r),l=t.memoizedState),(o=ts||ds(t,n,o,r,p,l,u))?(h||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=u,r=o):("function"==typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,rs(e,t),o=t.memoizedProps,u=t.type===t.elementType?o:Ga(t.type,o),i.props=u,h=t.pendingProps,p=i.context,l="object"==typeof(l=n.contextType)&&null!==l?Ja(l):Aa(t,l=_a(n)?Ra:Ea.current);var d=n.getDerivedStateFromProps;(c="function"==typeof d||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==h||p!==l)&&ms(t,i,r,l),ts=!1,p=t.memoizedState,i.state=p,ls(t,r,i,a);var f=t.memoizedState;o!==h||p!==f||$a.current||ts?("function"==typeof d&&(hs(t,n,d,r),f=t.memoizedState),(u=ts||ds(t,n,u,r,p,f,l)||!1)?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,f,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,f,l)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=f),i.props=r,i.state=f,i.context=l,r=u):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),r=!1)}return Ro(e,t,n,r,s,a)}function Ro(e,t,n,r,a,s){Co(e,t);var i=0!=(128&t.flags);if(!r&&!i)return a&&La(t,n,!1),Go(e,t,s);r=t.stateNode,vo.current=t;var o=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=js(t,e.child,null,s),t.child=js(t,null,o,s)):ko(e,t,o,s),t.memoizedState=r.state,a&&La(t,n,!0),t.child}function Ao(e){var t=e.stateNode;t.pendingContext?Da(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Da(0,t.context,!1),Js(e,t.containerInfo)}function _o(e,t,n,r,a){return Bs(),Ws(a),t.flags|=256,ko(e,t,n,r),t.child}var Fo={dehydrated:null,treeContext:null,retryLane:0};function Do(e){return{baseLanes:e,cachePool:null,transitions:null}}function Oo(e,t){return{baseLanes:e.baseLanes|t,cachePool:null,transitions:e.transitions}}function Mo(e,t,n){var r,a=t.pendingProps,i=ri.current,o=!1,l=0!=(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Ta(ri,1&i),null===e)return Ls(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(i=a.children,e=a.fallback,o?(a=t.mode,o=t.child,i={mode:"hidden",children:i},0==(1&a)&&null!==o?(o.childLanes=0,o.pendingProps=i):o=Ou(i,a,0,null),e=Du(e,a,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Do(n),t.memoizedState=Fo,e):Lo(t,i));if(null!==(i=e.memoizedState)){if(null!==(r=i.dehydrated)){if(l)return 256&t.flags?(t.flags&=-257,Bo(e,t,n,Error(s(422)))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,i=t.mode,a=Ou({mode:"visible",children:a.children},i,0,null),(o=Du(o,i,n,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!=(1&t.mode)&&js(t,e.child,null,n),t.child.memoizedState=Do(n),t.memoizedState=Fo,o);if(0==(1&t.mode))t=Bo(e,t,n,null);else if("$!"===r.data)t=Bo(e,t,n,Error(s(419)));else if(a=0!=(n&e.childLanes),wo||a){if(null!==(a=Tl)){switch(n&-n){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}0!==(a=0!=(o&(a.suspendedLanes|n))?0:o)&&a!==i.retryLane&&(i.retryLane=a,Jl(e,a,-1))}fu(),t=Bo(e,t,n,Error(s(421)))}else"$?"===r.data?(t.flags|=128,t.child=e.child,t=Tu.bind(null,e),r._reactRetry=t,t=null):(n=i.treeContext,As=ua(r.nextSibling),Rs=t,_s=!0,Fs=null,null!==n&&(ws[ks++]=Is,ws[ks++]=Ss,ws[ks++]=Ns,Is=n.id,Ss=n.overflow,Ns=t),(t=Lo(t,t.pendingProps.children)).flags|=4096);return t}return o?(a=Po(e,t,a.children,a.fallback,n),o=t.child,i=e.child.memoizedState,o.memoizedState=null===i?Do(n):Oo(i,n),o.childLanes=e.childLanes&~n,t.memoizedState=Fo,a):(n=zo(e,t,a.children,n),t.memoizedState=null,n)}return o?(a=Po(e,t,a.children,a.fallback,n),o=t.child,i=e.child.memoizedState,o.memoizedState=null===i?Do(n):Oo(i,n),o.childLanes=e.childLanes&~n,t.memoizedState=Fo,a):(n=zo(e,t,a.children,n),t.memoizedState=null,n)}function Lo(e,t){return(t=Ou({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function zo(e,t,n,r){var a=e.child;return e=a.sibling,n=_u(a,{mode:"visible",children:n}),0==(1&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=n}function Po(e,t,n,r,a){var s=t.mode,i=(e=e.child).sibling,o={mode:"hidden",children:n};return 0==(1&s)&&t.child!==e?((n=t.child).childLanes=0,n.pendingProps=o,t.deletions=null):(n=_u(e,o)).subtreeFlags=14680064&e.subtreeFlags,null!==i?r=_u(i,r):(r=Du(r,s,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}function Bo(e,t,n,r){return null!==r&&Ws(r),js(t,e.child,null,n),(e=Lo(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wo(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Qa(e.return,t,n)}function Uo(e,t,n,r,a){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=r,s.tail=n,s.tailMode=a)}function Vo(e,t,n){var r=t.pendingProps,a=r.revealOrder,s=r.tail;if(ko(e,t,r.children,n),0!=(2&(r=ri.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wo(e,n,t);else if(19===e.tag)Wo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Ta(ri,r),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ai(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Uo(t,!1,a,n,s);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ai(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Uo(t,!0,n,null,s);break;case"together":Uo(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Go(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Fl|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=_u(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=_u(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ho(e,t){switch($s(t),t.tag){case 1:return _a(t.type)&&Fa(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ei(),Sa($a),Sa(Ea),ii(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return ni(t),null;case 13:if(Sa(ri),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));Bs()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Sa(ri),null;case 4:return ei(),null;case 10:return Ya(t.type._context),null;case 22:case 23:return cu(),null;default:return null}}var jo=!1,qo=!1,Ko="function"==typeof WeakSet?WeakSet:Set,Xo=null;function Yo(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Nu(e,t,n)}else n.current=null}function Qo(e,t,n){try{n()}catch(n){Nu(e,t,n)}}var Zo=!1;function Jo(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var s=a.destroy;a.destroy=void 0,void 0!==s&&Qo(t,n,s)}a=a.next}while(a!==r)}}function el(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function tl(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function nl(e){var t=e.alternate;null!==t&&(e.alternate=null,nl(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[pa],delete t[da],delete t[ma],delete t[ga],delete t[ya]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function rl(e){return 5===e.tag||3===e.tag||4===e.tag}function al(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||rl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function sl(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(sl(e,t,n),e=e.sibling;null!==e;)sl(e,t,n),e=e.sibling}function il(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(il(e,t,n),e=e.sibling;null!==e;)il(e,t,n),e=e.sibling}var ol=null,ll=!1;function ul(e,t,n){for(n=n.child;null!==n;)cl(e,t,n),n=n.sibling}function cl(e,t,n){if(st&&"function"==typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:qo||Yo(n,t);case 6:var r=ol,a=ll;ol=null,ul(e,t,n),ll=a,null!==(ol=r)&&(ll?(e=ol,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):ol.removeChild(n.stateNode));break;case 18:null!==ol&&(ll?(e=ol,n=n.stateNode,8===e.nodeType?la(e.parentNode,n):1===e.nodeType&&la(e,n),Ut(e)):la(ol,n.stateNode));break;case 4:r=ol,a=ll,ol=n.stateNode.containerInfo,ll=!0,ul(e,t,n),ol=r,ll=a;break;case 0:case 11:case 14:case 15:if(!qo&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var s=a,i=s.destroy;s=s.tag,void 0!==i&&(0!=(2&s)||0!=(4&s))&&Qo(n,t,i),a=a.next}while(a!==r)}ul(e,t,n);break;case 1:if(!qo&&(Yo(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Nu(n,t,e)}ul(e,t,n);break;case 21:ul(e,t,n);break;case 22:1&n.mode?(qo=(r=qo)||null!==n.memoizedState,ul(e,t,n),qo=r):ul(e,t,n);break;default:ul(e,t,n)}}function hl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Ko),t.forEach((function(t){var r=Cu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function pl(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var i=e,o=t,l=o;e:for(;null!==l;){switch(l.tag){case 5:ol=l.stateNode,ll=!1;break e;case 3:case 4:ol=l.stateNode.containerInfo,ll=!0;break e}l=l.return}if(null===ol)throw Error(s(160));cl(i,o,a),ol=null,ll=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(e){Nu(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)dl(t,e),t=t.sibling}function dl(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(pl(t,e),fl(e),4&r){try{Jo(3,e,e.return),el(3,e)}catch(t){Nu(e,e.return,t)}try{Jo(5,e,e.return)}catch(t){Nu(e,e.return,t)}}break;case 1:pl(t,e),fl(e),512&r&&null!==n&&Yo(n,n.return);break;case 5:if(pl(t,e),fl(e),512&r&&null!==n&&Yo(n,n.return),32&e.flags){var a=e.stateNode;try{pe(a,"")}catch(t){Nu(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var i=e.memoizedProps,o=null!==n?n.memoizedProps:i,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===i.type&&null!=i.name&&Q(a,i),xe(l,o);var c=xe(l,i);for(o=0;o<u.length;o+=2){var h=u[o],p=u[o+1];"style"===h?ge(a,p):"dangerouslySetInnerHTML"===h?he(a,p):"children"===h?pe(a,p):x(a,h,p,c)}switch(l){case"input":Z(a,i);break;case"textarea":se(a,i);break;case"select":var d=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var f=i.value;null!=f?ne(a,!!i.multiple,f,!1):d!==!!i.multiple&&(null!=i.defaultValue?ne(a,!!i.multiple,i.defaultValue,!0):ne(a,!!i.multiple,i.multiple?[]:"",!1))}a[da]=i}catch(t){Nu(e,e.return,t)}}break;case 6:if(pl(t,e),fl(e),4&r){if(null===e.stateNode)throw Error(s(162));c=e.stateNode,h=e.memoizedProps;try{c.nodeValue=h}catch(t){Nu(e,e.return,t)}}break;case 3:if(pl(t,e),fl(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(t){Nu(e,e.return,t)}break;case 4:default:pl(t,e),fl(e);break;case 13:pl(t,e),fl(e),8192&(c=e.child).flags&&null!==c.memoizedState&&(null===c.alternate||null===c.alternate.memoizedState)&&(zl=Qe()),4&r&&hl(e);break;case 22:if(c=null!==n&&null!==n.memoizedState,1&e.mode?(qo=(h=qo)||c,pl(t,e),qo=h):pl(t,e),fl(e),8192&r){h=null!==e.memoizedState;e:for(p=null,d=e;;){if(5===d.tag){if(null===p){p=d;try{a=d.stateNode,h?"function"==typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(l=d.stateNode,o=null!=(u=d.memoizedProps.style)&&u.hasOwnProperty("display")?u.display:null,l.style.display=me("display",o))}catch(t){Nu(e,e.return,t)}}}else if(6===d.tag){if(null===p)try{d.stateNode.nodeValue=h?"":d.memoizedProps}catch(t){Nu(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;p===d&&(p=null),d=d.return}p===d&&(p=null),d.sibling.return=d.return,d=d.sibling}if(h&&!c&&0!=(1&e.mode))for(Xo=e,e=e.child;null!==e;){for(c=Xo=e;null!==Xo;){switch(p=(h=Xo).child,h.tag){case 0:case 11:case 14:case 15:Jo(4,h,h.return);break;case 1:if(Yo(h,h.return),"function"==typeof(i=h.stateNode).componentWillUnmount){d=h,f=h.return;try{a=d,i.props=a.memoizedProps,i.state=a.memoizedState,i.componentWillUnmount()}catch(e){Nu(d,f,e)}}break;case 5:Yo(h,h.return);break;case 22:if(null!==h.memoizedState){bl(c);continue}}null!==p?(p.return=h,Xo=p):bl(c)}e=e.sibling}}break;case 19:pl(t,e),fl(e),4&r&&hl(e);case 21:}}function fl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(rl(n)){var r=n;break e}n=n.return}throw Error(s(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(pe(a,""),r.flags&=-33),il(e,al(e),a);break;case 3:case 4:var i=r.stateNode.containerInfo;sl(e,al(e),i);break;default:throw Error(s(161))}}catch(t){Nu(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function ml(e,t,n){Xo=e,gl(e,t,n)}function gl(e,t,n){for(var r=0!=(1&e.mode);null!==Xo;){var a=Xo,s=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||jo;if(!i){var o=a.alternate,l=null!==o&&null!==o.memoizedState||qo;o=jo;var u=qo;if(jo=i,(qo=l)&&!u)for(Xo=a;null!==Xo;)l=(i=Xo).child,22===i.tag&&null!==i.memoizedState?xl(a):null!==l?(l.return=i,Xo=l):xl(a);for(;null!==s;)Xo=s,gl(s,t,n),s=s.sibling;Xo=a,jo=o,qo=u}yl(e)}else 0!=(8772&a.subtreeFlags)&&null!==s?(s.return=a,Xo=s):yl(e)}}function yl(e){for(;null!==Xo;){var t=Xo;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:qo||el(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!qo)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:Ga(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&us(t,i,r);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}us(t,o,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var h=c.memoizedState;if(null!==h){var p=h.dehydrated;null!==p&&Ut(p)}}}break;default:throw Error(s(163))}qo||512&t.flags&&tl(t)}catch(e){Nu(t,t.return,e)}}if(t===e){Xo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Xo=n;break}Xo=t.return}}function bl(e){for(;null!==Xo;){var t=Xo;if(t===e){Xo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Xo=n;break}Xo=t.return}}function xl(e){for(;null!==Xo;){var t=Xo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{el(4,t)}catch(e){Nu(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){Nu(t,a,e)}}var s=t.return;try{tl(t)}catch(e){Nu(t,s,e)}break;case 5:var i=t.return;try{tl(t)}catch(e){Nu(t,i,e)}}}catch(e){Nu(t,t.return,e)}if(t===e){Xo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Xo=o;break}Xo=t.return}}var vl,wl=Math.ceil,kl=v.ReactCurrentDispatcher,Nl=v.ReactCurrentOwner,Il=v.ReactCurrentBatchConfig,Sl=0,Tl=null,Cl=null,El=0,$l=0,Rl=Ia(0),Al=0,_l=null,Fl=0,Dl=0,Ol=0,Ml=null,Ll=null,zl=0,Pl=1/0,Bl=null,Wl=!1,Ul=null,Vl=null,Gl=!1,Hl=null,jl=0,ql=0,Kl=null,Xl=-1,Yl=0;function Ql(){return 0!=(6&Sl)?Qe():-1!==Xl?Xl:Xl=Qe()}function Zl(e){return 0==(1&e.mode)?1:0!=(2&Sl)&&0!==El?El&-El:null!==Va.transition?(0===Yl&&(Yl=mt()),Yl):0!==(e=xt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function Jl(e,t,n){if(50<ql)throw ql=0,Kl=null,Error(s(185));var r=eu(e,t);return null===r?null:(yt(r,t,n),0!=(2&Sl)&&r===Tl||(r===Tl&&(0==(2&Sl)&&(Dl|=t),4===Al&&iu(r,El)),nu(r,n),1===t&&0===Sl&&0==(1&e.mode)&&(Pl=Qe()+500,Pa&&Ua())),r)}function eu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function tu(e){return(null!==Tl||null!==es)&&0!=(1&e.mode)&&0==(2&Sl)}function nu(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,s=e.pendingLanes;0<s;){var i=31-it(s),o=1<<i,l=a[i];-1===l?0!=(o&n)&&0==(o&r)||(a[i]=dt(o,t)):l<=t&&(e.expiredLanes|=o),s&=~o}}(e,t);var r=pt(e,e===Tl?El:0);if(0===r)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Pa=!0,Wa(e)}(ou.bind(null,e)):Wa(ou.bind(null,e)),ia((function(){0===Sl&&Ua()})),n=null;else{switch(vt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Eu(n,ru.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ru(e,t){if(Xl=-1,Yl=0,0!=(6&Sl))throw Error(s(327));var n=e.callbackNode;if(wu()&&e.callbackNode!==n)return null;var r=pt(e,e===Tl?El:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=mu(e,r);else{t=r;var a=Sl;Sl|=2;var i=du();for(Tl===e&&El===t||(Bl=null,Pl=Qe()+500,hu(e,t));;)try{yu();break}catch(t){pu(e,t)}Xa(),kl.current=i,Sl=a,null!==Cl?t=0:(Tl=null,El=0,t=Al)}if(0!==t){if(2===t&&0!==(a=ft(e))&&(r=a,t=au(e,a)),1===t)throw n=_l,hu(e,0),iu(e,r),nu(e,Qe()),n;if(6===t)iu(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],s=a.getSnapshot;a=a.value;try{if(!or(s(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=mu(e,r))&&0!==(i=ft(e))&&(r=i,t=au(e,i)),1===t))throw n=_l,hu(e,0),iu(e,r),nu(e,Qe()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(s(345));case 2:case 5:vu(e,Ll,Bl);break;case 3:if(iu(e,r),(130023424&r)===r&&10<(t=zl+500-Qe())){if(0!==pt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){Ql(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(vu.bind(null,e,Ll,Bl),t);break}vu(e,Ll,Bl);break;case 4:if(iu(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var o=31-it(r);i=1<<o,(o=t[o])>a&&(a=o),r&=~i}if(r=a,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*wl(r/1960))-r)){e.timeoutHandle=ra(vu.bind(null,e,Ll,Bl),r);break}vu(e,Ll,Bl);break;default:throw Error(s(329))}}}return nu(e,Qe()),e.callbackNode===n?ru.bind(null,e):null}function au(e,t){var n=Ml;return e.current.memoizedState.isDehydrated&&(hu(e,t).flags|=256),2!==(e=mu(e,t))&&(t=Ll,Ll=n,null!==t&&su(t)),e}function su(e){null===Ll?Ll=e:Ll.push.apply(Ll,e)}function iu(e,t){for(t&=~Ol,t&=~Dl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function ou(e){if(0!=(6&Sl))throw Error(s(327));wu();var t=pt(e,0);if(0==(1&t))return nu(e,Qe()),null;var n=mu(e,t);if(0!==e.tag&&2===n){var r=ft(e);0!==r&&(t=r,n=au(e,r))}if(1===n)throw n=_l,hu(e,0),iu(e,t),nu(e,Qe()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,vu(e,Ll,Bl),nu(e,Qe()),null}function lu(e,t){var n=Sl;Sl|=1;try{return e(t)}finally{0===(Sl=n)&&(Pl=Qe()+500,Pa&&Ua())}}function uu(e){null!==Hl&&0===Hl.tag&&0==(6&Sl)&&wu();var t=Sl;Sl|=1;var n=Il.transition,r=xt;try{if(Il.transition=null,xt=1,e)return e()}finally{xt=r,Il.transition=n,0==(6&(Sl=t))&&Ua()}}function cu(){$l=Rl.current,Sa(Rl)}function hu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Cl)for(n=Cl.return;null!==n;){var r=n;switch($s(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Fa();break;case 3:ei(),Sa($a),Sa(Ea),ii();break;case 5:ni(r);break;case 4:ei();break;case 13:case 19:Sa(ri);break;case 10:Ya(r.type._context);break;case 22:case 23:cu()}n=n.return}if(Tl=e,Cl=e=_u(e.current,null),El=$l=t,Al=0,_l=null,Ol=Dl=Fl=0,Ll=Ml=null,null!==es){for(t=0;t<es.length;t++)if(null!==(r=(n=es[t]).interleaved)){n.interleaved=null;var a=r.next,s=n.pending;if(null!==s){var i=s.next;s.next=a,r.next=i}n.pending=r}es=null}return e}function pu(e,t){for(;;){var n=Cl;try{if(Xa(),oi.current=to,di){for(var r=ci.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}di=!1}if(ui=0,pi=hi=ci=null,fi=!1,mi=0,Nl.current=null,null===n||null===n.return){Al=1,_l=t,Cl=null;break}e:{var i=e,o=n.return,l=n,u=t;if(t=El,l.flags|=32768,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u,h=l,p=h.tag;if(0==(1&h.mode)&&(0===p||11===p||15===p)){var d=h.alternate;d?(h.updateQueue=d.updateQueue,h.memoizedState=d.memoizedState,h.lanes=d.lanes):(h.updateQueue=null,h.memoizedState=null)}var f=mo(o);if(null!==f){f.flags&=-257,go(f,o,l,0,t),1&f.mode&&fo(i,c,t),u=c;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(u),t.updateQueue=g}else m.add(u);break e}if(0==(1&t)){fo(i,c,t),fu();break e}u=Error(s(426))}else if(_s&&1&l.mode){var y=mo(o);if(null!==y){0==(65536&y.flags)&&(y.flags|=256),go(y,o,l,0,t),Ws(u);break e}}i=u,4!==Al&&(Al=2),null===Ml?Ml=[i]:Ml.push(i),u=so(u,l),l=o;do{switch(l.tag){case 3:l.flags|=65536,t&=-t,l.lanes|=t,os(l,ho(0,u,t));break e;case 1:i=u;var b=l.type,x=l.stateNode;if(0==(128&l.flags)&&("function"==typeof b.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===Vl||!Vl.has(x)))){l.flags|=65536,t&=-t,l.lanes|=t,os(l,po(l,i,t));break e}}l=l.return}while(null!==l)}xu(n)}catch(e){t=e,Cl===n&&null!==n&&(Cl=n=n.return);continue}break}}function du(){var e=kl.current;return kl.current=to,null===e?to:e}function fu(){0!==Al&&3!==Al&&2!==Al||(Al=4),null===Tl||0==(268435455&Fl)&&0==(268435455&Dl)||iu(Tl,El)}function mu(e,t){var n=Sl;Sl|=2;var r=du();for(Tl===e&&El===t||(Bl=null,hu(e,t));;)try{gu();break}catch(t){pu(e,t)}if(Xa(),Sl=n,kl.current=r,null!==Cl)throw Error(s(261));return Tl=null,El=0,Al}function gu(){for(;null!==Cl;)bu(Cl)}function yu(){for(;null!==Cl&&!Xe();)bu(Cl)}function bu(e){var t=vl(e.alternate,e,$l);e.memoizedProps=e.pendingProps,null===t?xu(e):Cl=t,Nl.current=null}function xu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=xo(n,t,$l)))return void(Cl=n)}else{if(null!==(n=Ho(n,t)))return n.flags&=32767,void(Cl=n);if(null===e)return Al=6,void(Cl=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Cl=t);Cl=t=e}while(null!==t);0===Al&&(Al=5)}function vu(e,t,n){var r=xt,a=Il.transition;try{Il.transition=null,xt=1,function(e,t,n,r){do{wu()}while(null!==Hl);if(0!=(6&Sl))throw Error(s(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-it(n),s=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~s}}(e,i),e===Tl&&(Cl=Tl=null,El=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Gl||(Gl=!0,Eu(tt,(function(){return wu(),null}))),i=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||i){i=Il.transition,Il.transition=null;var o=xt;xt=1;var l=Sl;Sl|=4,Nl.current=null,function(e,t){if(ea=Gt,dr(e=pr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(e){n=null;break e}var o=0,l=-1,u=-1,c=0,h=0,p=e,d=null;t:for(;;){for(var f;p!==n||0!==a&&3!==p.nodeType||(l=o+a),p!==i||0!==r&&3!==p.nodeType||(u=o+r),3===p.nodeType&&(o+=p.nodeValue.length),null!==(f=p.firstChild);)d=p,p=f;for(;;){if(p===e)break t;if(d===n&&++c===a&&(l=o),d===i&&++h===r&&(u=o),null!==(f=p.nextSibling))break;d=(p=d).parentNode}p=f}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Gt=!1,Xo=t;null!==Xo;)if(e=(t=Xo).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Xo=e;else for(;null!==Xo;){t=Xo;try{var m=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,x=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:Ga(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var v=t.stateNode.containerInfo;if(1===v.nodeType)v.textContent="";else if(9===v.nodeType){var w=v.body;null!=w&&(w.textContent="")}break;default:throw Error(s(163))}}catch(e){Nu(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Xo=e;break}Xo=t.return}m=Zo,Zo=!1}(e,n),dl(n,e),fr(ta),Gt=!!ea,ta=ea=null,e.current=n,ml(n,e,a),Ye(),Sl=l,xt=o,Il.transition=i}else e.current=n;if(Gl&&(Gl=!1,Hl=e,jl=a),0===(i=e.pendingLanes)&&(Vl=null),function(e){if(st&&"function"==typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(at,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),nu(e,Qe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r(t[n]);if(Wl)throw Wl=!1,e=Ul,Ul=null,e;0!=(1&jl)&&0!==e.tag&&wu(),0!=(1&(i=e.pendingLanes))?e===Kl?ql++:(ql=0,Kl=e):ql=0,Ua()}(e,t,n,r)}finally{Il.transition=a,xt=r}return null}function wu(){if(null!==Hl){var e=vt(jl),t=Il.transition,n=xt;try{if(Il.transition=null,xt=16>e?16:e,null===Hl)var r=!1;else{if(e=Hl,Hl=null,jl=0,0!=(6&Sl))throw Error(s(331));var a=Sl;for(Sl|=4,Xo=e.current;null!==Xo;){var i=Xo,o=i.child;if(0!=(16&Xo.flags)){var l=i.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for(Xo=c;null!==Xo;){var h=Xo;switch(h.tag){case 0:case 11:case 15:Jo(8,h,i)}var p=h.child;if(null!==p)p.return=h,Xo=p;else for(;null!==Xo;){var d=(h=Xo).sibling,f=h.return;if(nl(h),h===c){Xo=null;break}if(null!==d){d.return=f,Xo=d;break}Xo=f}}}var m=i.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Xo=i}}if(0!=(2064&i.subtreeFlags)&&null!==o)o.return=i,Xo=o;else e:for(;null!==Xo;){if(0!=(2048&(i=Xo).flags))switch(i.tag){case 0:case 11:case 15:Jo(9,i,i.return)}var b=i.sibling;if(null!==b){b.return=i.return,Xo=b;break e}Xo=i.return}}var x=e.current;for(Xo=x;null!==Xo;){var v=(o=Xo).child;if(0!=(2064&o.subtreeFlags)&&null!==v)v.return=o,Xo=v;else e:for(o=x;null!==Xo;){if(0!=(2048&(l=Xo).flags))try{switch(l.tag){case 0:case 11:case 15:el(9,l)}}catch(e){Nu(l,l.return,e)}if(l===o){Xo=null;break e}var w=l.sibling;if(null!==w){w.return=l.return,Xo=w;break e}Xo=l.return}}if(Sl=a,Ua(),st&&"function"==typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{xt=n,Il.transition=t}}return!1}function ku(e,t,n){ss(e,t=ho(0,t=so(n,t),1)),t=Ql(),null!==(e=eu(e,1))&&(yt(e,1,t),nu(e,t))}function Nu(e,t,n){if(3===e.tag)ku(e,e,n);else for(;null!==t;){if(3===t.tag){ku(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Vl||!Vl.has(r))){ss(t,e=po(t,e=so(n,e),1)),e=Ql(),null!==(t=eu(t,1))&&(yt(t,1,e),nu(t,e));break}}t=t.return}}function Iu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=Ql(),e.pingedLanes|=e.suspendedLanes&n,Tl===e&&(El&n)===n&&(4===Al||3===Al&&(130023424&El)===El&&500>Qe()-zl?hu(e,0):Ol|=n),nu(e,t)}function Su(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ct,0==(130023424&(ct<<=1))&&(ct=4194304)));var n=Ql();null!==(e=eu(e,t))&&(yt(e,t,n),nu(e,n))}function Tu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Su(e,n)}function Cu(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(s(314))}null!==r&&r.delete(t),Su(e,n)}function Eu(e,t){return qe(e,t)}function $u(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ru(e,t,n,r){return new $u(e,t,n,r)}function Au(e){return!(!(e=e.prototype)||!e.isReactComponent)}function _u(e,t){var n=e.alternate;return null===n?((n=Ru(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fu(e,t,n,r,a,i){var o=2;if(r=e,"function"==typeof e)Au(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case N:return Du(n.children,a,i,t);case I:o=8,a|=8;break;case S:return(e=Ru(12,n,t,2|a)).elementType=S,e.lanes=i,e;case $:return(e=Ru(13,n,t,a)).elementType=$,e.lanes=i,e;case R:return(e=Ru(19,n,t,a)).elementType=R,e.lanes=i,e;case F:return Ou(n,a,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case T:o=10;break e;case C:o=9;break e;case E:o=11;break e;case A:o=14;break e;case _:o=16,r=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Ru(o,n,t,a)).elementType=e,t.type=r,t.lanes=i,t}function Du(e,t,n,r){return(e=Ru(7,e,r,t)).lanes=n,e}function Ou(e,t,n,r){return(e=Ru(22,e,r,t)).elementType=F,e.lanes=n,e.stateNode={},e}function Mu(e,t,n){return(e=Ru(6,e,null,t)).lanes=n,e}function Lu(e,t,n){return(t=Ru(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function zu(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Pu(e,t,n,r,a,s,i,o,l){return e=new zu(e,t,n,o,l),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Ru(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},ns(s),e}function Bu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Wu(e){if(!e)return Ca;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(_a(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(_a(n))return Oa(e,n,t)}return t}function Uu(e,t,n,r,a,s,i,o,l){return(e=Pu(n,r,!0,e,0,s,0,o,l)).context=Wu(null),n=e.current,(s=as(r=Ql(),a=Zl(n))).callback=null!=t?t:null,ss(n,s),e.current.lanes=a,yt(e,a,r),nu(e,r),e}function Vu(e,t,n,r){var a=t.current,s=Ql(),i=Zl(a);return n=Wu(n),null===t.context?t.context=n:t.pendingContext=n,(t=as(s,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ss(a,t),null!==(e=Jl(a,i,s))&&is(e,a,i),i}function Gu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ju(e,t){Hu(e,t),(e=e.alternate)&&Hu(e,t)}vl=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||$a.current)wo=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return wo=!1,function(e,t,n){switch(t.tag){case 3:Ao(t),Bs();break;case 5:ti(t);break;case 1:_a(t.type)&&Ma(t);break;case 4:Js(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;Ta(Ha,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Ta(ri,1&ri.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Mo(e,t,n):(Ta(ri,1&ri.current),null!==(e=Go(e,t,n))?e.sibling:null);Ta(ri,1&ri.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Vo(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Ta(ri,ri.current),r)break;return null;case 22:case 23:return t.lanes=0,To(e,t,n)}return Go(e,t,n)}(e,t,n);wo=0!=(131072&e.flags)}else wo=!1,_s&&0!=(1048576&t.flags)&&Cs(t,vs,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps;var a=Aa(t,Ea.current);Za(t,n),a=xi(null,t,r,e,a,n);var i=vi();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,_a(r)?(i=!0,Ma(t)):i=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ns(t),a.updater=ps,t.stateNode=a,a._reactInternals=t,gs(t,r,e,n),t=Ro(null,t,r,!0,i,n)):(t.tag=0,_s&&i&&Es(t),ko(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Au(e)?1:0;if(null!=e){if((e=e.$$typeof)===E)return 11;if(e===A)return 14}return 2}(r),e=Ga(r,e),a){case 0:t=Eo(null,t,r,e,n);break e;case 1:t=$o(null,t,r,e,n);break e;case 11:t=No(null,t,r,e,n);break e;case 14:t=Io(null,t,r,Ga(r.type,e),n);break e}throw Error(s(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,Eo(e,t,r,a=t.elementType===r?a:Ga(r,a),n);case 1:return r=t.type,a=t.pendingProps,$o(e,t,r,a=t.elementType===r?a:Ga(r,a),n);case 3:e:{if(Ao(t),null===e)throw Error(s(387));r=t.pendingProps,a=(i=t.memoizedState).element,rs(e,t),ls(t,r,null,n);var o=t.memoizedState;if(r=o.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=_o(e,t,r,n,a=Error(s(423)));break e}if(r!==a){t=_o(e,t,r,n,a=Error(s(424)));break e}for(As=ua(t.stateNode.containerInfo.firstChild),Rs=t,_s=!0,Fs=null,n=qs(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(Bs(),r===a){t=Go(e,t,n);break e}ko(e,t,r,n)}t=t.child}return t;case 5:return ti(t),null===e&&Ls(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,o=a.children,na(r,a)?o=null:null!==i&&na(r,i)&&(t.flags|=32),Co(e,t),ko(e,t,o,n),t.child;case 6:return null===e&&Ls(t),null;case 13:return Mo(e,t,n);case 4:return Js(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=js(t,null,r,n):ko(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,No(e,t,r,a=t.elementType===r?a:Ga(r,a),n);case 7:return ko(e,t,t.pendingProps,n),t.child;case 8:case 12:return ko(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,i=t.memoizedProps,o=a.value,Ta(Ha,r._currentValue),r._currentValue=o,null!==i)if(or(i.value,o)){if(i.children===a.children&&!$a.current){t=Go(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var l=i.dependencies;if(null!==l){o=i.child;for(var u=l.firstContext;null!==u;){if(u.context===r){if(1===i.tag){(u=as(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var h=(c=c.shared).pending;null===h?u.next=u:(u.next=h.next,h.next=u),c.pending=u}}i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),Qa(i.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(s(341));o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Qa(o,n,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}ko(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,Za(t,n),r=r(a=Ja(a)),t.flags|=1,ko(e,t,r,n),t.child;case 14:return a=Ga(r=t.type,t.pendingProps),Io(e,t,r,a=Ga(r.type,a),n);case 15:return So(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Ga(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,_a(r)?(e=!0,Ma(t)):e=!1,Za(t,n),fs(t,r,a),gs(t,r,a,n),Ro(null,t,r,!0,e,n);case 19:return Vo(e,t,n);case 22:return To(e,t,n)}throw Error(s(156,t.tag))};var qu="function"==typeof reportError?reportError:function(e){console.error(e)};function Ku(e){this._internalRoot=e}function Xu(e){this._internalRoot=e}function Yu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zu(){}function Ju(e,t,n,r,a){var s=n._reactRootContainer;if(s){var i=s;if("function"==typeof a){var o=a;a=function(){var e=Gu(i);o.call(e)}}Vu(t,i,e,a)}else i=function(e,t,n,r,a){if(a){if("function"==typeof r){var s=r;r=function(){var e=Gu(i);s.call(e)}}var i=Uu(t,r,e,0,null,!1,0,"",Zu);return e._reactRootContainer=i,e[fa]=i.current,Ur(8===e.nodeType?e.parentNode:e),uu(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var o=r;r=function(){var e=Gu(l);o.call(e)}}var l=Pu(e,0,!1,null,0,!1,0,"",Zu);return e._reactRootContainer=l,e[fa]=l.current,Ur(8===e.nodeType?e.parentNode:e),uu((function(){Vu(t,l,n,r)})),l}(n,t,e,a,r);return Gu(i)}Xu.prototype.render=Ku.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Vu(e,t,null,null)},Xu.prototype.unmount=Ku.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;uu((function(){Vu(null,e,null,null)})),t[fa]=null}},Xu.prototype.unstable_scheduleHydration=function(e){if(e){var t=It();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Ft.length&&0!==t&&t<Ft[n].priority;n++);Ft.splice(n,0,e),0===n&&Lt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ht(t.pendingLanes);0!==n&&(bt(t,1|n),nu(t,Qe()),0==(6&Sl)&&(Pl=Qe()+500,Ua()))}break;case 13:var r=Ql();uu((function(){return Jl(e,1,r)})),ju(e,1)}},kt=function(e){13===e.tag&&(Jl(e,134217728,Ql()),ju(e,134217728))},Nt=function(e){if(13===e.tag){var t=Ql(),n=Zl(e);Jl(e,n,t),ju(e,n)}},It=function(){return xt},St=function(e,t){var n=xt;try{return xt=e,t()}finally{xt=n}},ke=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=wa(r);if(!a)throw Error(s(90));q(r),Z(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=lu,$e=uu;var ec={usingClientEntryPoint:!1,Events:[xa,va,wa,Te,Ce,lu]},tc={findFiberByHostInstance:ba,bundleType:0,version:"18.1.0",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:v.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.1.0-next-22edb9f77-20220426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{at=rc.inject(nc),st=rc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Yu(t))throw Error(s(200));return Bu(e,t,null,n)},t.createRoot=function(e,t){if(!Yu(e))throw Error(s(299));var n=!1,r="",a=qu;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Pu(e,1,!1,null,0,n,0,r,a),e[fa]=t.current,Ur(8===e.nodeType?e.parentNode:e),new Ku(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return uu(e)},t.hydrate=function(e,t,n){if(!Qu(t))throw Error(s(200));return Ju(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Yu(e))throw Error(s(405));var r=null!=n&&n.hydratedSources||null,a=!1,i="",o=qu;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=Uu(t,null,e,1,null!=n?n:null,a,0,i,o),e[fa]=t.current,Ur(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Xu(t)},t.render=function(e,t,n){if(!Qu(t))throw Error(s(200));return Ju(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Qu(e))throw Error(s(40));return!!e._reactRootContainer&&(uu((function(){Ju(null,null,e,!1,(function(){e._reactRootContainer=null,e[fa]=null}))})),!0)},t.unstable_batchedUpdates=lu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Qu(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return Ju(e,t,n,!1,r)},t.version="18.1.0-next-22edb9f77-20220426"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},970:function(e,t,n){var r;r=function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(e,t,n){"use strict";n.r(t);var r,a=n("react"),s=(r=function(e,t){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},r(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),i=function(){return i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},i.apply(this,arguments)};function o(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!=typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var t=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return t?new Promise((function(n,r){t.call(navigator,e,n,r)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var l=function(e){function t(t){var n=e.call(this,t)||this;return n.canvas=null,n.ctx=null,n.requestUserMediaId=0,n.unmounted=!1,n.state={hasUserMedia:!1},n}return s(t,e),t.prototype.componentDidMount=function(){var e=this.state,t=this.props;this.unmounted=!1,o()?(e.hasUserMedia||this.requestUserMedia(),t.children&&"function"!=typeof t.children&&console.warn("children must be a function")):t.onUserMediaError("getUserMedia not supported")},t.prototype.componentDidUpdate=function(e){var t=this.props;if(o()){var n=JSON.stringify(e.audioConstraints)!==JSON.stringify(t.audioConstraints),r=JSON.stringify(e.videoConstraints)!==JSON.stringify(t.videoConstraints),a=e.minScreenshotWidth!==t.minScreenshotWidth,s=e.minScreenshotHeight!==t.minScreenshotHeight;(r||a||s)&&(this.canvas=null,this.ctx=null),(n||r)&&(this.stopAndCleanup(),this.requestUserMedia())}else t.onUserMediaError("getUserMedia not supported")},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},t.stopMediaStream=function(e){e&&(e.getVideoTracks&&e.getAudioTracks?(e.getVideoTracks().map((function(t){e.removeTrack(t),t.stop()})),e.getAudioTracks().map((function(t){e.removeTrack(t),t.stop()}))):e.stop())},t.prototype.stopAndCleanup=function(){var e=this.state;e.hasUserMedia&&(t.stopMediaStream(this.stream),e.src&&window.URL.revokeObjectURL(e.src))},t.prototype.getScreenshot=function(e){var t=this.state,n=this.props;if(!t.hasUserMedia)return null;var r=this.getCanvas(e);return r&&r.toDataURL(n.screenshotFormat,n.screenshotQuality)},t.prototype.getCanvas=function(e){var t=this.state,n=this.props;if(!this.video)return null;if(!t.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var r=this.video.videoWidth,a=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var s=r/a;a=(r=n.minScreenshotWidth||this.video.clientWidth)/s,n.minScreenshotHeight&&a<n.minScreenshotHeight&&(r=(a=n.minScreenshotHeight)*s)}this.canvas=document.createElement("canvas"),this.canvas.width=(null==e?void 0:e.width)||r,this.canvas.height=(null==e?void 0:e.height)||a,this.ctx=this.canvas.getContext("2d")}var i=this.ctx,o=this.canvas;return i&&o&&(n.mirrored&&(i.translate(o.width,0),i.scale(-1,1)),i.imageSmoothingEnabled=n.imageSmoothing,i.drawImage(this.video,0,0,(null==e?void 0:e.width)||o.width,(null==e?void 0:e.height)||o.height),n.mirrored&&(i.scale(-1,1),i.translate(-o.width,0))),o},t.prototype.requestUserMedia=function(){var e=this,n=this.props,r=function(r,a){var s={video:void 0===a||a};n.audio&&(s.audio=void 0===r||r),e.requestUserMediaId++;var i=e.requestUserMediaId;navigator.mediaDevices.getUserMedia(s).then((function(n){e.unmounted||i!==e.requestUserMediaId?t.stopMediaStream(n):e.handleUserMedia(null,n)})).catch((function(t){e.handleUserMedia(t)}))};if("mediaDevices"in navigator)r(n.audioConstraints,n.videoConstraints);else{var a=function(e){return{optional:[{sourceId:e}]}},s=function(e){var t=e.deviceId;return"string"==typeof t?t:Array.isArray(t)&&t.length>0?t[0]:"object"==typeof t&&t.ideal?t.ideal:null};MediaStreamTrack.getSources((function(e){var t=null,i=null;e.forEach((function(e){"audio"===e.kind?t=e.id:"video"===e.kind&&(i=e.id)}));var o=s(n.audioConstraints);o&&(t=o);var l=s(n.videoConstraints);l&&(i=l),r(a(t),a(i))}))}},t.prototype.handleUserMedia=function(e,t){var n=this.props;if(e||!t)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(e);this.stream=t;try{this.video&&(this.video.srcObject=t),this.setState({hasUserMedia:!0})}catch(e){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(t)})}n.onUserMedia(t)},t.prototype.render=function(){var e=this,t=this.state,n=this.props,r=n.audio,s=(n.forceScreenshotSourceSize,n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),o=n.style,l=void 0===o?{}:o,u=n.children,c=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(n,["audio","forceScreenshotSourceSize","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),h=s?i(i({},l),{transform:(l.transform||"")+" scaleX(-1)"}):l,p={getScreenshot:this.getScreenshot.bind(this)};return a.createElement(a.Fragment,null,a.createElement("video",i({autoPlay:!0,src:t.src,muted:!r,playsInline:!0,ref:function(t){e.video=t},style:h},c)),u&&u(p))},t.defaultProps={audio:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},t}(a.Component);t.default=l},react:function(t,n){t.exports=e}}).default},e.exports=r(n(294))},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),d=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var v=x.prototype=new b;v.constructor=x,m(v,y.prototype),v.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,N={current:null},I={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,r){var a,s={},i=null,o=null;if(null!=t)for(a in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)k.call(t,a)&&!I.hasOwnProperty(a)&&(s[a]=t[a]);var l=arguments.length-2;if(1===l)s.children=r;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];s.children=u}if(e&&e.defaultProps)for(a in l=e.defaultProps)void 0===s[a]&&(s[a]=l[a]);return{$$typeof:n,type:e,key:i,ref:o,props:s,_owner:N.current}}function T(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function E(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function $(e,t,a,s,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var l=!1;if(null===e)l=!0;else switch(o){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return i=i(l=e),e=""===s?"."+E(l,0):s,w(i)?(a="",null!=e&&(a=e.replace(C,"$&/")+"/"),$(i,t,a,"",(function(e){return e}))):null!=i&&(T(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||l&&l.key===i.key?"":(""+i.key).replace(C,"$&/")+"/")+e)),t.push(i)),1;if(l=0,s=""===s?".":s+":",w(e))for(var u=0;u<e.length;u++){var c=s+E(o=e[u],u);l+=$(o,t,a,c,i)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),u=0;!(o=e.next()).done;)l+=$(o=o.value,t,a,c=s+E(o,u++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function R(e,t,n){if(null==e)return e;var r=[],a=0;return $(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function A(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var _={current:null},F={transition:null},D={ReactCurrentDispatcher:_,ReactCurrentBatchConfig:F,ReactCurrentOwner:N};t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=a,t.Profiler=i,t.PureComponent=x,t.StrictMode=s,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=D,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),s=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=N.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)k.call(t,u)&&!I.hasOwnProperty(u)&&(a[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];a.children=l}return{$$typeof:n,type:e.type,key:s,ref:i,props:a,_owner:o}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:A}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=F.transition;F.transition={};try{e()}finally{F.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return _.current.useCallback(e,t)},t.useContext=function(e){return _.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return _.current.useDeferredValue(e)},t.useEffect=function(e,t){return _.current.useEffect(e,t)},t.useId=function(){return _.current.useId()},t.useImperativeHandle=function(e,t,n){return _.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return _.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return _.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return _.current.useMemo(e,t)},t.useReducer=function(e,t,n){return _.current.useReducer(e,t,n)},t.useRef=function(e){return _.current.useRef(e)},t.useState=function(e){return _.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return _.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return _.current.useTransition()},t.version="18.1.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},666:e=>{var t=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},s=a.iterator||"@@iterator",i=a.asyncIterator||"@@asyncIterator",o=a.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(e){l=function(e,t,n){return e[t]=n}}function u(e,t,n,r){var a=t&&t.prototype instanceof g?t:g,s=Object.create(a.prototype),i=new E(r||[]);return s._invoke=function(e,t,n){var r=h;return function(a,s){if(r===d)throw new Error("Generator is already running");if(r===f){if("throw"===a)throw s;return R()}for(n.method=a,n.arg=s;;){var i=n.delegate;if(i){var o=S(i,n);if(o){if(o===m)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===h)throw r=f,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=d;var l=c(e,t,n);if("normal"===l.type){if(r=n.done?f:p,l.arg===m)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r=f,n.method="throw",n.arg=l.arg)}}}(e,n,i),s}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var h="suspendedStart",p="suspendedYield",d="executing",f="completed",m={};function g(){}function y(){}function b(){}var x={};l(x,s,(function(){return this}));var v=Object.getPrototypeOf,w=v&&v(v($([])));w&&w!==n&&r.call(w,s)&&(x=w);var k=b.prototype=g.prototype=Object.create(x);function N(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function I(e,t){function n(a,s,i,o){var l=c(e[a],e,s);if("throw"!==l.type){var u=l.arg,h=u.value;return h&&"object"==typeof h&&r.call(h,"__await")?t.resolve(h.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(h).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;this._invoke=function(e,r){function s(){return new t((function(t,a){n(e,r,t,a)}))}return a=a?a.then(s,s):s()}}function S(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,S(e,n),"throw"===n.method))return m;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return m}var a=c(r,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,m;var s=a.arg;return s?s.done?(n[e.resultName]=s.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):s:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function C(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function $(e){if(e){var n=e[s];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function n(){for(;++a<e.length;)if(r.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}return{next:R}}function R(){return{value:t,done:!0}}return y.prototype=b,l(k,"constructor",b),l(b,"constructor",y),y.displayName=l(b,o,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,l(e,o,"GeneratorFunction")),e.prototype=Object.create(k),e},e.awrap=function(e){return{__await:e}},N(I.prototype),l(I.prototype,i,(function(){return this})),e.AsyncIterator=I,e.async=function(t,n,r,a,s){void 0===s&&(s=Promise);var i=new I(u(t,n,r,a),s);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},N(k),l(k,o,"Generator"),l(k,s,(function(){return this})),l(k,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=$,E.prototype={constructor:E,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(C),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(r,a){return o.type="throw",o.arg=e,n.next=r,a&&(n.method="next",n.arg=t),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var i=this.tryEntries[s],o=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var s=a;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var i=s?s.completion:{};return i.type=e,i.arg=t,s?(this.method="next",this.next=s.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),C(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;C(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:$(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),m}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<s(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,i=a>>>1;r<i;){var o=2*(r+1)-1,l=e[o],u=o+1,c=e[u];if(0>s(l,n))u<a&&0>s(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[o]=n,r=o);else{if(!(u<a&&0>s(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,l=o.now();t.unstable_now=function(){return o.now()-l}}var u=[],c=[],h=1,p=null,d=3,f=!1,m=!1,g=!1,y="function"==typeof setTimeout?setTimeout:null,b="function"==typeof clearTimeout?clearTimeout:null,x="undefined"!=typeof setImmediate?setImmediate:null;function v(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function w(e){if(g=!1,v(e),!m)if(null!==r(u))m=!0,F(k);else{var t=r(c);null!==t&&D(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(T),T=-1),f=!0;var s=d;try{for(v(n),p=r(u);null!==p&&(!(p.expirationTime>n)||e&&!$());){var i=p.callback;if("function"==typeof i){p.callback=null,d=p.priorityLevel;var o=i(p.expirationTime<=n);n=t.unstable_now(),"function"==typeof o?p.callback=o:p===r(u)&&a(u),v(n)}else a(u);p=r(u)}if(null!==p)var l=!0;else{var h=r(c);null!==h&&D(w,h.startTime-n),l=!1}return l}finally{p=null,d=s,f=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var N,I=!1,S=null,T=-1,C=5,E=-1;function $(){return!(t.unstable_now()-E<C)}function R(){if(null!==S){var e=t.unstable_now();E=e;var n=!0;try{n=S(!0,e)}finally{n?N():(I=!1,S=null)}}else I=!1}if("function"==typeof x)N=function(){x(R)};else if("undefined"!=typeof MessageChannel){var A=new MessageChannel,_=A.port2;A.port1.onmessage=R,N=function(){_.postMessage(null)}}else N=function(){y(R,0)};function F(e){S=e,I||(I=!0,N())}function D(e,n){T=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,F(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return d},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(d){case 1:case 2:case 3:var t=3;break;default:t=d}var n=d;d=t;try{return e()}finally{d=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=d;d=e;try{return t()}finally{d=n}},t.unstable_scheduleCallback=function(e,a,s){var i=t.unstable_now();switch(s="object"==typeof s&&null!==s&&"number"==typeof(s=s.delay)&&0<s?i+s:i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:h++,callback:a,priorityLevel:e,startTime:s,expirationTime:o=s+o,sortIndex:-1},s>i?(e.sortIndex=s,n(c,e),null===r(u)&&e===r(c)&&(g?(b(T),T=-1):g=!0,D(w,s-i))):(e.sortIndex=o,n(u,e),m||f||(m=!0,F(k))),e},t.unstable_shouldYield=$,t.unstable_wrapCallback=function(e){var t=d;return function(){var n=d;d=t;try{return e.apply(this,arguments)}finally{d=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},377:(e,t,n)=>{var r=n(832),a=n(652),s=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=r,u.xor128=a,u.xorwow=s,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,a))||(a.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(a,s){var i,o=this,l=256,u=s.pow(l,6),c=s.pow(2,52),h=2*c,p=255;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(s.random=e,t):e})(x,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<l;)i[a]=a++;for(a=0;a<l;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*l+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,y(s.random(),a),e.exports){e.exports=d;try{i=n(42)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},410:()=>{},628:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>Us,computeFlatOffset:()=>ti,computeOutShape:()=>Gs,getNormalizedAxes:()=>Ks,isSliceContinous:()=>ei,maskToAxes:()=>Vs,parseSliceParams:()=>ni,sliceInfo:()=>ri,startForAxis:()=>Zs,startIndicesWithElidedDims:()=>Xs,stopForAxis:()=>Js,stopIndicesWithElidedDims:()=>Ys,stridesForAxis:()=>Qs,stridesWithElidedDims:()=>Hs});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Qc,computeOutShape:()=>Yc,segOpComputeOptimalWindowSize:()=>Xc});var r={};n.r(r),n.d(r,{ERF_A1:()=>gc,ERF_A2:()=>yc,ERF_A3:()=>bc,ERF_A4:()=>xc,ERF_A5:()=>vc,ERF_P:()=>mc,PARALLELIZE_THRESHOLD:()=>tc,SELU_SCALE:()=>fc,SELU_SCALEALPHA:()=>dc,applyActivation:()=>zl,assertAndGetBroadcastShape:()=>Ps,assertAxesAreInnerMostDims:()=>Mo,assertParamsConsistent:()=>Ju,assignToTypedArray:()=>Tc,axesAreInnerMostDims:()=>_o,calculateShapes:()=>pc,checkEinsumDimSizes:()=>_c,checkPadOnDimRoundingMode:()=>Oi,combineLocations:()=>Fo,complexWithEvenIndex:()=>Nc,complexWithOddIndex:()=>Ic,computeConv2DInfo:()=>Si,computeConv3DInfo:()=>Ti,computeDefaultPad:()=>Ci,computeDilation2DInfo:()=>ki,computeOptimalWindowSize:()=>nc,computeOutAndReduceShapes:()=>Do,computeOutShape:()=>ec,computePool2DInfo:()=>Ni,computePool3DInfo:()=>Ii,convertConv2DDataFormat:()=>Di,decodeEinsumEquation:()=>Rc,eitherStridesOrDilationsAreOne:()=>Fi,expandShapeToKeepDim:()=>Oo,exponent:()=>Ec,exponents:()=>Cc,fromStringArrayToUint8:()=>Jc,fromUint8ToStringArray:()=>Zc,getAxesPermutation:()=>Lo,getBroadcastDims:()=>Ls,getComplexWithIndex:()=>Sc,getEinsumComputePath:()=>Fc,getEinsumPermutation:()=>Ac,getFusedBiasGradient:()=>Ll,getFusedDyActivation:()=>Ml,getImageCenter:()=>rc,getInnerMostAxes:()=>Po,getPermuted:()=>sc,getReductionAxes:()=>zs,getReshaped:()=>ac,getReshapedPermuted:()=>ic,getSliceBeginCoords:()=>oc,getSliceSize:()=>lc,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Lc,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>zc,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Pc,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Uc,getSparseReshapeInputOutputMismatchErrorMessage:()=>Gc,getSparseReshapeInputOutputMultipleErrorMessage:()=>Vc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Bc,getSparseReshapeNegativeOutputDimErrorMessage:()=>Wc,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Kc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Hc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>jc,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>qc,getUndoAxesPermutation:()=>zo,isIdentityPermutation:()=>Dc,log:()=>Sr,mergeRealAndImagArrays:()=>wc,prepareAndValidate:()=>uc,prepareSplitSize:()=>Mc,segment_util:()=>t,shouldFuse:()=>Pl,slice_util:()=>e,splitRealAndImagArrays:()=>kc,tupleValuesAreOne:()=>_i,upcastType:()=>va,validateInput:()=>hc,validateUpdateShape:()=>cc,warn:()=>Ir});var a={};n.r(a),n.d(a,{json:()=>dx});var s={};n.r(s),n.d(s,{json:()=>fx});var i={};n.r(i),n.d(i,{json:()=>mx});var o={};n.r(o),n.d(o,{json:()=>gx});var l={};n.r(l),n.d(l,{json:()=>yx});var u={};n.r(u),n.d(u,{json:()=>bx});var c={};n.r(c),n.d(c,{json:()=>xx});var h={};n.r(h),n.d(h,{json:()=>vx});var p={};n.r(p),n.d(p,{json:()=>wx});var d={};n.r(d),n.d(d,{json:()=>kx});var f={};n.r(f),n.d(f,{json:()=>Nx});var m={};n.r(m),n.d(m,{json:()=>Ix});var g={};n.r(g),n.d(g,{json:()=>Sx});var y={};n.r(y),n.d(y,{json:()=>Tx});var b={};n.r(b),n.d(b,{json:()=>Cx});var x={};n.r(x),n.d(x,{json:()=>Ex});var v={};n.r(v),n.d(v,{json:()=>$x});var w={};n.r(w),n.d(w,{json:()=>Rx});var k={};n.r(k),n.d(k,{json:()=>Ax});var N={};n.r(N),n.d(N,{addImpl:()=>Pw,bincountImpl:()=>Ak,bincountReduceImpl:()=>_k,ceilImpl:()=>Ok,concatImpl:()=>Wk,equalImpl:()=>IN,expImpl:()=>ON,expm1Impl:()=>BN,floorImpl:()=>rI,gatherNdImpl:()=>hI,gatherV2Impl:()=>dI,greaterEqualImpl:()=>bI,greaterImpl:()=>mI,lessEqualImpl:()=>AI,lessImpl:()=>EI,linSpaceImpl:()=>DI,logImpl:()=>MI,maxImpl:()=>QI,maximumImpl:()=>eS,minimumImpl:()=>cS,multiplyImpl:()=>gN,negImpl:()=>vS,notEqualImpl:()=>ES,prodImpl:()=>WS,rangeImpl:()=>VS,rsqrtImpl:()=>tT,scatterImpl:()=>aT,sigmoidImpl:()=>Tw,simpleAbsImpl:()=>Kw,sliceImpl:()=>Ck,sparseFillEmptyRowsImpl:()=>IT,sparseReshapeImpl:()=>TT,sparseSegmentReductionImpl:()=>ET,sqrtImpl:()=>FT,squaredDifferenceImpl:()=>LT,stridedSliceImpl:()=>UT,stringNGramsImpl:()=>HT,stringSplitImpl:()=>KT,stringToHashBucketFastImpl:()=>YT,subImpl:()=>jN,tileImpl:()=>tC,topKImpl:()=>aC,transposeImpl:()=>tk,uniqueImpl:()=>cC});var I=n(294),S=n(935);class T{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class C{refCount(e){return E("refCount")}incRef(e){return E("incRef")}timerAvailable(){return!0}time(e){return E("time")}read(e){return E("read")}readSync(e){return E("readSync")}readToGPU(e,t){return E("readToGPU")}numDataIds(){return E("numDataIds")}disposeData(e,t){return E("disposeData")}write(e,t,n){return E("write")}move(e,t,n,r,a){return E("move")}memory(){return E("memory")}floatPrecision(){return E("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return E("dispose")}}function E(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function $(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,_(e,t,n)}function R(e,t,n){return Math.max(e,Math.min(t,n))}function A(e){return e%2==0?e:e+1}function _(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function F(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function D(e,t,n=""){F(z(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function O(e){F(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function M(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||X(e)&&!n)for(let r=0;r<e.length;++r)M(e[r],t,n);else t.push(e);return t}function L(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function z(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function P(e){return e%1==0}function B(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function W(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function U(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function V(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function G(e,t){const n=t.length;return F((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),F(e.every((e=>P(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function H(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:G(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function j(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function q(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function K(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function X(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Y(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Q(e){return"string"==typeof e||e instanceof String}function Z(e){return"number"==typeof e}function J(e){return Array.isArray(e)?J(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Z(e)?"float32":Q(e)?"string":"boolean"==typeof e?"bool":"float32"}function ee(e){return!!(e&&e.constructor&&e.call&&e.apply)}function te(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ne(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function re(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=re(e+t*o,i,n,r)}return a}function ae(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return re(0,e,t,n)}function se(e,t){const n=ie(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ie(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function oe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return ae(e,new Float32Array(n));if("int32"===t)return ae(e,new Int32Array(n));if("bool"===t)return ae(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function le(e){e.forEach((t=>{F(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function ue(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function ce(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function he(e){return e&&e.then&&"function"==typeof e.then}class pe{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=de,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(fe().getBool("IS_TEST")||fe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];fe().getBool("IS_TEST")||fe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(he(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function de(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function fe(){return ge}let me,ge=null;function ye(){if(null==me){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}me=e}return me}function be(e,t){const n=function(){const e=ye();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const xe="Abs",ve="Acos",we="Acosh",ke="Add",Ne="AddN",Ie="All",Se="Any",Te="ArgMax",Ce="ArgMin",Ee="Asin",$e="Asinh",Re="Atan",Ae="Atanh",_e="Atan2",Fe="AvgPool",De="AvgPoolGrad",Oe="AvgPool3D",Me="AvgPool3DGrad",Le="BatchMatMul",ze="BatchToSpaceND",Pe="Bincount",Be="BroadcastArgs",We="Cast",Ue="Ceil",Ve="ClipByValue",Ge="Complex",He="ComplexAbs",je="Concat",qe="Conv2D",Ke="Conv2DBackpropFilter",Xe="Conv2DBackpropInput",Ye="Conv3D",Qe="Conv3DBackpropFilterV2",Ze="Conv3DBackpropInputV2",Je="Cos",et="Cosh",tt="Cumprod",nt="Cumsum",rt="CropAndResize",at="DenseBincount",st="DepthToSpace",it="DepthwiseConv2dNative",ot="DepthwiseConv2dNativeBackpropFilter",lt="DepthwiseConv2dNativeBackpropInput",ut="Diag",ct="Dilation2D",ht="Dilation2DBackpropInput",pt="Dilation2DBackpropFilter",dt="RealDiv",ft="Einsum",mt="Elu",gt="EluGrad",yt="Erf",bt="Equal",xt="Exp",vt="ExpandDims",wt="Expm1",kt="FFT",Nt="Fill",It="FlipLeftRight",St="Floor",Tt="FloorDiv",Ct="FusedBatchNorm",Et="GatherV2",$t="GatherNd",Rt="Greater",At="GreaterEqual",_t="Identity",Ft="IFFT",Dt="Imag",Ot="IsFinite",Mt="IsInf",Lt="IsNan",zt="LeakyRelu",Pt="Less",Bt="LessEqual",Wt="LinSpace",Ut="Log",Vt="Log1p",Gt="LogicalAnd",Ht="LogicalNot",jt="LogicalOr",qt="LRN",Kt="LRNGrad",Xt="Max",Yt="Maximum",Qt="MaxPool",Zt="MaxPoolGrad",Jt="MaxPool3D",en="MaxPool3DGrad",tn="MaxPoolWithArgmax",nn="Mean",rn="Min",an="Minimum",sn="MirrorPad",on="Mod",ln="Multinomial",un="Multiply",cn="Neg",hn="NotEqual",pn="NonMaxSuppressionV3",dn="NonMaxSuppressionV4",fn="NonMaxSuppressionV5",mn="OnesLike",gn="OneHot",yn="Pack",bn="PadV2",xn="Pow",vn="Prelu",wn="Prod",kn="Range",Nn="Real",In="Reciprocal",Sn="Relu",Tn="Reshape",Cn="ResizeNearestNeighbor",En="ResizeNearestNeighborGrad",$n="ResizeBilinear",Rn="ResizeBilinearGrad",An="Relu6",_n="Reverse",Fn="Round",Dn="Rsqrt",On="ScatterNd",Mn="SearchSorted",Ln="Select",zn="Selu",Pn="Slice",Bn="Sin",Wn="Sinh",Un="Sign",Vn="Sigmoid",Gn="Softplus",Hn="Sqrt",jn="Sum",qn="SpaceToBatchND",Kn="SplitV",Xn="Softmax",Yn="SparseFillEmptyRows",Qn="SparseReshape",Zn="SparseSegmentMean",Jn="SparseSegmentSum",er="SparseToDense",tr="SquaredDifference",nr="Square",rr="StridedSlice",ar="StringNGrams",sr="StringSplit",ir="StringToHashBucketFast",or="Sub",lr="Tan",ur="Tanh",cr="Tile",hr="TopK",pr="Transform",dr="Transpose",fr="Unique",mr="Unpack",gr="UnsortedSegmentSum",yr="ZerosLike",br="Step",xr="FromPixels",vr="RotateWithOffset",wr="_FusedMatMul",kr="FusedConv2D",Nr="FusedDepthwiseConv2D";function Ir(...e){fe().getBool("IS_TEST")||fe().getBool("PROD")||console.warn(...e)}function Sr(...e){fe().getBool("IS_TEST")||fe().getBool("PROD")||console.log(...e)}const Tr=be("kernelRegistry",(()=>new Map)),Cr=be("gradRegistry",(()=>new Map));function Er(e,t){const n=Fr(e,t);return Tr.get(n)}function $r(e){return Cr.get(e)}function Rr(e){const t=Tr.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Ar(e){const{kernelName:t,backendName:n}=e,r=Fr(t,n);Tr.has(r)&&Ir(`The kernel '${t}' for backend '${n}' is already registered`),Tr.set(r,e)}function _r(e){const{kernelName:t}=e;Cr.has(t)&&fe().getBool("DEBUG")&&Ir(`Overriding the gradient for '${t}'`),Cr.set(t,e)}function Fr(e,t){return`${t}_${e}`}var Dr=n(720);const Or=n.n(Dr)()||Dr;function Mr(e){return Or.fromString(e,!0,16)}const Lr=Mr("c3a5c85c97cb3127"),zr=Mr("b492b66fbe98f273"),Pr=Mr("9ae16a3b2f90404f");function Br(e){return e.xor(e.shru(47))}function Wr(e,t,n){const r=e.slice(t,t+n);return Or.fromBytes(Array.from(r),!0,!0)}function Ur(e,t){return Wr(e,t,8)}function Vr(e,t){return Wr(e,t,4)}function Gr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Hr(e,t,n=Mr("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function jr(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=Gr(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(Gr(a,44)),[a.add(r),s.add(i)]}(Ur(e,t),Ur(e,t+8),Ur(e,t+16),Ur(e,t+24),n,r)}function qr(e,t=e.length){const n=Or.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Pr.add(2*t),r=Ur(e,0).add(Pr),a=Ur(e,t-8);return Hr(Gr(a,37).mul(n).add(r),Gr(r,25).add(a).mul(n),n)}if(t>=4){const n=Pr.add(2*t);return Hr(Vr(e,0).shl(3).add(t),Vr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Br(Pr.mul(n).xor(Lr.mul(r))).mul(Pr)}return Pr}(e,t):function(e,t=e.length){const n=Pr.add(2*t),r=Ur(e,0).mul(zr),a=Ur(e,8),s=Ur(e,t-8).mul(n),i=Ur(e,t-16).mul(Pr);return Hr(Gr(r.add(a),43).add(Gr(s,30)).add(i),r.add(Gr(a.add(Pr),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Pr.add(2*t),r=Ur(e,0).mul(Pr),a=Ur(e,8),s=Ur(e,t-8).mul(n),i=Ur(e,t-16).mul(Pr),o=Gr(r.add(a),43).add(Gr(s,30)).add(i),l=Hr(o,r.add(Gr(a.add(Pr),18)).add(s),n),u=Ur(e,16).mul(n),c=Ur(e,24),h=o.add(Ur(e,t-32)).mul(n),p=l.add(Ur(e,t-24)).mul(n);return Hr(Gr(u.add(c),43).add(Gr(h,30)).add(p),u.add(Gr(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(zr).add(113),s=Br(a.mul(Pr).add(113)).mul(Pr),i=[Or.UZERO,Or.UZERO],o=[Or.UZERO,Or.UZERO];r=r.mul(Pr).add(Ur(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Gr(r.add(a).add(i[0]).add(Ur(e,l+8)),37).mul(zr),a=Gr(a.add(i[1]).add(Ur(e,l+48)),42).mul(zr),r=r.xor(o[1]),a=a.add(i[0]).add(Ur(e,l+40)),s=Gr(s.add(o[0]),33).mul(zr),i=jr(e,l,i[1].mul(zr),r.add(o[0])),o=jr(e,l+32,s.add(o[1]),a.add(Ur(e,l+16))),[s,r]=[r,s],l+=64}while(l!==u);const h=zr.add(s.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Gr(r.add(a).add(i[0]).add(Ur(e,l+8)),37).mul(h),a=Gr(a.add(i[1]).add(Ur(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(Ur(e,l+40))),s=Gr(s.add(o[0]),33).mul(h),i=jr(e,l,i[1].mul(h),r.add(o[0])),o=jr(e,l+32,s.add(o[1]),a.add(Ur(e,l+16))),[s,r]=[r,s],Hr(Hr(i[0],o[0],h).add(Br(a).mul(Lr)).add(s),Hr(i[1],o[1],h).add(r),h)}function Kr(e,t){return"string"===t?Qr(e):Xr([e],t)}function Xr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=M(e)),fe().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Yr(){return fe().platform.now()}function Qr(e,t="utf-8"){return t=t||"utf-8",fe().platform.encode(e,t)}function Zr(e,t="utf-8"){return t=t||"utf-8",fe().platform.decode(e,t)}class Jr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new ta)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=Yr();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Yr()-i})}if(fe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{ea(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function ea(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class ta{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?W(`${r}ms`,9):r.error,o=W(e,25),l=t.rank,u=t.size,c=W(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function na(e,t,n,r){const a=ne(t),s=function(e,t,n,r){const a=L(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?ia(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],ra(l[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=sa(e,t,n,a,s),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function ra(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Q(e)?`'${e}'`:"bool"===n?aa(e):parseFloat(e.toFixed(7)).toString(),W(r,t)}function aa(e){return 0===e?"false":"true"}function sa(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[ra(ia(e)[0],0,n)]:"bool"===n?[aa(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=ia(r),s=ia(s)),["["+r.map(((e,t)=>ra(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>ra(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?ia(e):Array.from(e)).map(((e,t)=>ra(e,a[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;p.push(...sa(e.slice(r,s),u,n,c,a,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;p.push(...sa(e.slice(r,s),u,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;p.push(...sa(e.slice(r,s),u,n,c,a,t===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function ia(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class oa{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=L(e),null!=n){const e=n.length;F(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||q(t,this.size),this.strides=ne(e)}set(e,...t){0===t.length&&(t=[0]),F(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return la().makeTensor(this.values,this.shape,this.dtype)}}let la=null,ua=null,ca=null;class ha{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=L(e),this.strides=ne(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ua.buffer(this.shape,this.dtype,e)}bufferSync(){return ua.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ae(this.shape,e,"complex64"===this.dtype)}arraySync(){return ae(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=la().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),la().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=la().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await la().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(la().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ua.print(this,e)}clone(){return this.throwIfDisposed(),ua.clone(this)}toString(e=!1){return na(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ua.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),la().makeVariable(this,e,t,n)}}function pa(){return be("Tensor",(()=>ha))}Object.defineProperty(ha,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),pa();class da extends ha{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!z(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);la().disposeTensor(this),this.dataId=e.dataId,la().incRef(this,null)}dispose(){la().disposeVariable(this),this.isDisposedInternal=!0}}var fa,ma,ga,ya,ba;Object.defineProperty(da,Symbol.hasInstance,{value:e=>e instanceof ha&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(fa||(fa={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ma||(ma={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ga||(ga={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ya||(ya={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ba||(ba={}));const xa={float32:ya,int32:ma,bool:ga,complex64:ba};function va(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return xa[e][t]}function wa(e){return va(e,"int32")}function ka(e,t){if(e.dtype===t.dtype)return[e,t];const n=va(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Na(e,t){return t.some((t=>t.id===e.id))}function Ia(e){const t=[];return Sa(e,t,new Set),t}function Sa(e,t,n){if(null==e)return;if(e instanceof ha)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),Sa(r,t,n))}}function Ta(e){return null!=e.kernelName}class Ca{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ea{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ca}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ir(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Jr(this.backendInstance),!0}setupRegisteredKernels(){Rr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Rr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof C||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Ir(`Initialization of backend ${e} failed`),Ir(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Ir(`Initialization of backend ${e} failed`),Ir(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ea.nextTensorId++}nextVariableId(){return Ea.nextVariableId++}clone(e){const t=Ra.runKernel(_t,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Ra.runKernel(We,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Er(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Ta(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ta(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=Er(t,this.backendName);F(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,a,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Ta(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=$r(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(F(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Q(e[0])&&(a=e.map((e=>Qr(e))));const s=r.write(a,t,n),i=new ha(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:a}=e,s=new ha(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new da(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Y(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof da||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Y(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=$r(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=ie(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ia(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(F(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));F(a instanceof ha,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=se(L(e),"float32");return Ra.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!z(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Aa);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return F(ee(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;F(t.every((e=>e instanceof ha)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),F(n.value instanceof ha,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),F(ee(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];F(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),F(s.every((e=>e instanceof ha)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Yr(),n=await this.backend.time(e);return n.wallMs=Yr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ca;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function $a(){const e=ye();if(null==e._tfengine){const t=new pe(e);e._tfengine=new Ea(t)}var t;return t=e._tfengine.ENV,ge=t,la=()=>e._tfengine,e._tfengine}Ea.nextTensorId=0,Ea.nextVariableId=0;const Ra=$a();function Aa(e,t){const n={a:e,b:t};return Ra.runKernel(ke,n)}function _a(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Fa(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Da=fe();function Oa(e,t){let n=e;if(X(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||X(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&fe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ma(e,r,[]),r}function Ma(e,t,n){if(n=n||[],!Array.isArray(e)&&!X(e))return void F(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));F(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),F(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Ma(e[t],r,n.concat(t))}function La(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function za(e,t,n,r="numeric"){if(e instanceof ha)return La(r,e.dtype,t,n),e;let a=J(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),La(r,a,t,n),null==e||!X(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Oa(e,a);X(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?Xr(e,a):M(e,[],!0);return Ra.makeTensor(i,s,a)}function Pa(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>za(e,`${t}[${a}]`,n,r)))}function Ba(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{Ra.startScope(n);try{const t=r(...e);return he(t)&&console.error("Cannot return a Promise inside of tidy."),Ra.endScope(t),t}catch(e){throw Ra.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}Da.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Da.registerFlag("IS_BROWSER",(()=>Fa())),Da.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Da.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Da.registerFlag("PROD",(()=>!1)),Da.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Da.getBool("DEBUG"))),Da.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Da.registerFlag("IS_TEST",(()=>!1)),Da.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Da.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Da.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Wa=Ba({complex_:function(e,t){const n=za(e,"real","complex"),r=za(t,"imag","complex");D(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Ra.runKernel(Ge,a)}});function Ua(e,t,n,r){if(null==r&&(r=J(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!X(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){le(t);const e=L(t),r=L(n);F(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==L(t.slice(e));F(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return X(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Xr(e,r):M(e,[],!0),Ra.makeTensor(e,t,r)}function Va(e,t,n){return Ua(e,t,Oa(e,n),n)}const Ga={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Ha(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:ja(await Promise.all(r)),specs:n}}function ja(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const qa="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ka(e){return qa?Buffer.byteLength(e):new Blob([e]).size}function Xa(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ya(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Qa(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ka(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ka(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Za(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class Ja{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ja.instance&&(Ja.instance=new Ja),Ja.instance}static registerSaveRouter(e){Ja.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ja.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ja.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ja.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ja.getInstance().loadRouters:Ja.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const es=e=>Ja.getSaveHandlers(e),ts="tensorflowjs",ns="models_store",rs="model_info_store";function as(){if(!fe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ss(e){const t=e.result;t.createObjectStore(ns,{keyPath:"modelPath"}),t.createObjectStore(rs,{keyPath:"modelPath"})}class is{constructor(e){if(this.indexedDB=as(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(ts,1);r.onupgradeneeded=()=>ss(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(ns,"readonly"),r=t.objectStore(ns).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Qa(t),s=a.transaction(rs,"readwrite");let i=s.objectStore(rs);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=a.transaction(ns,"readwrite");const o=l.objectStore(ns).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(rs);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}is.URL_SCHEME="indexeddb://";const os=e=>{return fe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(is.URL_SCHEME)?(t=e.slice(is.URL_SCHEME.length),new is(t)):null;var t};Ja.registerSaveRouter(os),Ja.registerLoadRouter(os);class ls{constructor(){this.indexedDB=as()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ts,1);n.onupgradeneeded=()=>ss(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(rs,"readonly"),s=a.objectStore(rs).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(is.URL_SCHEME)?t.slice(is.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(ts,1);r.onupgradeneeded=()=>ss(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(rs,"readwrite"),i=s.objectStore(rs),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{l=a.transaction(ns,"readwrite");const r=l.objectStore(ns).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==l?a.close():l.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const us="/",cs="tensorflowjs_models",hs="info",ps="model_topology",ds="weight_specs",fs="weight_data",ms="model_metadata";function gs(e){return{info:[cs,e,hs].join(us),topology:[cs,e,ps].join(us),weightSpecs:[cs,e,ds].join(us),weightData:[cs,e,fs].join(us),modelMetadata:[cs,e,ms].join(us)}}function ys(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function bs(e){const t=e.split(us);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(us)}class xs{constructor(e){if(!fe().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=gs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Qa(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(qa)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ys(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(qa){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}xs.URL_SCHEME="localstorage://";const vs=e=>{return fe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(xs.URL_SCHEME)?(t=e.slice(xs.URL_SCHEME.length),new xs(t)):null;var t};Ja.registerSaveRouter(vs),Ja.registerLoadRouter(vs);class ws{constructor(){F(fe().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),F("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=cs+us,n=us+hs;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[bs(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=gs(e=(t=e).startsWith(xs.URL_SCHEME)?t.slice(xs.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ys(n),r}}class ks{constructor(){this.managers={}}static getInstance(){return null==ks.instance&&(ks.instance=new ks),ks.instance}static registerManager(e,t){F(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),F(e.length>0,(()=>"scheme must not be an empty string."));const n=ks.getInstance();F(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Ns{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(fe().get("IS_BROWSER")){fe().setPlatform("browser",new Ns);try{ks.registerManager(xs.URL_SCHEME,new ws)}catch(e){}try{ks.registerManager(is.URL_SCHEME,new ls)}catch(e){}}let Is;function Ss(e,t="float32",n){return t=t||"float32",le(e),new oa(e,t,n)}fe().get("IS_NODE")&&!fe().get("IS_BROWSER")&&fe().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=fe().global.fetch?fe().global.fetch(e,t):(null==Is&&(Is=n(410)),Is(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ts=Ba({cast_:function(e,t){const n=za(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Ra.runKernel(We,r,a)}}),Cs=Ba({clone_:function(e){const t={x:za(e,"x","clone","string_or_numeric")};return Ra.runKernel(_t,t)}});function Es(e){return new Promise((e=>setTimeout(e))).then(e)}$a(),ua={buffer:Ss,cast:Ts,clone:Cs,print:function(e,t=!1){console.log(e.toString(t))}};class $s{constructor(e){if(!fe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith($s.URL_SCHEME)&&(e=e.slice($s.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Ya(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Es((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Es((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Qa(e)}}}}function Rs(e,t,n,r){!function(e){F(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){F(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),F(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),F(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function As(e,t){null==t&&(t={});const n=null==t.fetchFunc?fe().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Rs(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Rs(a,t.onProgress,.5,1)}$s.URL_SCHEME="downloads://",Ja.registerSaveRouter((e=>fe().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith($s.URL_SCHEME)?function(e="model"){return new $s(e)}(e.slice($s.URL_SCHEME.length)):null));class _s{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(F("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=fe().platform.fetch,F(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&F(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Ya(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Qa(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Xa(await As(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Fs(e){return null!=e.match(_s.URL_SCHEME_REGEX)}_s.URL_SCHEME_REGEX=/^https?:\/\//;const Ds=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Fs(e))):Fs(e),n)return Os(e,t)}return null};function Os(e,t){return new _s(e,t)}function Ms(e,t){return Os(e,t)}function Ls(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function zs(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Ps(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}let Bs;Ja.registerSaveRouter(Ds),Ja.registerLoadRouter(Ds);const Ws=Ba({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Er(xr,Ra.backendName)){const n={pixels:e},r={numChannels:t};return Ra.runKernel(xr,n,r)}const[l,u]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(s||a||o){if(null==Bs)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Bs=new OffscreenCanvas(1,1).getContext("2d")}else Bs=document.createElement("canvas").getContext("2d");Bs.canvas.width=l,Bs.canvas.height=u,Bs.drawImage(e,0,0,l,u),c=Bs.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(O(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Oa(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ua(e,t,r,n)}(h,[u,l,t],"int32")}});function Us(e,t,n){const r=e.shape.length;F(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),F(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)F(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Vs(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Gs(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Hs(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function js(e,t,n){return n<=e?n:n-(t-1)}function qs(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ks(e,t,n,r,a,s,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Xs(i,l,u,r,e),h=Ys(o,l,u,a,e),p=Hs(s,l,u,e)}else for(let t=0;t<u;t++)c[t]=Zs(i,r,s,e,t,l),h[t]=Js(o,a,s,e,t,l),p[t]=Qs(s,t,l);return{begin:c,end:h,strides:p}}function Xs(e,t,n,r,a){const s=[...a],i=qs(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=js(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function Ys(e,t,n,r,a){const s=[...a],i=qs(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=js(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=R(0,s[e],a[e])}return s}function Qs(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Zs(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[a];return i<0&&(i+=l),i=R(0,i,l-1),i}function Js(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[a];return i<0&&(i+=l),i=o>0?R(0,i,l):R(-1,i,l-1),i}function ei(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function ti(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ni(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{F(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(F(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function ri(e,t,n,r,a,s,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=ai(p.begin[t],0,p.strides[t],r,a,s),p.end[t]=ai(p.end[t],1,p.strides[t],r,a,s);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function ai(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}class si{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ii{constructor(){this.classNameMap={}}static getMap(){return null==ii.instance&&(ii.instance=new ii),ii.instance}static register(e){ii.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function oi(e){F(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),F("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),F(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ii.register(e)}function li(){return Ra}function ui(){return Ra.memory()}function ci(e,t){return Ra.tidy(e,t)}function hi(e){Ia(e).forEach((e=>e.dispose()))}function pi(e){return Ra.keep(e)}function di(e,t,n=1){return Ra.registerBackend(e,t,n)}function fi(e){return Ra.customGrad(e)}function mi(e,t){if((X(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&X(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ua(e,[],[],t)}ca=function(e){fe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class gi extends si{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return hi(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){F(ee(e),(()=>"The f passed in variableGrads(f) must be a function")),F(null==t||Array.isArray(t)&&t.every((e=>e instanceof da)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Ra.registeredVariables)t.push(Ra.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;F((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=Ra.gradients(e,t,null,!0);F(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),F(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}(e,t)}dispose(){null!=this.iterations_&&hi(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:mi(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(gi,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const yi=Ba({abs_:function(e){const t=za(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Ra.runKernel(He,e)}{const e={x:t};return Ra.runKernel(xe,e)}}}),bi=Ba({add_:function(e,t){let n=za(e,"a","add"),r=za(t,"b","add");[n,r]=ka(n,r);const a={a:n,b:r};return Ra.runKernel(ke,a)}}),xi=Ba({all_:function(e,t=null,n=!1){const r={x:za(e,"x","all","bool")},a={axis:t,keepDims:n};return Ra.runKernel(Ie,r,a)}}),vi=Ba({any_:function(e,t=null,n=!1){const r={x:za(e,"x","any","bool")},a={axis:t,keepDims:n};return Ra.runKernel(Se,r,a)}}),wi=Ba({argMax_:function(e,t=0){const n={x:za(e,"x","argMax")},r={axis:t};return Ra.runKernel(Te,n,r)}});function ki(e,t,n,r,a="NHWC",s){return Si(e,[...t,e[3]],n,s,r,null,null,Di(a))}function Ni(e,t,n,r,a,s,i="channelsLast"){const[o,l]=Ei(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Si(e,u,n,r,a,s,!1,i)}function Ii(e,t,n,r,a,s,i="NDHWC"){const[o,l,u]=$i(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Ti(e,c,n,r,a,!1,h,s)}function Si(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[p,d,,f]=t,[m,g]=Ei(n),[y,b]=Ei(r),x=Ri(p,y),v=Ri(d,b),{padInfo:w,outHeight:k,outWidth:N}=function(e,t,n,r,a,s,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Ci(e,t,n));const s=e[1];return[Ai((e[0]-t+2*r)/n+1,a),Ai((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),l=Math.floor(e/2),p=e-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],d="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=Ai((t-s+p+d)/r+1,o),h=Ai((n-i+f+m)/a+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(a,u,c,m,g,x,v,s,o),I=i?f*h:f;let S;return"channelsFirst"===o?S=[l,I,k,N]:"channelsLast"===o&&(S=[l,k,N,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:N,outChannels:I,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function Ti(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=$i(n),[v,w,k]=$i(r),N=Ri(d,v),I=Ri(f,w),S=Ri(m,k),{padInfo:T,outDepth:C,outHeight:E,outWidth:$}=function(e,t,n,r,a,s,i,o,l,u,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Ci(e,t,r));const i=e[1],o=e[2];return[Ai((e[0]-t+2*a)/r+1,s),Ai((i-t+2*a)/r+1,s),Ai((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);p=s[0],d=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),d=Math.ceil(n/s),f=Math.ceil(r/i);const e=(p-1)*a+o-t,c=(d-1)*s+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),d=Math.ceil((n-l+1)/s),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(a,u,c,h,y,b,x,N,I,S,o),R=s?g*p:g;let A;return"channelsFirst"===i?A=[l,R,C,E,$]:"channelsLast"===i&&(A=[l,C,E,$,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:E,outWidth:$,outChannels:R,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Ci(e,t,n,r=1){const a=Ri(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Ei(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function $i(e){return"number"==typeof e?[e,e,e]:e}function Ri(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ai(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function _i(e){const[t,n,r]=Ei(e);return 1===t&&1===n&&1===r}function Fi(e,t){return _i(e)||_i(t)}function Di(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Oi(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)F(P(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{F(P(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Mi=Ba({reshape_:function(e,t){const n={x:za(e,"x","reshape","string_or_numeric")},r={shape:t};return Ra.runKernel(Tn,n,r)}}),Li=Ba({avgPool_:function(e,t,n,r,a){const s=za(e,"x","avgPool","float32");F(Fi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=Mi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Oi("avgPool",r,a);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=Ra.runKernel(Fe,l,u);return c=Ts(c,s.dtype),o?Mi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),zi=Ba({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=za(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Mi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),F("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Oi("avgPool3d",r,a);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let h=Ra.runKernel(Oe,u,c);return h=Ts(h,o.dtype),l?Mi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Pi=Ba({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=za(e,"x","batchNorm"),o=za(t,"mean","batchNorm"),l=za(n,"variance","batchNorm");let u,c;null!=a&&(u=za(a,"scale","batchNorm")),null!=r&&(c=za(r,"offset","batchNorm")),F(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),F(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),F(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?Mi(e,[1,1,1,e.size]):2===e.rank?Mi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Mi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:h,scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:s},f=Ra.runKernel(Ct,p,d);return Mi(f,i.shape)}}),Bi=Ba({batchNorm2d_:function(e,t,n,r,a,s){const i=za(e,"x","batchNorm"),o=za(t,"mean","batchNorm"),l=za(n,"variance","batchNorm");let u,c;return null!=a&&(u=za(a,"scale","batchNorm")),null!=r&&(c=za(r,"offset","batchNorm")),F(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),F(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),F(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&F(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&F(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Pi(i,o,l,c,u,s)}}),Wi=Ba({batchNorm3d_:function(e,t,n,r,a,s){const i=za(e,"x","batchNorm"),o=za(t,"mean","batchNorm"),l=za(n,"variance","batchNorm");let u,c;return null!=a&&(u=za(a,"scale","batchNorm")),null!=r&&(c=za(r,"offset","batchNorm")),F(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),F(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),F(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&F(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&F(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Pi(i,o,l,c,u,s)}}),Ui=Ba({batchNorm4d_:function(e,t,n,r,a,s){const i=za(e,"x","batchNorm"),o=za(t,"mean","batchNorm"),l=za(n,"variance","batchNorm");let u,c;return null!=a&&(u=za(a,"scale","batchNorm")),null!=r&&(c=za(r,"offset","batchNorm")),F(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),F(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),F(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&F(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&F(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Pi(i,o,l,c,u,s)}}),Vi=Ba({clipByValue_:function(e,t,n){const r=za(e,"x","clipByValue");F(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return Ra.runKernel(Ve,a,s)}}),Gi=Ba({concat_:function(e,t=0){F(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Pa(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Cs(n[0]);const r=n,a={axis:t};return Ra.runKernel(je,r,a)}}),Hi=Ba({concat1d_:function(e){return Gi(e,0)}}),ji=Ba({concat2d_:function(e,t){return Gi(e,t)}}),qi=Ba({concat3d_:function(e,t){return Gi(e,t)}}),Ki=Ba({concat4d_:function(e,t){return Gi(e,t)}}),Xi=Ba({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=za(e,"x","conv2d","float32"),l=za(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Mi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),F(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Oi("conv2d",r,i);const h="NHWC"===a?u.shape[3]:u.shape[1];F(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),F(Fi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=Ra.runKernel(qe,p,d);return c?Mi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Yi=Ba({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=za(e,"x","conv1d"),l=za(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Mi(o,[1,o.shape[0],o.shape[1]])),F(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),F(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Oi("conv1d",r,i),F(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),F(Fi(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),F("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=Mi(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Mi(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=Xi(p,h,[1,n],r,"NHWC",[1,s],i);return Mi(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Qi=Ba({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){F(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Mi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),F(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),F(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),F(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];F(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),F(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Oi("conv2dDerInput",a,i);const p={dy:l,filter:n},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=Ra.runKernel(Xe,p,d);return u?Mi(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Zi=Ba({conv2dTranspose_:function(e,t,n,r,a,s){const i=za(e,"x","conv2dTranspose"),o=za(t,"filter","conv2dTranspose");return Qi(n,i,o,r,a,"NHWC",s)}}),Ji=Ba({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=za(e,"x","conv3d"),o=za(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Mi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),F(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),F(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),F(Fi(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),F("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=Ra.runKernel(Ye,c,h);return u?Mi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),eo=Ba({conv3DBackpropInput_:function(e,t,n,r,a){F(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=Mi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const l=s[4],u=i.shape[4];F(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),F(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),F(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),F(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),F(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=Ra.runKernel(Ze,c,h);return o?Mi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),to=Ba({conv3dTranspose_:function(e,t,n,r,a){const s=za(e,"x","conv3dTranspose"),i=za(t,"filter","conv3dTranspose");return eo(n,s,i,r,a)}}),no=Ba({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=za(e,"x","depthwiseConv2d","float32"),l=za(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Mi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),F(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),F(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Oi("depthwiseConv2d",r,i);const h={x:u,filter:l},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},d=Ra.runKernel(it,h,p);return c?Mi(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),ro=Ba({floorDiv_:function(e,t){let n=za(e,"a","floorDiv"),r=za(t,"b","floorDiv");[n,r]=ka(n,r);const a={a:n,b:r};return Ra.runKernel(Tt,a)}}),ao=Ba({div_:function(e,t){let n=za(e,"a","div"),r=za(t,"b","div");if([n,r]=ka(n,r),"int32"===n.dtype&&"int32"===r.dtype)return ro(n,r);const a={a:n,b:r};return Ra.runKernel(dt,a,{})}}),so=Ba({elu_:function(e){const t={x:za(e,"x","elu","float32")};return Ra.runKernel(mt,t)}}),io=Ba({equal_:function(e,t){let n=za(e,"a","equal","string_or_numeric"),r=za(t,"b","equal","string_or_numeric");[n,r]=ka(n,r),Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(bt,a)}}),oo=Ba({exp_:function(e){const t={x:za(e,"x","exp")};return Ra.runKernel(xt,t)}}),lo=Ba({expandDims_:function(e,t=0){const n=za(e,"x","expandDims","string_or_numeric");F(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return Ra.runKernel(vt,r,a)}}),uo=Ba({tile_:function(e,t){const n=za(e,"x","tile","string_or_numeric");F(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return Ra.runKernel(cr,r,a)}}),co=Ba({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Ss([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Mi(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return uo(lo(i,0),[n[0],1,1]);if(2===n.length)return uo(lo(lo(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return uo(lo(lo(lo(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function ho(e,t,n){const r={shape:e,value:t,dtype:n};return Ra.runKernel(Nt,{},r)}const po=Ba({floor_:function(e){const t={x:za(e,"x","floor","float32")};return Ra.runKernel(St,t)}}),fo=Ba({gather_:function(e,t,n=0,r=0){const a={x:za(e,"x","gather"),indices:za(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Ra.runKernel(Et,a,s)}}),mo=Ba({greater_:function(e,t){let n=za(e,"a","greater","string_or_numeric"),r=za(t,"b","greater","string_or_numeric");[n,r]=ka(n,r),Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(Rt,a)}}),go=Ba({greaterEqual_:function(e,t){let n=za(e,"a","greaterEqual","string_or_numeric"),r=za(t,"b","greaterEqual","string_or_numeric");[n,r]=ka(n,r),Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(At,a)}}),yo=Ba({leakyRelu_:function(e,t=.2){const n={x:za(e,"x","leakyRelu")},r={alpha:t};return Ra.runKernel(zt,n,r)}}),bo=Ba({log_:function(e){const t={x:za(e,"x","log","float32")};return Ra.runKernel(Ut,t)}}),xo=Ba({log1p_:function(e){const t={x:za(e,"x","log1p")};return Ra.runKernel(Vt,t)}}),vo=Ba({max_:function(e,t=null,n=!1){const r={x:za(e,"x","max")},a={reductionIndices:t,keepDims:n};return Ra.runKernel(Xt,r,a)}}),wo=Ba({mul_:function(e,t){let n=za(e,"a","mul"),r=za(t,"b","mul");[n,r]=ka(n,r);const a={a:n,b:r};return Ra.runKernel(un,a)}}),ko=Ba({sub_:function(e,t){let n=za(e,"a","sub"),r=za(t,"b","sub");[n,r]=ka(n,r);const a={a:n,b:r};return Ra.runKernel(or,a)}}),No=Ba({sum_:function(e,t=null,n=!1){let r=za(e,"x","sum");"bool"===r.dtype&&(r=Ts(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Ra.runKernel(jn,a,s)}}),Io=Ba({logSoftmax_:function(e,t=-1){const n=za(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=fi(((e,n)=>{const r=vo(e,t,!0),a=ko(e,r),s=ko(Ts(a,"float32"),bo(No(oo(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=oo(r);return ko(e,wo(No(e,t,!0),a))}}}));return r(n)}}),So=Ba({logicalAnd_:function(e,t){const n=za(e,"a","logicalAnd","bool"),r=za(t,"b","logicalAnd","bool");Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(Gt,a)}}),To=Ba({matMul_:function(e,t,n=!1,r=!1){let a=za(e,"a","matMul"),s=za(t,"b","matMul");[a,s]=ka(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return Ra.runKernel(Le,i,o)}}),Co=Ba({maxPool_:function(e,t,n,r,a){const s=za(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=Mi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),F(Fi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Oi("maxPool",r,a);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=Ra.runKernel(Qt,l,u);return o?Mi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Eo=Ba({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=za(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Mi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),F(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),F("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Oi("maxPool3d",r,a);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=Ra.runKernel(Jt,u,c);return l?Mi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),$o=Ba({maximum_:function(e,t){let n=za(e,"a","maximum"),r=za(t,"b","maximum");[n,r]=ka(n,r),"bool"===n.dtype&&(n=Ts(n,"int32"),r=Ts(r,"int32")),Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(Yt,a)}}),Ro=Ba({mean_:function(e,t=null,n=!1){const r={x:za(e,"x","mean")},a={axis:t,keepDims:n};return Ra.runKernel(nn,r,a)}}),Ao=Ba({minimum_:function(e,t){let n=za(e,"a","minimum"),r=za(t,"b","minimum");[n,r]=ka(n,r),"bool"===n.dtype&&(n=Ts(n,"int32"),r=Ts(r,"int32")),Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(an,a)}});function _o(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Fo(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Do(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function Oo(e,t){return Fo(e,t.map((e=>1)),t)}function Mo(e,t,n){F(_o(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Lo(e,t){if(_o(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function zo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Po(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Bo=Ba({square_:function(e){const t=za(e,"x","square");return Ra.runKernel("Square",{x:t},{})}}),Wo=Ba({moments_:function(e,t=null,n=!1){const r=G(t,(e=za(e,"x","moments")).shape),a=Ro(e,r,n);let s=a.shape;n||(s=Oo(a.shape,r));const i=Bo(ko(Ts(e,"float32"),Mi(a,s)));return{mean:a,variance:Ro(i,r,n)}}}),Uo=Ba({neg_:function(e){const t={x:za(e,"x","neg")};return Ra.runKernel(cn,t)}}),Vo=Ba({notEqual_:function(e,t){let n=za(e,"a","notEqual","string_or_numeric"),r=za(t,"b","notEqual","string_or_numeric");[n,r]=ka(n,r),Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(hn,a)}}),Go=Ba({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:za(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return Ra.runKernel(gn,a,s)}});function Ho(e,t="float32"){if("complex64"===t){const t=Ho(e,"float32"),n=Ho(e,"float32");return Wa(t,n)}const n=ie(L(e),t);return Ra.makeTensor(n,e,t)}function jo(e,t="float32"){if("complex64"===t){const t=jo(e,"float32"),n=Ho(e,"float32");return Wa(t,n)}const n=se(L(e),t);return Ra.makeTensor(n,e,t)}const qo=Ba({onesLike_:function(e){const t={x:za(e,"x","onesLike")};return Ra.runKernel(mn,t)}}),Ko=Ba({pad_:function(e,t,n=0){const r=za(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return Ra.runKernel(bn,s,a)}}),Xo=Ba({prelu_:function(e,t){const n={x:za(e,"x","prelu"),alpha:za(t,"alpha","prelu")};return Ra.runKernel(vn,n)}});var Yo=n(377);class Qo{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Yo.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Zo{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Yo.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Jo=Ba({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Qo(t,n,r,!1,a),i=Ss(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),el=Ba({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=Ss(e,r),i=new Zo(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),tl=Ba({relu_:function(e){const t={x:za(e,"x","relu")};return Ra.runKernel(Sn,t)}}),nl=Ba({reverse_:function(e,t){const n={x:za(e,"x","reverse")},r={dims:t};return Ra.runKernel(_n,n,r)}}),rl=Ba({selu_:function(e){const t={x:za(e,"x","selu")};return Ra.runKernel(zn,t)}}),al=Ba({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=za(e,"x","separableConv2d"),l=za(t,"depthwiseFilter","separableConv2d"),u=za(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Mi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),F(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),F(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),F(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),F(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];F(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=no(c,l,r,a,i,s),m=Xi(f,u,1,"valid",i);return h?Mi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),sl=Ba({sigmoid_:function(e){const t={x:za(e,"x","sigmoid","float32")};return Ra.runKernel(Vn,t)}}),il=Ba({slice_:function(e,t,n){const r=za(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Ra.runKernel(Pn,a,s)}}),ol=Ba({slice1d_:function(e,t,n){const r=za(e,"x","slice1d");return F(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),il(r,[t],[n])}}),ll=Ba({slice2d_:function(e,t,n){const r=za(e,"x","slice2d");return F(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),il(r,t,n)}}),ul=Ba({slice3d_:function(e,t,n){const r=za(e,"x","slice3d");return F(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),il(r,t,n)}}),cl=Ba({slice4d_:function(e,t,n){const r=za(e,"x","slice4d");return F(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),il(r,t,n)}}),hl=Ba({softmax_:function(e,t=-1){const n=za(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return Ra.runKernel(Xn,r,a)}}),pl=Ba({softplus_:function(e){const t={x:za(e,"x","softplus")};return Ra.runKernel(Gn,t)}}),dl=Ba({split_:function(e,t,n=0){const r={x:za(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Ra.runKernel(Kn,r,a)}}),fl=Ba({sqrt_:function(e){const t={x:za(e,"x","sqrt","float32")};return Ra.runKernel(Hn,t)}}),ml=Ba({squeeze_:function(e,t){const n=za(e,"x","squeeze");return Mi(n,H(n.shape,t).newShape)}}),gl=Ba({stack_:function(e,t=0){const n=Pa(e,"tensors","stack","string_or_numeric");F(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&F(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return Ra.runKernel(yn,r,a)}}),yl=Ba({tanh_:function(e){const t={x:za(e,"x","tanh","float32")};return Ra.runKernel(ur,t)}});function bl(e,t){O(e);const n=Oa(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ua(e,null,n,t)}function xl(e,t,n){if(O(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Oa(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ua(e,t,r,n)}const vl=Ba({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Qo(t,n,r,!0,a),i=Ss(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),wl=Ba({unstack_:function(e,t=0){const n=za(e,"x","unstack","string_or_numeric");F(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return Ra.runKernel(mr,r,a)}}),kl=Ba({broadcastTo_:function(e,t){let n=za(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Mi(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Cs(n);const i={x:n},o={reps:s};return Ra.runKernel(cr,i,o)}}),Nl=Ba({where_:function(e,t,n){const r=za(t,"a","where"),a=za(n,"b","where"),s=za(e,"condition","where","bool"),i=Ps(Ps(s.shape,r.shape),a.shape),o={condition:kl(s,i),t:kl(r,i),e:kl(a,i)};return Ra.runKernel(Ln,o)}}),Il=Ba({zerosLike_:function(e){const t={x:za(e,"x","zerosLike")};return Ra.runKernel(yr,t)}}),Sl=Ba({transpose_:function(e,t){const n=za(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),F(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{F(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return Ra.runKernel(dr,r,a)}}),Tl=Ba({dropout_:function(e,t,n,r){const a=za(e,"x","dropout");if(F("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),F(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ha?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(z(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=ao(po(bi(el(s,0,1,"float32",r),i)),i);return wo(a,o)}}),Cl=Ba({imag_:function(e){const t={input:za(e,"input","imag")};return Ra.runKernel(Dt,t)}}),El=Ba({real_:function(e){const t={input:za(e,"input","real")};return Ra.runKernel(Nn,t)}}),$l=Ba({fft_:function(e){F("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ra.runKernel(kt,t)}}),Rl=Ba({rfft_:function(e,t){F("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=il(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=Gi([e,Ho(r)],e.shape.length-1),n=t}else a=e;const s=Il(a),i=Mi(Wa(a,s),[r,n]),o=$l(i),l=Math.floor(n/2)+1,u=El(o),c=Cl(o),h=dl(u,[l,n-l],u.shape.length-1),p=dl(c,[l,n-l],c.shape.length-1),d=a.shape.slice();return d[a.shape.length-1]=l,Mi(Wa(h[0],p[0]),d)}}),Al=Ba({ifft_:function(e){F("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Ra.runKernel(Ft,t)}}),_l=Ba({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=Mi(e,[n,t]);r=Al(a)}else{const a=[n,2*(t-1)],s=Mi(El(e),[n,t]),i=Mi(Cl(e),[n,t]),o=nl(il(s,[0,1],[n,t-2]),1),l=wo(nl(il(i,[0,1],[n,t-2]),1),mi(-1)),u=Gi([s,o],1),c=Gi([i,l],1),h=Mi(Wa(u,c),[a[0],a[1]]);r=Al(h)}if(r=El(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Mi(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Fl=Ba({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=Mi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Mi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),F(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),F(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),F(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?l.shape[3]:l.shape[1];F(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),F(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Oi("conv2dDerFilter",a,i);const h={x:o,dy:l},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return Ra.runKernel(Ke,h,p)}}),Dl=Ba({relu6_:function(e){const t={x:za(e,"x","relu6")};return Ra.runKernel(An,t)}}),Ol=Ba({step_:function(e,t=0){const n={x:za(e,"x","step")},r={alpha:t};return Ra.runKernel(br,n,r)}});function Ml(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return wo(e,Ol(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ll(e,t){let n=t;const r=zs(e.shape,t.shape);return r.length>0&&(n=No(n,r)),Mi(n,e.shape)}function zl(e,t,n,r){if("linear"===t)return e;if("relu"===t)return tl(e);if("elu"===t)return so(e);if("relu6"===t)return Dl(e);if("prelu"===t)return Xo(e,n);if("leakyrelu"===t)return yo(e,r);if("sigmoid"===t)return sl(e);throw new Error(`Unknown fused activation ${t}.`)}const Pl=(e,t)=>!(e>0)||"linear"===t,Bl=Ba({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Pl(Ra.state.gradientDepth,l)){let h=Xi(e,t,n,r,a,s,i);return null!=o&&(h=bi(h,o)),zl(h,l,u,c)}const h=za(e,"x","conv2d","float32"),p=za(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=Mi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),F(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),Oi("fused conv2d",r,i),F(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),F(Fi(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),F("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=Si(d.shape,p.shape,n,s,r,i);let g,y;null!=o&&(g=za(o,"bias","fused conv2d"),[g]=ka(g,h),"NHWC"===a?Ps(m.outShape,g.shape):(F(g.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`)),F(0===g.shape.length||g.shape[0]===m.outChannels||1===g.shape[0],(()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${m.outChannels})`)))),null!=u&&(y=za(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,u]=t,c=Ml(e,o,l);F(_i(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[Qi(i.shape,c,a,n,r),Fl(i,c,a.shape,n,r)];if(null!=u){const e=Ll(u,c);h.push(e)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=fi(((e,t,n)=>{let r=Ra.runKernel(kr,x,v);return n([t,e,r]),f&&(r=Mi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=fi(((e,t,n,r)=>{let a=Ra.runKernel(kr,x,v);return r([t,e,a,n]),f&&(a=Mi(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(d,p,g)}}}),Wl=Ba({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=Mi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Mi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return Ra.runKernel(ot,u,c)}}),Ul=Ba({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Mi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=Ra.runKernel(lt,u,c);return l?Mi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Vl=Ba({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Pl(Ra.state.gradientDepth,l)){let h=no(e,t,n,r,a,s,i);return null!=o&&(h=bi(h,o)),zl(h,l,u,c)}const h=za(e,"x","depthwiseConv2d","float32"),p=za(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=Mi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),F(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),F(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),F(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),F(Fi(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Oi("fused depthwiseConv2d",r,i);const m=Si(d.shape,p.shape,n,s,r,i,!0);let g,y;null!=o&&(g=za(o,"bias","fused conv2d"),[g]=ka(g,h),Ps(m.outShape,g.shape)),null!=u&&(y=za(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{F(_i(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,u,c]=t,h=Ml(e,u,l),p=Ul(o.shape,h,a,n,r,s,i),d=Wl(o,h,a.shape,n,r,s,i);return null!=c?[p,d,Ll(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=fi(((e,t,n)=>{let r=Ra.runKernel(Nr,x,v);return n([t,e,r]),f&&(r=Mi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=fi(((e,t,n,r)=>{let a=Ra.runKernel(Nr,x,v);return r([t,e,a,n]),f&&(a=Mi(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}));return e(d,p,g)}}}),Gl=Ba({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Pl(Ra.state.gradientDepth,s)){let l=To(e,t,n,r);return null!=a&&(l=bi(l,a)),zl(l,s,i,o)}let l=za(e,"a","fused matMul"),u=za(t,"b","fused matMul");[l,u]=ka(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=L(f),y=L(m);F(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Ps(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,d]),x=Mi(l,n?[g,c,p]:[g,p,c]),v=Mi(u,r?[y,d,h]:[y,h,d]);let w,k;null!=a&&(w=za(a,"bias","fused matMul"),[w]=ka(w,l),Ps(b,w.shape)),null!=i&&(k=za(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,l,u]=t,c=Ml(Mi(e,l.shape),l,s);let h,p;return n||r?!n&&r?(h=To(c,o,!1,!1),p=To(c,i,!0,!1)):n&&!r?(h=To(o,c,!1,!0),p=To(i,c,!1,!1)):(h=To(o,c,!0,!0),p=To(c,i,!0,!0)):(h=To(c,o,!1,!0),p=To(i,c,!0,!1)),null!=a?[h,p,Ll(u,c)]:[h,p]},I={a:x,b:v,bias:w,preluActivationWeights:k},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=fi(((e,t,n)=>{const r=Ra.runKernel(wr,I,S);return n([e,t,r]),{value:Mi(r,b),gradFunc:N}}));return e(x,v)}{const e=fi(((e,t,n,r)=>{const a=Ra.runKernel(wr,I,S);return r([e,t,a,n]),{value:Mi(a,b),gradFunc:N}}));return e(x,v,w)}}});function Hl(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return bl(a,"float32")}Ba({hammingWindow_:function(e){return Hl(e,.54,.46)}});const jl=Ba({hannWindow_:function(e){return Hl(e,.5,.5)}}),ql=Ba({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(il(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Gi([il(e,s,t-r),ho([r],a)]);i.push(o),s+=n}return 0===i.length?xl([],[0,t]):Mi(Gi(i),[i.length,t])}});Ba({stft_:function(e,t,n,r,a=jl){var s;null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const i=ql(e,t,n),o=wo(i,a(t));return Rl(o,r)}});const Kl=Ba({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=za(e,"image","cropAndResize"),o=za(t,"boxes","cropAndResize","float32"),l=za(n,"boxInd","cropAndResize","int32"),u=o.shape[0];F(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),F(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),F(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),F(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),F(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),F("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:l},h={method:a,extrapolationValue:s,cropSize:r};return Ra.runKernel(rt,c,h)}}),Xl=Ba({flipLeftRight_:function(e){const t=za(e,"image","flipLeftRight","float32");F(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Ra.runKernel(It,n,{})}}),Yl=Ba({grayscaleToRGB_:function(e){const t=za(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];F(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),F(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,uo(t,a)}}),Ql=Ba({rotateWithOffset_:function(e,t,n=0,r=.5){const a=za(e,"image","rotateWithOffset","float32");F(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return Ra.runKernel(vr,s,i)}});function Zl(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),F(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),F(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),F(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),F(1===t.rank,(()=>"scores must be a 1D tensor")),F(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),F(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Jl=Ba({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=za(e,"boxes","nonMaxSuppression","float32"),i=za(t,"scores","nonMaxSuppression","float32"),o=Zl(s,i,n,r,a),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return Ra.runKernel(pn,{boxes:s,scores:i},l)}});function eu(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||tu)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function tu(e,t){return e>t?1:e<t?-1:0}function nu(e,t,n,r,a){return su(e,t,n,r,a,0)}function ru(e,t,n,r,a,s){return su(e,t,n,r,a,0,!1,s,!0)}function au(e,t,n,r,a,s){return su(e,t,n,r,a,s,!0)}function su(e,t,n,r,a,s,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>a&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(lu);const c=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=iu(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*ou(r,c,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),p.push(t.score)):t.score>a&&eu(u,t,lu))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function iu(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),d=(o-s)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function ou(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function lu(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const uu=Ba({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=za(e,"boxes","nonMaxSuppression"),o=za(t,"scores","nonMaxSuppression"),l=Zl(i,o,n,r,a,s),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:a=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},h=Ra.runKernel(fn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),cu=Ba({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=za(e,"boxes","nonMaxSuppression"),o=za(t,"scores","nonMaxSuppression"),l=Zl(i,o,n,r,a,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},h=Ra.runKernel(dn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),hu=Ba({resizeBilinear_:function(e,t,n=!1,r=!1){const a=za(e,"images","resizeBilinear");F(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),F(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),F(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Mi(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ra.runKernel($n,o,l);return i?Mi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),pu=Ba({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=za(e,"images","resizeNearestNeighbor");F(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),F(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),F("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),F(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=Mi(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:r,size:t},u=Ra.runKernel(Cn,o,l);return i?Mi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),du=Ba({bincount_:function(e,t,n){const r=za(e,"x","bincount"),a=za(t,"weights","bincount");F("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),F(n>=0,(()=>`size must be non-negative, but got ${n}.`)),F(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return Ra.runKernel(Pe,s,i)}}),fu=Ba({lessEqual_:function(e,t){let n=za(e,"a","lessEqual","string_or_numeric"),r=za(t,"b","lessEqual","string_or_numeric");[n,r]=ka(n,r),Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(Bt,a)}}),mu=Ba({round_:function(e){const t={x:za(e,"x","round")};return Ra.runKernel(Fn,t)}});function gu(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Ra.runKernel(kn,{},a)}const yu=Ba({threshold_:function(e,t="binary",n=!1,r=.5){const a=za(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,l,u,c=wo(bl([r]),255);if(F(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),F(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),F("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),F("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,l]=dl(a,[1,1,1],-1);const e=wo(i,.2989),t=wo(o,.587),n=wo(l,.114);u=bi(bi(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,l=bl([-1]),u=bl([0]),c=bl([0]);for(let h=0;h<e.size-1;h++){n=il(e,0,h+1),r=il(e,h+1),i=ao(No(n),t),o=ao(No(r),t);const p=No(wo(n,gu(0,n.size)));a=ao(p,No(n));const d=ho(r.shape,n.size),f=bi(gu(0,r.size),d),m=wo(r,f);s=ao(No(m),No(r));const g=ko(a,s),y=ko(a,s),b=wo(i,o);c=wo(wo(b,g),y);const x=mo(c,u);u=Nl(x,c,u),l=Nl(x,bl([h]),l)}return l}(du(Ts(mu(u),"int32"),Va([]),256),s));const h=n?fu(u,c):mo(u,c);return Ts(wo(h,255),"int32")}}),bu=Ba({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=za(e,"image","transform","float32"),o=za(t,"transforms","transform","float32");F(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),F(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),F(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Ra.runKernel(pr,l,u)}}),xu=Ba({bandPart_:function(e,t,n){F(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),F(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=za(e,"a","bandPart");F(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Mi(gu(0,s,1,"int32"),[-1,1]),l=gu(0,i,1,"int32"),u=ko(o,l),c=So(fu(u,mi(+t,"int32")),go(u,mi(-n,"int32"))),h=Ho([s,i],r.dtype);return Mi(gl(wl(Mi(r,[-1,s,i])).map((e=>Nl(c,e,h)))),a)}}),vu=Ba({min_:function(e,t=null,n=!1){const r={x:za(e,"x","min")},a={axis:t,keepDims:n};return Ra.runKernel(rn,r,a)}}),wu=Ba({pow_:function(e,t){let n=za(e,"base","pow"),r=za(t,"exp","pow");[n,r]=ka(n,r);const a={a:n,b:r};return Ra.runKernel(xn,a)}});function ku(e,t,n=null){if(0===e.rank)return yi(e);if(1!==e.rank&&null===n)return ku(Mi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return No(yi(e),n);if(t===1/0)return vo(yi(e),n);if(t===-1/0)return vu(yi(e),n);if("euclidean"===t||2===t)return fl(No(wu(yi(e),mi(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return vo(No(yi(e),n[0]),n[1]-1);if(t===1/0)return vo(No(yi(e),n[1]),n[0]);if(t===-1/0)return vu(No(yi(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return fl(No(Bo(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Nu=Ba({norm_:function(e,t="euclidean",n=null,r=!1){const a=ku(e=za(e,"x","norm"),t,n);let s=a.shape;if(r){const t=G(n,e.shape);s=Oo(a.shape,t)}return Mi(a,s)}}),Iu=Ba({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,F(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)F(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=dl(e,e.shape[0],0).map((e=>ml(e,[0])));F(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Ra.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=wo(No(wo(n[r],e)),n[r]);e=ko(e,t)}return ao(e,Nu(e,"euclidean"))})));return t?gl(n,0):n}});function Su(e,t=!1){return Ra.tidy((()=>{F(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=co(n),s=Cs(e);const i=xl([[1]],[1,1]);let o=Cs(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=s,l=o,u=a;[o,s,a]=Ra.tidy((()=>{const t=il(s,[e,e],[n-e,1]),l=Nu(t),u=il(s,[e,e],[1,1]),c=Nl(mo(u,0),xl([[-1]]),xl([[1]])),h=ko(u,wo(c,l)),p=ao(t,h);o=1===p.shape[0]?Cs(i):Gi([i,il(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=Uo(ao(To(c,h),l)),f=il(s,[e,0],[n-e,r]),m=wo(d,o),g=Sl(o);if(0===e)s=ko(f,To(m,To(g,f)));else{const t=ko(f,To(m,To(g,f)));s=Gi([il(s,[0,0],[e,r]),t],0)}const y=Sl(m),b=il(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=ko(b,To(To(b,o),y));else{const t=ko(b,To(To(b,o),y));a=Gi([il(a,[0,0],[n,e]),t],1)}return[o,s,a]})),hi([t,l,u])}return!t&&n>r&&(a=il(a,[0,0],[n,r]),s=il(s,[0,0],[r,r])),[a,s]}))}const Tu=Ba({qr_:function(e,t=!1){if(F(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Su(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=wl(Mi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=Su(e,t);a.push(n),s.push(r)})),[Mi(gl(a,0),e.shape),Mi(gl(s,0),e.shape)]}}});var Cu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Cu||(Cu={}));const Eu=Ba({computeWeightedLoss_:function(e,t,n=Cu.SUM_BY_NONZERO_WEIGHTS){const r=za(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=za(t,"weights","computeWeightedLoss"));const s=null==a?r:wo(r,a);if(n===Cu.NONE)return s;if(n===Cu.SUM)return No(s);if(n===Cu.MEAN){if(null==a)return Ro(s);{const e=r.size/a.size,t=ao(No(s),No(a));return e>1?ao(t,mi(e)):t}}if(n===Cu.SUM_BY_NONZERO_WEIGHTS){if(null==a)return ao(No(s),mi(r.size));{const e=wo(a,jo(r.shape)),t=Ts(No(Vo(e,mi(0))),"float32");return ao(No(s),t)}}throw Error(`Unknown reduction: ${n}`)}});Ba({absoluteDifference_:function(e,t,n,r=Cu.SUM_BY_NONZERO_WEIGHTS){const a=za(e,"labels","absoluteDifference"),s=za(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=za(n,"weights","absoluteDifference")),D(a.shape,s.shape,"Error in absoluteDifference: ");const o=yi(ko(a,s));return Eu(o,i,r)}}),Ba({cosineDistance_:function(e,t,n,r,a=Cu.SUM_BY_NONZERO_WEIGHTS){const s=za(e,"labels","cosineDistance"),i=za(t,"predictions","cosineDistance");let o=null;null!=r&&(o=za(r,"weights","cosineDistance")),D(s.shape,i.shape,"Error in cosineDistance: ");const l=mi(1),u=ko(l,No(wo(s,i),n,!0));return Eu(u,o,a)}}),Ba({hingeLoss_:function(e,t,n,r=Cu.SUM_BY_NONZERO_WEIGHTS){let a=za(e,"labels","hingeLoss");const s=za(t,"predictions","hingeLoss");let i=null;null!=n&&(i=za(n,"weights","hingeLoss")),D(a.shape,s.shape,"Error in hingeLoss: ");const o=mi(1);a=ko(wo(mi(2),a),o);const l=tl(ko(o,wo(a,s)));return Eu(l,i,r)}}),Ba({huberLoss_:function(e,t,n,r=1,a=Cu.SUM_BY_NONZERO_WEIGHTS){const s=za(e,"labels","huberLoss"),i=za(t,"predictions","huberLoss");let o=null;null!=n&&(o=za(n,"weights","huberLoss")),D(s.shape,i.shape,"Error in huberLoss: ");const l=mi(r),u=yi(ko(i,s)),c=Ao(u,l),h=ko(u,c),p=bi(wo(mi(.5),Bo(c)),wo(l,h));return Eu(p,o,a)}}),Ba({logLoss_:function(e,t,n,r=1e-7,a=Cu.SUM_BY_NONZERO_WEIGHTS){const s=za(e,"labels","logLoss"),i=za(t,"predictions","logLoss");let o=null;null!=n&&(o=za(n,"weights","logLoss")),D(s.shape,i.shape,"Error in logLoss: ");const l=mi(1),u=mi(r),c=Uo(wo(s,bo(bi(i,u)))),h=wo(ko(l,s),bo(bi(ko(l,i),u))),p=ko(c,h);return Eu(p,o,a)}});const $u=Ba({squaredDifference_:function(e,t){let n=za(e,"a","squaredDifference"),r=za(t,"b","squaredDifference");[n,r]=ka(n,r),Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(tr,a,{})}});Ba({meanSquaredError_:function(e,t,n,r=Cu.SUM_BY_NONZERO_WEIGHTS){const a=za(e,"labels","meanSquaredError"),s=za(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=za(n,"weights","meanSquaredError")),D(a.shape,s.shape,"Error in meanSquaredError: ");const o=$u(a,s);return Eu(o,i,r)}}),Ba({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Cu.SUM_BY_NONZERO_WEIGHTS){let s=za(e,"multiClassLabels","sigmoidCrossEntropy");const i=za(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=za(n,"weights","sigmoidCrossEntropy")),D(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=mi(r),t=mi(1),n=mi(.5);s=bi(wo(s,ko(t,e)),wo(n,e))}const l=function(e,t){const n=za(e,"labels","sigmoidCrossEntropyWithLogits"),r=za(t,"logits","sigmoidCrossEntropyWithLogits");D(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=tl(r),s=wo(r,n),i=xo(oo(Uo(yi(r))));return bi(ko(a,s),i)}(s,i);return Eu(l,o,a)}});const Ru=Ba({logSumExp_:function(e,t=null,n=!1){const r=za(e,"x","logSumExp"),a=G(t,r.shape),s=vo(r,a,!0),i=ko(r,s),o=oo(i),l=No(o,a),u=bo(l),c=bi(Mi(s,u.shape),u);if(n){const e=Oo(c.shape,a);return Mi(c,e)}return c}});Ba({softmaxCrossEntropy_:function(e,t,n,r=0,a=Cu.SUM_BY_NONZERO_WEIGHTS){let s=za(e,"onehotLabels","softmaxCrossEntropy");const i=za(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=za(n,"weights","softmaxCrossEntropy")),D(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=mi(r),t=mi(1),n=mi(s.shape[1]);s=bi(wo(s,ko(t,e)),ao(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=fi(((e,t,r)=>{const a=Ru(t,[n],!0),s=ko(Ts(t,"float32"),a);r([e,s]);const i=Uo(wo(s,e));return{value:No(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Oo(e.shape,[n]);return[wo(Mi(e,s),ko(Ts(r,"float32"),oo(a))),wo(Mi(e,s),ko(oo(a),Ts(r,"float32")))]}}}));return r(e,t)}(s,i);return Eu(l,o,a)}});const Au=Ba({sparseFillEmptyRows_:function(e,t,n,r){const a=za(e,"indices","sparseFillEmptyRows","int32"),s=za(t,"values","sparseFillEmptyRows"),i=za(n,"denseShape","sparseFillEmptyRows","int32"),o=za(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:a,values:s,denseShape:i,defaultValue:o},u=Ra.runKernel(Yn,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),_u=Ba({sparseReshape_:function(e,t,n){const r=za(e,"inputIndices","sparseReshape","int32"),a=za(t,"inputShape","sparseReshape","int32"),s=za(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=Ra.runKernel(Qn,i);return{outputIndices:o[0],outputShape:o[1]}}}),Fu=Ba({sparseSegmentMean_:function(e,t,n){const r=za(e,"data","sparseSegmentMean"),a=za(t,"indices","sparseSegmentMean","int32"),s=za(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Ra.runKernel(Zn,i)}}),Du=Ba({sparseSegmentSum_:function(e,t,n){const r=za(e,"data","sparseSegmentSum"),a=za(t,"indices","sparseSegmentSum","int32"),s=za(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return Ra.runKernel(Jn,i)}}),Ou=Ba({stringNGrams_:function(e,t,n,r,a,s,i,o){const l=za(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=za(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=Ra.runKernel(ar,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),Mu=Ba({stringSplit_:function(e,t,n=!0){const r=za(e,"input","stringSplit","string"),a=za(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=Ra.runKernel(sr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Lu=Ba({stringToHashBucketFast_:function(e,t){const n=za(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Ra.runKernel(ir,a,r)}}),zu={flipLeftRight:Xl,grayscaleToRGB:Yl,resizeNearestNeighbor:pu,resizeBilinear:hu,rotateWithOffset:Ql,cropAndResize:Kl,nonMaxSuppression:Jl,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=za(e,"boxes","nonMaxSuppressionAsync"),i=za(t,"scores","nonMaxSuppressionAsync"),o=Zl(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const l=await Promise.all([s.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=nu(u,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),bl(h,"int32")},nonMaxSuppressionWithScore:uu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=za(e,"boxes","nonMaxSuppressionAsync"),o=za(t,"scores","nonMaxSuppressionAsync"),l=Zl(i,o,n,r,a,s);n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=au(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:bl(p,"int32"),selectedScores:bl(d)}},nonMaxSuppressionPadded:cu,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=za(e,"boxes","nonMaxSuppressionAsync"),o=za(t,"scores","nonMaxSuppressionAsync"),l=Zl(i,o,n,r,a,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=ru(p,d,u,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:bl(f,"int32"),validOutputs:mi(m,"int32")}},threshold:yu,transform:bu},Pu={bandPart:xu,gramSchmidt:Iu,qr:Tu},Bu={sparseFillEmptyRows:Au,sparseReshape:_u,sparseSegmentMean:Fu,sparseSegmentSum:Du},Wu={stringNGrams:Ou,stringSplit:Mu,stringToHashBucketFast:Lu};class Uu extends gi{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ra.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ra.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:ci((()=>Il(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:ci((()=>Il(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;ci((()=>{const e=bi(wo(s,this.rho),wo(Bo(a),1-this.rho)),t=wo(ao(fl(bi(i,this.epsilon)),fl(bi(s,this.epsilon))),a),n=bi(wo(i,this.rho),wo(Bo(t),1-this.rho));s.assign(e),i.assign(n);const o=bi(wo(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(hi(this.accumulatedGrads.map((e=>e.variable))),hi(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Uu.className="Adadelta",oi(Uu);class Vu extends gi{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ra.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:ci((()=>ho(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;ci((()=>{const e=bi(s,Bo(a));s.assign(e);const t=bi(wo(ao(a,fl(bi(e,Ra.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&hi(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Vu.className="Adagrad",oi(Vu);class Gu extends gi{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ci((()=>{this.accBeta1=mi(t).variable(),this.accBeta2=mi(n).variable()})),null==r&&(this.epsilon=Ra.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ci((()=>{const n=ko(1,this.accBeta1),r=ko(1,this.accBeta2);t.forEach(((t,a)=>{const s=Ra.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:ci((()=>Il(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:ci((()=>Il(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,u=bi(wo(o,this.beta1),wo(i,1-this.beta1)),c=bi(wo(l,this.beta2),wo(Bo(i),1-this.beta2)),h=ao(u,n),p=ao(c,r);o.assign(u),l.assign(c);const d=bi(wo(ao(h,bi(fl(p),this.epsilon)),-this.learningRate),s);s.assign(d)})),this.accBeta1.assign(wo(this.accBeta1,this.beta1)),this.accBeta2.assign(wo(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&hi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&hi(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),ci((()=>{this.accBeta1.assign(wu(this.beta1,this.iterations_+1)),this.accBeta2.assign(wu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Gu.className="Adam",oi(Gu);class Hu extends gi{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ci((()=>{this.iteration=mi(0).variable(),this.accBeta1=mi(t).variable()})),null==r&&(this.epsilon=Ra.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);ci((()=>{const n=ko(1,this.accBeta1),r=ao(-this.learningRate,bi(wo(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=Ra.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Il(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Il(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,u=bi(wo(o,this.beta1),wo(i,1-this.beta1)),c=wo(l,this.beta2),h=yi(i),p=$o(c,h);o.assign(u),l.assign(p);const d=bi(wo(ao(r,n),ao(u,bi(p,this.epsilon))),s);s.assign(d)})),this.iteration.assign(bi(this.iteration,1)),this.accBeta1.assign(wo(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&hi(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&hi(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Hu.className="Adamax",oi(Hu);class ju extends gi{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=Ra.registeredVariables[t];ci((()=>{const e=bi(wo(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=pi(mi(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}ju.className="SGD",oi(ju);class qu extends ju{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=mi(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ra.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:ci((()=>Il(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&ci((()=>{let e;const t=bi(wo(this.m,a),s);e=this.useNesterov?bi(wo(this.c,bi(s,wo(t,this.m))),r):bi(wo(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&hi(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}qu.className="Momentum",oi(qu);class Ku extends gi{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=Ra.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Ra.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:ci((()=>Il(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:ci((()=>Il(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:ci((()=>Il(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;ci((()=>{const e=bi(wo(i,this.decay),wo(Bo(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=bi(wo(t,this.decay),wo(s,1-this.decay)),l=ao(wo(s,this.learningRate),fl(ko(e,bi(Bo(a),this.epsilon)))),u=bi(wo(o,this.momentum),l);i.assign(e),t.assign(a),o.assign(u);const c=ko(r,u);r.assign(c)}else{const e=bi(wo(i,this.decay),wo(Bo(s),1-this.decay)),t=bi(wo(o,this.momentum),ao(wo(s,this.learningRate),fl(bi(e,this.epsilon))));i.assign(e),o.assign(t);const n=ko(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&hi(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&hi(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&hi(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Ku.className="RMSProp",oi(Ku);class Xu{static sgd(e){return new ju(e)}static momentum(e,t,n=!1){return new qu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Ku(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Gu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Uu(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Hu(e,t,n,r,a)}static adagrad(e,t=.1){return new Vu(e,t)}}const Yu={sgd:Xu.sgd,momentum:Xu.momentum,adadelta:Xu.adadelta,adagrad:Xu.adagrad,rmsprop:Xu.rmsprop,adamax:Xu.adamax,adam:Xu.adam},Qu="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Zu(){return new Promise((e=>Qu((()=>e()))))}function Ju(e,t){const n=e[0].length;e.forEach(((e,t)=>{F(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),F(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)F(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function ec(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const tc=30;function nc(e){return e<=tc?e:te(e,Math.floor(Math.sqrt(e)))}function rc(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function ac(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function sc(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function ic(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function oc(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function lc(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function uc(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===L(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,l=a.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);const c=[...ne(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,c]}function cc(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function hc(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}cc(n,t,e)}function pc(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:L(t.shape)/o,sliceSize:i,strides:[...ne(n.slice(0,a)),1],outputSize:L(n)}}const dc=1.7580993408473768,fc=1.0507009873554805,mc=.3275911,gc=.254829592,yc=-.284496736,bc=1.421413741,xc=-1.453152027,vc=1.061405429;function wc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function kc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Nc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ic(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Sc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Tc(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Cc(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Ec(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const $c=/->/g;function Rc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace($c,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");F(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}const u=o.length,c=[];for(let e=a.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Ac(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function _c(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:F(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Fc(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Oc(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Dc(e){return e.every(((e,t)=>e===t))}function Oc(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Mc(e,t,n=0){let r=[];if("number"==typeof t)F(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);F(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}F(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Lc(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function zc(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Pc(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Bc(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Wc(e,t){return`size ${e} must be non-negative, not ${t}`}function Uc(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Vc(e,t){return`Input to reshape is a SparseTensor with ${L(e)}\n  dense values, but the requested shape requires a multiple of ${L(t)}. inputShape=${e} outputShape= ${t}`}function Gc(e,t){return`Input to reshape is a tensor with ${L(e)} dense values, but the requested shape has ${L(t)}. inputShape=${e} outputShape=${t}`}function Hc(){return"segment ids must be >= 0"}function jc(){return"segment ids are not increasing"}function qc(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Kc(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Xc(e,t){let n,r=!1;for(e<=tc?(n=e,r=!0):n=te(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=te(e,n+1);return n}function Yc(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Qc(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Zc(e){try{return e.map((e=>Zr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Jc(e){return e.map((e=>Qr(e)))}function eh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Ss(e,"int32"),a=Ss([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}const th={kernelName:xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(e,Ol(Ts(n,"float32"),-1))}}},nh={kernelName:ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bo(Ts(n,"float32")),r=fl(ko(mi(1),t));return Uo(ao(e,r))}}}},rh={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=fl(ko(Bo(Ts(n,"float32")),1));return ao(e,t)}}}},ah={kernelName:ke,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ps(n.shape,r.shape);return{a:()=>{let t=e;const r=zs(n.shape,a);return r.length>0&&(t=No(t,r)),Mi(t,n.shape)},b:()=>{let t=e;const n=zs(r.shape,a);return n.length>0&&(t=No(t,n)),Mi(t,r.shape)}}}},sh={kernelName:Ne,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},ih={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(n)}}},oh={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Il(n)}}},lh={kernelName:Ee,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ao(e,fl(ko(mi(1),Bo(Ts(n,"float32")))))}}},uh={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=fl(bi(mi(1),Bo(Ts(n,"float32"))));return ao(e,t)}}}},ch={kernelName:_e,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ps(n.shape,r.shape);return{a:()=>{const t=bi(Bo(n),Bo(r));let s=wo(e,ao(r,t));const i=zs(n.shape,a);return i.length>0&&(s=No(s,i)),Mi(s,n.shape)},b:()=>{const t=bi(Bo(n),Bo(r));let s=Uo(wo(e,ao(n,t)));const i=zs(r.shape,a);return i.length>0&&(s=No(s,i)),Mi(s,r.shape)}}}},hh={kernelName:Re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ao(e,bi(Bo(Ts(n,"float32")),1))}}},ph={kernelName:Ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ao(e,ko(mi(1),Bo(Ts(n,"float32"))))}}},dh=Ba({avgPool3dGrad_:function(e,t,n,r,a,s){const i=za(e,"dy","avgPool3dGrad"),o=za(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Mi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Mi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),F(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),F(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Oi("avgPool3dGrad",a,s);const h={dy:l,input:u},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},d=Ra.runKernel(Me,h,p);return c?Mi(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),fh={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>dh(e,r,a,s,i,o)}}},mh=Ba({avgPoolGrad_:function(e,t,n,r,a){const s=za(e,"dy","avgPoolGrad"),i=za(t,"input","avgPoolGrad");F(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=Mi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Mi(s,[1,s.shape[0],s.shape[1],s.shape[2]])),F(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),F(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:a},p=Ra.runKernel(De,c,h);return u?Mi(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),gh={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>mh(e,r,a,s,i)}}},yh={kernelName:Le,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>To(e,a,!1,!1),b:()=>To(e,r,!0,!1)}:s&&!i?{a:()=>To(a,e,!1,!0),b:()=>To(r,e,!1,!1)}:{a:()=>To(a,e,!0,!0),b:()=>To(e,r,!0,!0)}:{a:()=>To(e,a,!1,!0),b:()=>To(r,e,!0,!1)}}},bh=Ba({spaceToBatchND_:function(e,t,n){const r=za(e,"x","spaceToBatchND");F(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),F(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),F(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return Ra.runKernel(qn,a,s)}}),xh={kernelName:ze,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>bh(e,r,a)}}},vh={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>No(e,o,!0)}}},wh={kernelName:We,gradFunc:e=>({x:()=>e.clone()})},kh={kernelName:Ue,gradFunc:e=>({x:()=>Il(e)})},Nh={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Nl(So(go(r,a),fu(r,s)),e,Il(e))}}},Ih={kernelName:He,inputsToSave:["x"],gradFunc:th.gradFunc},Sh={kernelName:je,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=G(a,t[0].shape)[0],i=r.map((e=>e[s]));return dl(e,i,s).map((e=>()=>e))}},Th={kernelName:qe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return F(_i(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Qi(r.shape,e,a,i,o,l),filter:()=>Fl(r,e,a.shape,i,o,l)}}},Ch={kernelName:Xe,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Xi(e,a,s,i,o,1,l),filter:()=>Fl(e,r,a.shape,s,i,o,l)}}},Eh=Ba({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Mi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Mi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),F(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),F(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),F(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),F(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),F(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},l={strides:r,pad:a,filterShape:n};return Ra.runKernel(Qe,o,l)}}),$h={kernelName:Ye,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;F(_i(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>eo(i.shape,e,o,a,s),filter:()=>Eh(i,e,o.shape,a,s)}}},Rh=Ba({sin_:function(e){const t={x:za(e,"x","sin","float32")};return Ra.runKernel(Bn,t)}}),Ah={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(Uo(Rh(Ts(n,"float32"))),e)}}},_h=Ba({sinh_:function(e){const t={x:za(e,"x","sinh")};return Ra.runKernel(Wn,t)}}),Fh={kernelName:et,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(_h(Ts(n,"float32")),e)}}},Dh=Ba({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:za(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Ra.runKernel(nt,a,s)}}),Oh={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Lo([a],r.rank);let n=Dh(e,a,s,!i);return null!=t&&(n=Sl(n,t)),n}}}},Mh={kernelName:it,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;F(_i(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return F(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),F(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),F(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),F(Fi(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),Oi("depthwiseConv2d",s,i),{x:()=>Ul(l.shape,e,u,a,s,o,i),filter:()=>Wl(l,e,u.shape,a,s,o,i)}}},Lh={kernelName:ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>Ra.runKernel(ht,s,n),filter:()=>Ra.runKernel(pt,i,n)}}},zh={kernelName:mt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Ra.runKernel(gt,r)}}},Ph={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=wo(oo(Uo(Bo(n))),2/Math.sqrt(Math.PI));return{x:()=>wo(e,r)}}},Bh={kernelName:xt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(e,n)}}},Wh={kernelName:vt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Mi(e,n.shape)}}},Uh={kernelName:wt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(e,oo(n))}}},Vh={kernelName:St,gradFunc:e=>({x:()=>Il(e)})},Gh={kernelName:Tt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ps(n.shape,r.shape);return{a:()=>{const t=ao(e,Ts(r,"float32")),s=zs(n.shape,a);return s.length>0?Mi(No(t,s),n.shape):t},b:()=>{let t=wo(e,Ts(n,"float32"));const s=zs(r.shape,a);s.length>0&&(t=Mi(No(t,s),r.shape));const i=Bo(r);return Uo(ao(t,Ts(i,"float32")))}}}},Hh=Ba({rsqrt_:function(e){const t={x:za(e,"x","rsqrt","float32")};return Ra.runKernel(Dn,t)}}),jh={kernelName:Ct,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,l=null==o?mi(1):o,u=zs(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=ko(a,s),p=wo(e,l),d=Hh(bi(i,mi(r))),f=wo(wo(wo(d,d),d),mi(-.5));return{x:()=>1===s.rank?Mi(wo(wo(e,uo(Mi(d,[1,1,1,s.shape[0]]),c)),l),a.shape):Mi(wo(wo(e,d),l),a.shape),mean:()=>{let e=wo(wo(d,mi(-1)),p);return 1===s.rank&&(e=No(e,u)),Mi(e,s.shape)},variance:()=>{let e=wo(wo(f,h),p);return 1===s.rank&&(e=No(e,u)),Mi(e,s.shape)},scale:()=>{const t=wo(h,d);let n=wo(e,t);return 1===s.rank&&(n=No(n,u)),Mi(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=No(t,u)),Mi(t,s.shape)}}}},qh=Ba({unsortedSegmentSum_:function(e,t,n){const r=za(e,"x","unsortedSegmentSum"),a=za(t,"segmentIds","unsortedSegmentSum","int32");F(P(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return Ra.runKernel(gr,s,i)}}),Kh={kernelName:Et,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=G(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),c=u.length,h=Xh(0,l),p=Xh(l+1,l+1+c),d=Yh([o,[n],u]),f=Mi(e,d),m=Mi(a,[n]),g=Yh([[l],h,p]),y=Sl(f,g);let b=qh(y,m,r.shape[i]);const x=zo(g);return b=Sl(b,x),b},indices:()=>a}}};function Xh(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Yh(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Qh={kernelName:At,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Il(n),b:()=>Il(r)}}},Zh={kernelName:_t,gradFunc:e=>({x:()=>Ts(e,"float32")})},Jh={kernelName:Ot,gradFunc:e=>({x:()=>Il(e)})},ep={kernelName:Mt,gradFunc:e=>({x:()=>Il(e)})},tp={kernelName:Lt,gradFunc:e=>({x:()=>Il(e)})},np={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=mo(r,0);return{x:()=>Nl(s,e,wo(e,a))}}},rp={kernelName:Vt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ao(e,bi(n,1))}}},ap={kernelName:Ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ao(e,Ts(n,"float32"))}}},sp={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=oo(r);return ko(e,wo(No(e,a,!0),t))}}}},ip=Ba({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:a,alpha:s,beta:i};return Ra.runKernel(Kt,o,l)}}),op={kernelName:qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>ip(r,a,e,s,i,o,l)}}};function lp(e,t,n,r){return t.rank<n.rank&&(t=Mi(t,Oo(t.shape,r))),e.rank<n.rank&&(e=Mi(e,Oo(e.shape,r))),{x:()=>wo(e,Ts(io(n,t),e.dtype))}}const up={kernelName:Xt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=lp(e,t[1],s,G(a,s.shape));return{x:()=>i.x()}}},cp=Ba({less_:function(e,t){let n=za(e,"a","less","string_or_numeric"),r=za(t,"b","less","string_or_numeric");[n,r]=ka(n,r),Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(Pt,a)}}),hp={kernelName:Yt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>wo(e,Ts(go(n,r),"float32")),b:()=>wo(e,Ts(cp(n,r),"float32"))}}},pp=Ba({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=za(e,"dy","maxPool3dGrad"),l=za(t,"input","maxPool3dGrad"),u=za(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=Mi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Mi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Mi(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),F(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),F(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),F(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),Oi("maxPool3dGrad",s,i);const f={dy:c,input:h,output:p},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=Ra.runKernel(en,f,m);return d?Mi(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),dp={kernelName:Jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>pp(e,r,a,s,i,o,l)}}},fp=Ba({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=za(e,"dy","maxPoolGrad"),l=za(t,"input","maxPoolGrad"),u=za(n,"output","maxPoolGrad");F(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),F(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),F(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Oi("maxPoolGrad",s,i);const c={dy:o,input:l,output:u},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return Ra.runKernel(Zt,c,h)}}),mp={kernelName:Qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>fp(e,r,a,s,i,o)}}},gp={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=G(a,r.shape),i=L(Do(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Mi(e,t);return ao(wo(n,jo(r.shape,"float32")),i)}}}},yp={kernelName:rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=lp(e,i,s,G(a,s.shape));return{x:()=>o.x()}}},bp={kernelName:an,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>wo(e,Ts(fu(n,r),"float32")),b:()=>wo(e,Ts(mo(n,r),"float32"))}}},xp={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>il(e,s,r.shape)}}},vp={kernelName:on,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ps(n.shape,r.shape);return{a:()=>{const t=zs(n.shape,a);return t.length>0?Mi(No(e,t),n.shape):e},b:()=>{const t=wo(e,Uo(po(ao(n,r)))),s=zs(r.shape,a);return s.length>0?Mi(No(t,s),r.shape):t}}}},wp={kernelName:un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ps(n.shape,r.shape);return{a:()=>{const t=wo(e,Ts(r,"float32")),s=zs(n.shape,a);return s.length>0?Mi(No(t,s),n.shape):t},b:()=>{const t=wo(e,Ts(n,"float32")),s=zs(r.shape,a);return s.length>0?Mi(No(t,s),r.shape):t}}}},kp={kernelName:cn,gradFunc:e=>({x:()=>Uo(e)})},Np={kernelName:gn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Ho(n.shape,"float32")}}},Ip={kernelName:mn,gradFunc:e=>({x:()=>Il(e)})},Sp={kernelName:yn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return wl(e,r).map((e=>()=>e))}},Tp={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>il(e,s,r.shape)}}},Cp={kernelName:xn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=Ps(s.shape,i.shape);return{a:()=>{const t=Ts(i,"float32");let n=wo(e,wo(t,wu(s,ko(t,mi(1)))));const r=zs(s.shape,o);return r.length>0&&(n=No(n,r)),Mi(n,s.shape)},b:()=>{const t=mo(s,0),n=Nl(t,bo(s),Il(s));let r=wo(e,wo(a,n));const l=zs(i.shape,o);return l.length>0&&(r=No(r,l)),Mi(r,i.shape)}}}},Ep={kernelName:vn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=mo(n,0);return{x:()=>Nl(a,e,wo(e,r)),alpha:()=>{let t=Nl(a,Il(e),wo(e,n));const s=zs(r.shape,e.shape);return s.length>0&&(t=No(t,s)),Mi(t,r.shape)}}}},$p=Ba({cumprod_:function(e,t=0,n=!1,r=!1){const a={x:za(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return Ra.runKernel(tt,a,s)}});const Rp={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;let s=[];return s=null==a?r.shape.map(((e,t)=>t)):"number"==typeof a?[a]:a,{x:()=>function(e,t,n){const r=e.shape.length,a=r-n.length,s=Lo(n,r);let i=e;null!=s&&(i=Sl(e,s));const o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const a=Mi(t,r),s=$p(e,n,!0,!1),i=$p(e,n,!0,!0),o=wo(s,i);return wo(a,o)}(i.reshape(o),t,a);if(u=u.reshape(i.shape),null!=s){const e=zo(s);u=Sl(u,e)}return u}(r,e,s)}}},Ap={kernelName:dt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ps(n.shape,r.shape);return{a:()=>{const t=ao(e,Ts(r,"float32")),s=zs(n.shape,a);return s.length>0?Mi(No(t,s),n.shape):t},b:()=>{let t=wo(e,Ts(n,"float32"));const s=zs(r.shape,a);s.length>0&&(t=Mi(No(t,s),r.shape));const i=Bo(r);return Uo(ao(t,Ts(i,"float32")))}}}},_p={kernelName:In,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ao(e,Uo(Bo(n)))}}},Fp={kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=wo(fu(n,6),Ol(n));return{x:()=>wo(e,Ts(r,"float32"))}}},Dp={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(e,Ts(Ol(n),"float32"))}}},Op={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(e,n.shape)}}},Mp={kernelName:$n,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Ra.runKernel(Rn,a,n)}}},Lp={kernelName:Cn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>Ra.runKernel(En,a,n)}}},zp={kernelName:_n,gradFunc:(e,t,n)=>{const{dims:r}=n,a=G(r,e.shape);return{x:()=>nl(e,a)}}},Pp={kernelName:Fn,gradFunc:e=>({x:()=>Il(e)})},Bp={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Uo(ao(e,wo(wu(n,1.5),2)))}}},Wp=Ba({logicalNot_:function(e){const t={x:za(e,"x","logicalNot","bool")};return Ra.runKernel(Ht,t)}}),Up={kernelName:Ln,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ts(Il(n),"float32"),t:()=>wo(e,Ts(n,e.dtype)),e:()=>wo(e,Ts(Wp(n),e.dtype))}}},Vp={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=mo(n,mi(0)),r=mi(dc),a=mi(fc),s=wo(e,a),i=wo(wo(e,r),oo(Ts(n,"float32")));return Nl(t,s,i)}}}},Gp={kernelName:Vn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(e,wo(n,ko(mi(1),n)))}}},Hp={kernelName:Un,gradFunc:e=>({x:()=>Il(e)})},jp=Ba({cos_:function(e){const t={x:za(e,"x","cos","float32")};return Ra.runKernel(Je,t)}}),qp={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(jp(Ts(n,"float32")),e)}}},Kp=Ba({cosh_:function(e){const t={x:za(e,"x","cosh","float32")};return Ra.runKernel(et,t)}}),Xp={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(Kp(Ts(n,"float32")),e)}}},Yp={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,l]=ni(r,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Ko(e,u)}}},Qp={kernelName:Xn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=wo(e,r);return{logits:()=>ko(s,wo(No(s,[a],!0),r))}}},Zp={kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(e,sl(n))}}},Jp=Ba({batchToSpaceND_:function(e,t,n){const r=za(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));F(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),F(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),F(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return Ra.runKernel(ze,s,i)}}),ed={kernelName:qn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Jp(e,r,a)}}},td={kernelName:Kn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Gi(e,r)}}},nd=[th,nh,rh,ah,sh,ih,oh,lh,uh,ch,hh,ph,fh,gh,yh,xh,vh,wh,kh,Nh,Ih,Sh,Ch,Th,$h,Ah,Fh,Oh,Mh,Lh,Ap,zh,Ph,Bh,Wh,Uh,Gh,Vh,jh,Kh,Qh,Zh,Jh,ep,tp,np,rp,ap,sp,op,up,up,hp,dp,mp,gp,yp,bp,xp,vp,wp,kp,Np,Ip,Sp,Tp,Tp,Cp,Ep,Rp,_p,Fp,Dp,Op,Mp,Lp,zp,Pp,Bp,Up,Vp,Gp,Hp,qp,Xp,Yp,Qp,Zp,ed,ed,td,td,{kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ao(e,wo(fl(Ts(n,"float32")),2))}}},{kernelName:tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=mi(2);return{a:()=>wo(e,wo(a,ko(n,r))),b:()=>wo(e,wo(a,ko(r,n)))}}},{kernelName:nr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(e,wo(Ts(n,"float32"),2))}}},{kernelName:br,gradFunc:e=>({x:()=>Il(e)})},{kernelName:or,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ps(n.shape,r.shape);return{a:()=>{let t=e;const r=zs(n.shape,a);return r.length>0&&(t=No(t,r)),Mi(t,n.shape)},b:()=>{let t=e;const n=zs(r.shape,a);return n.length>0&&(t=No(t,n)),Mi(Uo(t),r.shape)}}}},{kernelName:jn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;G(s,r.shape).forEach((e=>{a[e]=1}));const i=Mi(e,a),o=wo(i,jo(r.shape,"float32"));return{x:()=>o}}},{kernelName:lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ao(e,Bo(jp(n)))}}},{kernelName:ur,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wo(ko(mi(1),Bo(n)),e)}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Il(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=bi(t,il(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=bi(t,il(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=bi(t,il(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=bi(t,il(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:dr,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=zo(a);return{x:()=>Sl(e,s)}}},{kernelName:mr,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>gl(e,a)}}},{kernelName:gr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=$o(t,Il(t)),r=fo(e,n);let a=go(t,mi(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=lo(a,e+1);a=So(a,jo(r.shape,"bool"));const i=Il(r);return Nl(a,r,i)}(e,n)}}},{kernelName:yr,gradFunc:e=>({x:()=>Il(e)})}];for(const e of nd)_r(e);pa().prototype.abs=function(){return this.throwIfDisposed(),yi(this)};const rd=Ba({acos_:function(e){const t={x:za(e,"x","acos")};return Ra.runKernel(ve,t)}});pa().prototype.acos=function(){return this.throwIfDisposed(),rd(this)};const ad=Ba({acosh_:function(e){const t={x:za(e,"x","acosh")};return Ra.runKernel(we,t)}});pa().prototype.acosh=function(){return this.throwIfDisposed(),ad(this)},pa().prototype.add=function(e){return this.throwIfDisposed(),bi(this,e)},pa().prototype.all=function(e,t){return this.throwIfDisposed(),xi(this,e,t)},pa().prototype.any=function(e,t){return this.throwIfDisposed(),vi(this,e,t)},pa().prototype.argMax=function(e){return this.throwIfDisposed(),wi(this,e)};const sd=Ba({argMin_:function(e,t=0){const n={x:za(e,"x","argMin")},r={axis:t};return Ra.runKernel(Ce,n,r)}});pa().prototype.argMin=function(e){return this.throwIfDisposed(),sd(this,e)},pa().prototype.asScalar=function(){return this.throwIfDisposed(),F(1===this.size,(()=>"The array must have only 1 element.")),Mi(this,[])},pa().prototype.asType=function(e){return this.throwIfDisposed(),Ts(this,e)},pa().prototype.as1D=function(){return this.throwIfDisposed(),Mi(this,[this.size])},pa().prototype.as2D=function(e,t){return this.throwIfDisposed(),Mi(this,[e,t])},pa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Mi(this,[e,t,n])},pa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Mi(this,[e,t,n,r])},pa().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Mi(this,[e,t,n,r,a])};const id=Ba({asin_:function(e){const t={x:za(e,"x","asin")};return Ra.runKernel(Ee,t)}});pa().prototype.asin=function(){return this.throwIfDisposed(),id(this)};const od=Ba({asinh_:function(e){const t={x:za(e,"x","asinh")};return Ra.runKernel($e,t)}});pa().prototype.asinh=function(){return this.throwIfDisposed(),od(this)};const ld=Ba({atan_:function(e){const t={x:za(e,"x","atan")};return Ra.runKernel(Re,t)}});pa().prototype.atan=function(){return this.throwIfDisposed(),ld(this)};const ud=Ba({atan2_:function(e,t){let n=za(e,"a","atan2"),r=za(t,"b","atan2");[n,r]=ka(n,r);const a={a:n,b:r};return Ra.runKernel(_e,a)}});pa().prototype.atan2=function(e){return this.throwIfDisposed(),ud(this,e)};const cd=Ba({atanh_:function(e){const t={x:za(e,"x","atanh")};return Ra.runKernel(Ae,t)}});pa().prototype.atanh=function(){return this.throwIfDisposed(),cd(this)},pa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Li(this,e,t,n,r)},pa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Jp(this,e,t)},pa().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Pi(this,e,t,n,r,a)},pa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),kl(this,e)},pa().prototype.cast=function(e){return this.throwIfDisposed(),Ts(this,e)};const hd=Ba({ceil_:function(e){const t={x:za(e,"x","ceil","float32")};return Ra.runKernel(Ue,t)}});pa().prototype.ceil=function(){return this.throwIfDisposed(),hd(this)},pa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Vi(this,e,t)},pa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ha&&(e=[e]),Gi([this,...e],t)},pa().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Yi(this,e,t,n,r,a,s)},pa().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Zi(this,e,t,n,r,a)},pa().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Xi(this,e,t,n,r,a,s)},pa().prototype.cos=function(){return this.throwIfDisposed(),jp(this)},pa().prototype.cosh=function(){return this.throwIfDisposed(),Kp(this)},pa().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),$p(this,e,t,n)},pa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Dh(this,e,t,n)};const pd=Ba({depthToSpace_:function(e,t,n="NHWC"){const r=za(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];F(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),F(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),F(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),F(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Ra.runKernel(st,o,l)}});pa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),pd(this,e,t)},pa().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),no(this,e,t,n,r,a,s)};const dd=Ba({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=za(e,"x","dilation2d"),o=za(t,"filter","dilation2d");F(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),F(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),F("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=Mi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:a},p=Ra.runKernel(ct,c,h);return u?Mi(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});pa().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),dd(this,e,t,n,r,a)};const fd=Ba({divNoNan_:function(e,t){let n=za(e,"a","div"),r=za(t,"b","div");[n,r]=ka(n,r);const a=ao(n,r),s=Il(a),i=io(r,s);return Nl(i,s,a)}});pa().prototype.divNoNan=function(e){return this.throwIfDisposed(),fd(this,e)},pa().prototype.div=function(e){return this.throwIfDisposed(),ao(this,e)};const md=Ba({dot_:function(e,t){const n=za(e,"t1","dot"),r=za(t,"t2","dot");F(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(F(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=Mi(n,[1,-1]),t=Mi(r,[-1,1]),a=To(e,t);return Mi(a,[])}if(1===n.rank&&2===r.rank){const e=Mi(n,[1,-1]),t=Mi(r,[r.shape[0],r.shape[1]]),a=To(e,t);return Mi(a,[a.size])}if(2===n.rank&&1===r.rank){const e=Mi(r,[-1,1]),t=To(n,e);return Mi(t,[t.size])}{const e=Mi(r,[r.shape[0],r.shape[1]]);return To(n,e)}}});pa().prototype.dot=function(e){return this.throwIfDisposed(),md(this,e)},pa().prototype.elu=function(){return this.throwIfDisposed(),so(this)},pa().prototype.equal=function(e){return this.throwIfDisposed(),io(this,e)};const gd=Ba({erf_:function(e){let t=za(e,"x","erf");F("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ts(t,"float32"));const n={x:t};return Ra.runKernel(yt,n)}});pa().prototype.erf=function(){return this.throwIfDisposed(),gd(this)};const yd=Ba({euclideanNorm_:function(e,t=null,n=!1){return Nu(e,"euclidean",t,n)}});pa().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),yd(this,e,t)},pa().prototype.exp=function(){return this.throwIfDisposed(),oo(this)},pa().prototype.expandDims=function(e){return this.throwIfDisposed(),lo(this,e)};const bd=Ba({expm1_:function(e){const t={x:za(e,"x","expm1")};return Ra.runKernel(wt,t)}});pa().prototype.expm1=function(){return this.throwIfDisposed(),bd(this)},pa().prototype.fft=function(){return this.throwIfDisposed(),$l(this)},pa().prototype.flatten=function(){return this.throwIfDisposed(),Mi(this,[this.size])},pa().prototype.floor=function(){return this.throwIfDisposed(),po(this)},pa().prototype.floorDiv=function(e){return this.throwIfDisposed(),ro(this,e)},pa().prototype.gather=function(e,t){return this.throwIfDisposed(),fo(this,e,t)},pa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),go(this,e)},pa().prototype.greater=function(e){return this.throwIfDisposed(),mo(this,e)},pa().prototype.ifft=function(){return this.throwIfDisposed(),Al(this)},pa().prototype.irfft=function(){return this.throwIfDisposed(),_l(this)};const xd=Ba({isFinite_:function(e){const t={x:za(e,"x","isFinite")};return Ra.runKernel(Ot,t)}});pa().prototype.isFinite=function(){return this.throwIfDisposed(),xd(this)};const vd=Ba({isInf_:function(e){const t={x:za(e,"x","isInf")};return Ra.runKernel(Mt,t)}});pa().prototype.isInf=function(){return this.throwIfDisposed(),vd(this)};const wd=Ba({isNaN_:function(e){const t={x:za(e,"x","isNaN")};return Ra.runKernel(Lt,t)}});pa().prototype.isNaN=function(){return this.throwIfDisposed(),wd(this)},pa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),yo(this,e)},pa().prototype.lessEqual=function(e){return this.throwIfDisposed(),fu(this,e)},pa().prototype.less=function(e){return this.throwIfDisposed(),cp(this,e)};const kd=Ba({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=za(e,"x","localResponseNormalization");F(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),F(P(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=Mi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:a},c=Ra.runKernel(qt,l,u);return o?Mi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});pa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),kd(this,e,t,n,r)};const Nd=Ba({logSigmoid_:function(e){const t=za(e,"x","logSigmoid"),n=fi((e=>({value:Uo(pl(Uo(e))),gradFunc:t=>wo(t,sl(Uo(e)))})));return n(t)}});pa().prototype.logSigmoid=function(){return this.throwIfDisposed(),Nd(this)},pa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Io(this,e)},pa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Ru(this,e,t)},pa().prototype.log=function(){return this.throwIfDisposed(),bo(this)},pa().prototype.log1p=function(){return this.throwIfDisposed(),xo(this)},pa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),So(this,e)},pa().prototype.logicalNot=function(){return this.throwIfDisposed(),Wp(this)};const Id=Ba({logicalOr_:function(e,t){const n=za(e,"a","logicalOr","bool"),r=za(t,"b","logicalOr","bool");Ps(n.shape,r.shape);const a={a:n,b:r};return Ra.runKernel(jt,a)}});pa().prototype.logicalOr=function(e){return this.throwIfDisposed(),Id(this,e)};const Sd=Ba({logicalXor_:function(e,t){const n=za(e,"a","logicalXor","bool"),r=za(t,"b","logicalXor","bool");return Ps(n.shape,r.shape),So(Id(e,t),Wp(So(e,t)))}});pa().prototype.logicalXor=function(e){return this.throwIfDisposed(),Sd(this,e)},pa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),To(this,e,t,n)},pa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Co(this,e,t,n,r)},pa().prototype.max=function(e,t){return this.throwIfDisposed(),vo(this,e,t)},pa().prototype.maximum=function(e){return this.throwIfDisposed(),$o(this,e)},pa().prototype.mean=function(e,t){return this.throwIfDisposed(),Ro(this,e,t)},pa().prototype.min=function(e,t){return this.throwIfDisposed(),vu(this,e,t)},pa().prototype.minimum=function(e){return this.throwIfDisposed(),Ao(this,e)};const Td=Ba({mirrorPad_:function(e,t,n){F("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=za(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)F(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),F(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return Ra.runKernel(sn,i,s)}});pa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Td(this,e,t)};const Cd=Ba({mod_:function(e,t){let n=za(e,"a","mod"),r=za(t,"b","mod");[n,r]=ka(n,r);const a={a:n,b:r};return Ra.runKernel(on,a)}});pa().prototype.mod=function(e){return this.throwIfDisposed(),Cd(this,e)},pa().prototype.mul=function(e){return this.throwIfDisposed(),wo(this,e)},pa().prototype.neg=function(){return this.throwIfDisposed(),Uo(this)},pa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Nu(this,e,t,n)},pa().prototype.notEqual=function(e){return this.throwIfDisposed(),Vo(this,e)},pa().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Go(this,e,t,n)},pa().prototype.onesLike=function(){return this.throwIfDisposed(),qo(this)},pa().prototype.pad=function(e,t){return this.throwIfDisposed(),Ko(this,e,t)};const Ed=Ba({pool_:function(e,t,n,r,a,s,i){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const o=za(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Mi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(Fi(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const c=Ni(l.shape,t,s,a,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?l:bh(l,h,f),b=("avg"===n?()=>Li(y,t,s,g,i):()=>Co(y,t,s,g,i))(),x=d?b:Jp(b,h,m);return u?Mi(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});pa().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ed(this,e,t,n,r,a,s)},pa().prototype.pow=function(e){return this.throwIfDisposed(),wu(this,e)},pa().prototype.prelu=function(e){return this.throwIfDisposed(),Xo(this,e)};const $d=Ba({prod_:function(e,t=null,n=!1){let r=za(e,"x","prod");"bool"===r.dtype&&(r=Ts(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Ra.runKernel(wn,a,s)}});pa().prototype.prod=function(e,t){return this.throwIfDisposed(),$d(this,e,t)};const Rd=Ba({reciprocal_:function(e){const t={x:za(e,"x","reciprocal")};return Ra.runKernel(In,t)}});pa().prototype.reciprocal=function(){return this.throwIfDisposed(),Rd(this)},pa().prototype.relu=function(){return this.throwIfDisposed(),tl(this)},pa().prototype.relu6=function(){return this.throwIfDisposed(),Dl(this)},pa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Mi(this,e.shape)},pa().prototype.reshape=function(e){return this.throwIfDisposed(),Mi(this,e)},pa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),hu(this,e,t,n)},pa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),pu(this,e,t,n)},pa().prototype.reverse=function(e){return this.throwIfDisposed(),nl(this,e)},pa().prototype.rfft=function(){return this.throwIfDisposed(),Rl(this)},pa().prototype.round=function(){return this.throwIfDisposed(),mu(this)},pa().prototype.rsqrt=function(){return this.throwIfDisposed(),Hh(this)},pa().prototype.selu=function(){return this.throwIfDisposed(),rl(this)},pa().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),al(this,e,t,n,r,a,s)},pa().prototype.sigmoid=function(){return this.throwIfDisposed(),sl(this)};const Ad=Ba({sign_:function(e){const t={x:za(e,"x","sign")};return Ra.runKernel(Un,t)}});pa().prototype.sign=function(){return this.throwIfDisposed(),Ad(this)},pa().prototype.sin=function(){return this.throwIfDisposed(),Rh(this)},pa().prototype.sinh=function(){return this.throwIfDisposed(),_h(this)},pa().prototype.slice=function(e,t){return this.throwIfDisposed(),il(this,e,t)},pa().prototype.softmax=function(e){return this.throwIfDisposed(),hl(this,e)},pa().prototype.softplus=function(){return this.throwIfDisposed(),pl(this)},pa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),bh(this,e,t)},pa().prototype.split=function(e,t){return this.throwIfDisposed(),dl(this,e,t)},pa().prototype.sqrt=function(){return this.throwIfDisposed(),fl(this)},pa().prototype.square=function(){return this.throwIfDisposed(),Bo(this)},pa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),$u(this,e)},pa().prototype.squeeze=function(e){return this.throwIfDisposed(),ml(this,e)},pa().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ha?[this,e]:[this,...e];return gl(n,t)},pa().prototype.step=function(e){return this.throwIfDisposed(),Ol(this,e)};const _d=Ba({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,l=0){const u={x:za(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Ra.runKernel(rr,u,c)}});pa().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),_d(this,e,t,n,r,a,s,i,o)},pa().prototype.sub=function(e){return this.throwIfDisposed(),ko(this,e)},pa().prototype.sum=function(e,t){return this.throwIfDisposed(),No(this,e,t)};const Fd=Ba({tan_:function(e){const t={x:za(e,"x","tan","float32")};return Ra.runKernel(lr,t)}});pa().prototype.tan=function(){return this.throwIfDisposed(),Fd(this)},pa().prototype.tanh=function(){return this.throwIfDisposed(),yl(this)},pa().prototype.tile=function(e){return this.throwIfDisposed(),uo(this,e)},pa().prototype.toBool=function(){return this.throwIfDisposed(),Ts(this,"bool")},pa().prototype.toFloat=function(){return this.throwIfDisposed(),Ts(this,"float32")},pa().prototype.toInt=function(){return this.throwIfDisposed(),Ts(this,"int32")};const Dd=Ba({topk_:function(e,t=1,n=!0){const r=za(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,l]=Ra.runKernel(hr,s,i);return{values:o,indices:l}}});pa().prototype.topk=function(e,t){return this.throwIfDisposed(),Dd(this,e,t)},pa().prototype.transpose=function(e){return this.throwIfDisposed(),Sl(this,e)};const Od=Ba({unique_:function(e,t=0){const n=za(e,"x","unique","string_or_numeric");F(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=Ra.runKernel(fr,r,a);return{values:s,indices:i}}});pa().prototype.unique=function(e){return this.throwIfDisposed(),Od(this,e)},pa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),qh(this,e,t)},pa().prototype.unstack=function(e){return this.throwIfDisposed(),wl(this,e)},pa().prototype.where=function(e,t){return this.throwIfDisposed(),Nl(e,this,t)},pa().prototype.zerosLike=function(){return this.throwIfDisposed(),Il(this)};class Md extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Md.prototype)}}class Ld extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ld.prototype)}}class zd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zd.prototype)}}class Pd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pd.prototype)}}class Bd extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bd.prototype)}}Error;class Wd{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Ud(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Vd(e,t){if(!e)throw new Bd(t)}function Gd(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Hd(e){return 1===e.length?e[0]:e}function jd(e){return Array.isArray(e)?e:[e]}function qd(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Kd(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Xd={};function Yd(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Qd(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Qd(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Qd(t):e[n]=t.value)}}}function Zd(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Xd)s=Xd[a];else if(s=t[a],null==s)throw new zd(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new zd(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,l;if(i in n?[o,l]=n[i]:i in Xd?[o,l]=Xd.className:i in t&&([o,l]=t[i]),null==o)throw new zd(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Xd))e[t]=Xd[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Xd);for(const e of Object.keys(n))Xd[e]=n[e];Qd(s.config);const r=l(o,s.config,n,a);return Xd=Object.assign({},t),r}{const e=Object.assign({},Xd);for(const e of Object.keys(n))Xd[e]=n[e];const t=new o(s.config);return Xd=Object.assign({},e),t}}}function Jd(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ef(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function tf(e){if(null==e)throw new zd(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function nf(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new zd(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function rf(e,t,n=0,r=1/0){return Vd(n>=0),Vd(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function af(e,t){Array.isArray(e)?(F(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>af(e,`element ${n+1} of ${t}`)))):F(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${sf(e)}.`))}function sf(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>sf(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function of(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let lf=0;function uf(){return lf++}const cf={};function hf(e=""){return e in cf||(cf[e]=0),cf[e]+=1,e+cf[e].toString()}const pf=["channelsFirst","channelsLast"],df=["nearest","bilinear"],ff=["valid","same","causal"],mf=["max","avg"],gf=["sum","mul","concat","ave"],yf=new Map;function bf(e){nf(pf,"DataFormat",e)}function xf(e){nf(ff,"PaddingMode",e)}function vf(e){nf(mf,"PoolMode",e)}const wf=[];function kf(e,t){wf.push(e);try{const e=t();return wf.pop(),e}catch(e){throw wf.pop(),e}}function Nf(e){if(!Tf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===wf.length?"":wf.join("/")+"/")+e}function If(e){if(!Tf(e))throw new Error("Not a valid tensor name: '"+e+"'");yf.has(e)||yf.set(e,0);const t=yf.get(e);if(yf.set(e,yf.get(e)+1),t>0){const n=`${e}_${t}`;return yf.set(n,1),n}return e}const Sf=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Tf(e){return!!e.match(Sf)}function Cf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Ef(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function $f(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Rf(e,t){if(t<e)throw new zd(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Af;function _f(){return null==Af&&(Af=Ra.backend.epsilon()),Af}function Ff(e,t){return Ts(e,t)}function Df(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Mi(e,n)}function Of(e,t,n){return ci((()=>{switch(e.rank){case 1:return ol(e,t,n);case 2:return ll(e,[t,0],[n,e.shape[1]]);case 3:return ul(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return cl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return il(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return il(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new zd(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Mf(e,t,n){return ci((()=>{switch(e.rank){case 1:return ol(e,t,n);case 2:return ll(e,[0,t],[e.shape[0],n]);case 3:return ul(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return cl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new zd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Lf(e,t,n,r){return ci((()=>{switch(e.rank){case 1:return ol(e,t,n);case 2:switch(r){case 1:return Of(e,t,n);case 2:return Mf(e,t,n);default:throw new zd(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Of(e,t,n);case 2:return ul(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Mf(e,t,n);default:throw new zd(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Of(e,t,n);case 2:return cl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return cl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Mf(e,t,n);default:throw new zd(`The axis is not within the rank of the tensor ${r}`)}default:throw new zd(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function zf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Gi(e,t)}function Pf(e,t){switch(e.rank){case 1:return Hi([e,t]);case 2:return ji([e,t],0);case 3:return qi([e,t],0);case 4:return Ki([e,t],0);default:throw new zd(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Bf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new zd(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return uo(e,t)}function Wf(e,t=0,n=1,r,a){return Jo(e,t,n,r,a)}function Uf(e,t,n,r){if(e.rank<2||t.rank<2)throw new Pd(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Pd(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Gl({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Hf(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=Mi(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Mi(Sl(t,c),[l,-1]);const h=[...a,...u];return Mi(Gl({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Hf(e.rank,r,"channelsLast"):null,activation:n}),h)}}function Vf(e,t,n){return ci((()=>(t=Array.isArray(t)?bl(t,"int32"):Ts(t,"int32"),fo(e,t,n))))}function Gf(e){return wo(e,e)}function Hf(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new zd(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Mi(t,[1,r[0],1,1,1]):Mi(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Mi(t,[1,1,1,1,r[0]]):Mi(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Mi(t,[1,r[0],1,1]):Mi(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Mi(t,[1,1,1,r[0]]):Mi(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Mi(t,[1,r[0],1]):Mi(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Mi(t,[1,1,r[0]]):Mi(t,[1].concat(r))}else if(e<3)return t;throw new zd(`Unsupported input rank by biasAdd: ${t.rank}`)}function jf(e,t,n){return ci((()=>(null==n&&(n="channelsLast"),bf(n),bi(e,Hf(e.rank,t,n)))))}function qf(e,t,n,r){return ci((()=>Tl(e,t,n,r)))}function Kf(e,t,n=!1){return n?e():t()}const Xf=["fanIn","fanOut","fanAvg"],Yf=["normal","uniform","truncatedNormal"];class Qf extends si{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Zf extends Qf{apply(e,t){return Ho(e,t)}}Zf.className="Zeros",oi(Zf);class Jf extends Qf{apply(e,t){return jo(e,t)}}Jf.className="Ones",oi(Jf);class em extends Qf{constructor(e){if(super(),"object"!=typeof e)throw new zd(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new zd(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ci((()=>wo(mi(this.value),jo(e,t))))}getConfig(){return{value:this.value}}}em.className="Constant",oi(em);class tm extends Qf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return el(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}tm.className="RandomUniform",oi(tm);class nm extends Qf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pd(`randomNormal does not support dType ${t}.`);return Wf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}nm.className="RandomNormal",oi(nm);class rm extends Qf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pd(`truncatedNormal does not support dType ${t}.`);return vl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}rm.className="TruncatedNormal",oi(rm);class am extends Qf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return ci((()=>{if(2!==e.length||e[0]!==e[1])throw new zd("Identity matrix initializer can only be used for 2D square matrices.");return wo(this.gain,co(e[0]))}))}getConfig(){return{gain:this.gain}}}am.className="Identity",oi(am);class sm extends Qf{constructor(e){if(super(),e.scale<0)throw new zd(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,nf(Xf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){nf(Yf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(bf(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Cf(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Cf(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Cf(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Pd(`${this.getClassName()} does not support dType ${t}.`);return vl(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return el(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}sm.className="VarianceScaling",oi(sm);class im extends sm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return sm.className}}im.className="GlorotUniform",oi(im);class om extends sm{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return sm.className}}om.className="GlorotNormal",oi(om);class lm extends sm{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return sm.className}}lm.className="HeNormal",oi(lm);class um extends sm{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return sm.className}}um.className="HeUniform",oi(um);class cm extends sm{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return sm.className}}cm.className="LeCunNormal",oi(cm);class hm extends sm{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return sm.className}}hm.className="LeCunNormal",oi(hm);class pm extends Qf{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Pd("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return ci((()=>{if(e.length<2)throw new Pd("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Wf(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Pu.gramSchmidt(t);return e[0]>e[1]&&(n=Sl(n)),wo(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}pm.className="Orthogonal",oi(pm);const dm={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function fm(e,t={}){return Zd(e,ii.getMap().classNameMap,t,"initializer")}function mm(e){return Yd(e)}function gm(e){if("string"==typeof e){const t=e in dm?dm[e]:e;if("GlorotNormal"===t)return new om;if("GlorotUniform"===t)return new im;if("HeNormal"===t)return new lm;if("HeUniform"===t)return new um;if("LeCunNormal"===t)return new cm;if("LeCunUniform"===t)return new hm;{const e={};return e.className=t,e.config={},fm(e)}}return e instanceof Qf?e:fm(e)}function ym(e){return Array.isArray(e)&&Array.isArray(e[0])}function bm(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function xm(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new zd(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function vm(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new zd(`Expected exactly 1 Shape; got ${e.length}`)}return e}function wm(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class km{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=uf(),n=null==n?"Variable":n,this.originalName=Nf(n),this.name=If(this.originalName),this.trainable_=r,this.constraint=a,this.val=function(e,t=!0,n,r){return Ra.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Nm(e){return e.map((e=>e.read()))}function Im(e){e.forEach((e=>{e[0].write(e[1])}))}class Sm{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Tm{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=uf(),null!=s&&(this.originalName=Nf(s),this.name=If(this.originalName)),this.rank=t.length}}let Cm=0;class Em{constructor(e,t){this.callArgs=t,this.id=Cm++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let $m=0;class Rm extends si{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=$m++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=qd(e)+"_"+hf(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Ld(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new zd(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Hd(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Hd(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Md(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Md(`Layer ${this.name} is not connected, no input to return.`);return Hd(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Md(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Md(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Hd(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=jd(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=jd(this.inputSpec);if(e.length!==t.length)throw new zd(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new zd(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new zd(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new zd(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new zd(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new zd(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new zd(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=jd(e);let r=!0;for(const e of n)if(!(e instanceof Tm)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Tm){a=!1;break}if(r===a)throw new zd("Arguments to apply() must be all SymbolicTensors or all Tensors");return kf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of jd(e))t.push(n.shape);this.build(Hd(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=jd(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Hd(s),null!=this.activityRegularizer)throw new Pd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=jd(e);const t=[];for(const n of e)t.push(n.shape);return Hd(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Tm(s,n,this,jd(e),t,this.name,r))):new Tm(s,r,this,jd(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Pd("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Md(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Md(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ld(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return wm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Nm(e?this.trainableWeights:this.weights)}setWeights(e){ci((()=>{const t=this.weights;if(t.length!==e.length)throw new zd(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Nm(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!z(s.shape,o.shape))throw new zd(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Im(n)}))}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new zd(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():gm("zeros"));const l=r.apply(t,n),u=new km(l,n,e,s,i);return l.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=jd(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=jd(e);t=jd(t),n=jd(n),r=jd(r),a=bm(a),s=bm(s);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Em({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Am(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Am(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class _m extends Rm{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:hf("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new zd("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new zd("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new zd("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Tm(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Em({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new zd(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}_m.className="InputLayer",oi(_m);class Fm{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Fm)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new zd(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ts(t,e.dtype)}catch(n){throw new zd(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Tm){if(null==this.id2Value[e.id])throw new zd(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new zd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Tm){if(null==this.id2Value[e.id])throw new zd(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new zd(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&hi(this.id2Mask)}}const Dm=new Wd,Om=new Wd;function Mm(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,p=Dm.get(c);if(null==p){const e=function(e,t){F(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=zm(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=zm(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Lm(r)}}(i,t);p=e.sorted,h=e.recipientCounts,Dm.put(c,p),Om.put(c,h)}h={},a||Object.assign(h,Om.get(c));const d=new Fm(t);for(let e=0;e<p.length;++e){if(null!=r){const e=ui().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=p[e],i=s.sourceLayer;if(i instanceof _m)continue;const u=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=d.getValue(e),r=d.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=jd(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=Pm(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}a||hi(f)}return d.disposeMasks(),s?l:l[0]}function Lm(e){const t={};for(const n in e)t[n]=e[n].size;return t}function zm(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Pm(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Bm(e,t){return ci((()=>fl(No(wo(e,e),t,!0))))}fe().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Dm&&Dm.setMaxEntries(e),null!=Om&&Om.setMaxEntries(e)}));class Wm extends si{getConfig(){return{}}}class Um extends Wm{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ci((()=>{const t=Bm(e,this.axis),n=Vi(t,0,this.maxValue);return wo(e,ao(n,bi(_f(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Um.className="MaxNorm",oi(Um);class Vm extends Wm{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ci((()=>ao(e,bi(_f(),Bm(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Vm.className="UnitNorm",oi(Vm);class Gm extends Wm{apply(e){return tl(e)}}Gm.className="NonNeg",oi(Gm);class Hm extends Wm{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return ci((()=>{const t=Bm(e,this.axis),n=bi(wo(this.rate,Vi(t,this.minValue,this.maxValue)),wo(1-this.rate,t));return wo(e,ao(n,bi(_f(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Hm.className="MinMaxNorm",oi(Hm);const jm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function qm(e){return Yd(e)}function Km(e,t={}){return Zd(e,ii.getMap().classNameMap,t,"constraint")}function Xm(e){return null==e?null:"string"==typeof e?Km({className:e in jm?jm[e]:e,config:{}}):e instanceof Wm?e:Km(e)}async function Ym(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];hi(r)}}function Qm(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Zm;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Zm||(Zm={}));class Jm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class eg{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class tg extends Jm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=ci((()=>bi(this.totals[e],wo(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:ci((()=>{const n=wo(ao(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),pi(t[e])})))}}class ng extends Jm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class rg extends Jm{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Zu,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Z(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():Yr();return(...s)=>{const i=null!=n?n():Yr();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Ym(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ym(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ym(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ym(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ym(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Z(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ym(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ym(e),await this.trainEnd(e))}}function ag(e,t){return null==e&&(e={}),e instanceof Jm?[e]:Array.isArray(e)&&e[0]instanceof Jm?e:jd(e).map((e=>new rg(e,t)))}class sg{constructor(){}static registerCallbackConstructor(e,t){F(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),sg.checkForDuplicate(t),null==sg.constructors[e]&&(sg.constructors[e]=[]),sg.constructors[e].push(t)}static checkForDuplicate(e){for(const t in sg.constructors)sg.constructors[+t].forEach((t=>{if(t===e)throw new zd("Duplicate callback constructor.")}))}static clear(){sg.constructors={}}static createCallbacks(e){const t=[];for(const n in sg.constructors){const r=+n;e>=r&&t.push(...sg.constructors[r])}return t.map((e=>new e))}}function ig(e,t,n,r,a,s,i,o,l){const u=new ng,c=[new tg,...sg.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new eg(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function og(e,t={},n=!1){return Zd(e,ii.getMap().classNameMap,t,"layer",n)}function lg(e,t){return ci((()=>{"float32"!==e.dtype&&(e=Ts(e,"float32"));const n=No(Gf(e),t,!0),r=ho(n.shape,_f()),a=fl($o(n,r));return ao(e,a)}))}function ug(e,t){return ci((()=>Ro(Gf(ko(t,e)),-1)))}function cg(e,t){return ci((()=>Ro(yi(ko(t,e)),-1)))}function hg(e,t){return ci((()=>{const n=ko(e,t),r=Vi(yi(e),_f(),Number.MAX_VALUE),a=yi(ao(n,r));return wo(100,Ro(a,-1))}))}function pg(e,t,n=!1){return ci((()=>{if(n)t=hl(t);else{const e=No(t,t.shape.length-1,!0);t=ao(t,e)}return t=Vi(t,_f(),1-_f()),Uo(No(wo(Ts(e,"float32"),bo(t)),t.shape.length-1))}))}function dg(e,t,n=!1){return ci((()=>{const r=Ts(po(function(e){const t=[Cf(e.shape)];return Mi(e,t)}(e)),"int32"),a=(t=Vi(t,_f(),1-_f())).shape;return pg(Mi(Go(r,a[a.length-1]),a),t,n)}))}function fg(e,t){return ci((()=>{let n;return n=Vi(t,_f(),1-_f()),n=bo(ao(n,ko(1,n))),Ro(function(e,t){if(!z(e.shape,t.shape))throw new zd(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return ci((()=>{const n=tl(t),r=Uo(yi(t));return bi(ko(n,wo(t,e)),xo(oo(r)))}))}(e,n),-1)}))}function mg(e,t){return ci((()=>{const n=lg(e,-1),r=lg(t,-1),a=wo(n,r);return Uo(No(a,-1))}))}sg.constructors={};const gg={meanSquaredError:ug,meanAbsoluteError:cg,meanAbsolutePercentageError:hg,meanSquaredLogarithmicError:function(e,t){return ci((()=>{const n=Vi(t,_f(),Number.MAX_VALUE),r=bo(bi(1,n)),a=Vi(e,_f(),Number.MAX_VALUE),s=bo(bi(1,a));return Ro(Gf(ko(r,s)),-1)}))},squaredHinge:function(e,t){return ci((()=>{const n=$o(0,ko(1,wo(e,t)));return Ro(Gf(n),-1)}))},hinge:function(e,t){return ci((()=>{const n=$o(0,ko(1,wo(e,t)));return Ro(n,-1)}))},categoricalHinge:function(e,t){return ci((()=>{const n=No(wo(e,t),-1),r=vo(wo(ko(1,e),t),-1);return $o(0,bi(1,ko(r,n)))}))},logcosh:function(e,t){return ci((()=>{const n=Math.log(2),r=ko(t,e),a=ko(bi(r,pl(wo(-2,r))),n);return Ro(a,-1)}))},categoricalCrossentropy:pg,sparseCategoricalCrossentropy:dg,binaryCrossentropy:fg,kullbackLeiblerDivergence:function(e,t){return ci((()=>{const n=Vi(e,_f(),1),r=Vi(t,_f(),1);return No(wo(e,bo(ao(n,r))),-1)}))},poisson:function(e,t){return ci((()=>{const n=bo(bi(_f(),t));return Ro(ko(t,wo(e,n)),-1)}))},cosineProximity:mg};function yg(e){if("string"==typeof e){if(e in gg)return gg[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new zd(t)}return e}function bg(e,t){return ci((()=>{const n=wo(.5,qo(t)),r=Ff(mo(t,n),e.dtype);return Ro(io(e,r),-1)}))}function xg(e,t){return ci((()=>Ff(io(wi(e,-1),wi(t,-1)),"float32")))}function vg(e,t){return fg(e,t)}function wg(e,t){return e.rank===t.rank&&(e=ml(e,[e.rank-1])),(t=wi(t,-1)).dtype!==e.dtype&&(t=Ts(t,e.dtype)),Ts(io(e,t),"float32")}const kg=pg,Ng=dg,Ig={binaryAccuracy:bg,categoricalAccuracy:xg,precision:function(e,t){return ci((()=>{const n=function(e,t){return ci((()=>Ts(No(So(io(e,1),io(t,1))),"float32")))}(e,t),r=function(e,t){return ci((()=>Ts(No(So(io(e,0),io(t,1))),"float32")))}(e,t),a=bi(n,r);return Ts(Nl(mo(a,0),ao(n,a),0),"float32")}))},categoricalCrossentropy:kg,sparseCategoricalCrossentropy:Ng,mse:ug,MSE:ug,mae:cg,MAE:cg,mape:hg,MAPE:hg,cosine:mg};function Sg(e){if("string"==typeof e&&e in Ig)return Ig[e];if("string"!=typeof e&&null!=e)return e;throw new zd(`Unknown metric ${e}`)}function Tg(e){if(Vd(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(gg))if(gg[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Ig))if(Ig[n]===e){t=n;break}return void 0!==t?t:e.name}}function Cg(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Eg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Eg(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Eg(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Eg(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function $g(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Rg(e,t,n){let r,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}$g([`${e.name} (${e.getClassName()})`,a,r,e.countParams().toString()],t,n)}function Ag(e,t,n,r){let a,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${n}[${r}][${a}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];$g([`${o} (${l})`,s,a,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)$g(["","","","",i[e]],t,r)}function _g(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Fg(e,t){if(null===e)return null;if("string"==typeof e)return Kd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];_g(t,a,r)?n.push(r):n.push(Fg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Kd(n);t[e]=Fg(r,e)}}return t}}function Dg(e,t){if(null==e)return null;if("string"==typeof e)return qd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];_g(t,a,r)?n.push(r):n.push(Dg(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[qd(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Dg(r,n):r}return t}}class Og extends Rm{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=hf(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ef(this.inputs).length!==this.inputs.length)throw new zd(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);ef(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Vd(0===n,"input layer has >1 nodes"),Vd(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof _m))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,l)=>{null!=r&&null!=a&&null!=l||(r=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[a];if(-1!==n.indexOf(u))throw new Ld(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Og.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(Jd);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Og&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(Jd);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Ld(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Ld(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Em({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new zd("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new zd(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new zd(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new zd(`${e.length} of ${r} weights are not set: ${e}`)}Im(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.17.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Dg(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return ci((()=>{e=jd(e);const n=new Fm;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Mm(this.outputs,n,t)}))}computeMask(e,t){return ci((()=>{let n;return e=jd(e),n=null==t?Ud(null,e.length):jd(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=bm(e);if(t.length!==this.inputLayers.length)throw new zd(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Jd);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=bm(t.computeOutputShape(Hd(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];Vd(t in n),a.push(n[t])}return Hd(a)}runInternalGraph(e,t){null==t&&(t=Ud(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Jd);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){const[e,n]=s[0];null==u.mask&&(u.mask=n),o=jd(t.call(e,u)),l=jd(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=jd(t.call(r,u)),l=jd(t.computeMask(r,i));if(t.activityRegularizer)throw new Pd("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=l[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){Vd(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Og?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Og.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new zd(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new zd("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new zd(`No such layer: ${e}`)}calculateLosses(){return ci((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Og.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Og.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[Og.nodeKey(a,s)];null==l&&(l=0),e.push([a.name,l,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Og.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Og.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],l=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Hd(n),r)}function l(e){const n=e.name,s=og(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new zd(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!tf(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];Vd(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Vd(t in a);const s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new zd("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ci((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Mg(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Lg(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=ci((()=>{if(1===e.shape.length)return Cs(e);if(2===e.shape.length){if(e.shape[1]>1)return wi(e,1);if(1===e.shape[1])return Mi(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());hi(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),bl(a,"float32")}return null}function zg(e,t){return wo(e,t)}function Pg(e,t){let n,r;const a=t;n=a.xs,r=a.ys,F(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Bg("input",e.inputNames,n),i=Bg("output",e.outputNames,r),o=s[0].shape[0];F(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),F(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)F(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)F(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Bg(e,t,n){if(n instanceof ha)return[n];if(Array.isArray(n))return F(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new zd(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function Wg(e){return"function"==typeof e.iterator}function Ug(e){F(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Vg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Of(e,t,n-t))):Of(e,t,n-t)}function Gg(e,t){return ci((()=>null==e?null:Array.isArray(e)?e.map((e=>Gg(e,t))):Vf(e,"int32"===t.dtype?t:Ts(t,"int32"))))}function Hg(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function jg(e){const t=[];e instanceof ha&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Df(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function qg(e,t){if(null==e)return;const n=[];if(t instanceof ha)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof ha)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Kg(e){return Array.isArray(e)}function Xg(e){return!function(e){return e instanceof ha}(e)&&!Kg(e)}function Yg(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Kg(e)&&e.length>0)t=!0;else if(Xg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new zd(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Xg(e)){s=[];for(const n of t){if(null==e[n])throw new zd(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Kg(e)){if(e.length!==t.length)throw new zd(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new zd(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=jg(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new zd(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new zd(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Qg(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new zd(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new zd(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new zd(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new zd(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Zg extends Og{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new zd("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),$g(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?Rg(o[e],n,r):Ag(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?wm(e.collectedTrainableWeights):wm(e.trainableWeights),t}(e),u=wm(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Yu.adagrad(.01),Adadelta:()=>Yu.adadelta(1,.95,_f()),Adam:()=>Yu.adam(.001,.9,.999,_f()),Adamax:()=>Yu.adamax(.002,.9,.999,_f(),0),RMSProp:()=>Yu.rmsprop(.001,.9,0,_f()),SGD:()=>Yu.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new zd(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof gi))throw new zd("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new zd(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>yg(e)))}else{const n=yg(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new zd(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(yg(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],kf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};kf("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===fg?-1!==["accuracy","acc"].indexOf(i)?r=bg:-1!==["crossentropy","ce"].indexOf(i)&&(r=vg):this.lossFunctions[e]===dg?-1!==["accuracy","acc"].indexOf(i)?r=wg:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ng):-1!==["accuracy","acc"].indexOf(i)?r=xg:-1!==["crossentropy","ce"].indexOf(i)&&(r=kg),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=Sg(i);s=e,n=""+Tg(i)}let t;kf(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Ug(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return Hd(this.testLoop(i,s,r,n.verbose,n.steps))}finally{qg(a[0],e),qg(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new Pd("Verbose mode is not implemented yet.");F(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(s=ci((()=>{if(t.value){const{xs:n,ys:r}=Pg(e,t.value),i=n.concat(r),u=ci((()=>a(i)));if(hi(i),0===l)for(let e=0;e<u.length;++e)s.push(mi(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=s[e];s[e]=ci((()=>bi(s[e],wo(c,t)))),l>0&&hi(n)}hi(u),o+=c,++l}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=ao(s[e],o),hi(t)}return Hd(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new zd(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new zd(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new zd("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Fm;if(e instanceof ha&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new zd(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new zd(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Mm(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Ud(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new zd(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return ci((()=>{const r=this.checkNumSamples(e);if(n)throw new Pd("Verbose predictLoop() is not implemented yet.");const a=Hg(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)ci((()=>{const n=a[t][0],r=a[t][1],s=Vg(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Fm(i);return Mm(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Hd(s.map((e=>Gi(e,0))))}))}predict(e,t={}){const n=jg(e);Qg(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Ug(r),this.predictLoop(n,r)}finally{qg(n,e)}}predictOnBatch(e){Qg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Ld("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===dg?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=ef(e.map((e=>e.shape[0])));r.sort();const a=ef(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new zd(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new zd(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!z(r,a))throw new zd(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Yg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Yg(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[ug,fg,pg];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===pg&&1===s.shape[s.shape.length-1])throw new zd(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new zd(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new zd(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Mg(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Lg(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,a){return ci((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Pd("Verbose mode is not implemented yet.");if(null!=a)throw new Pd("steps mode in testLoop() is not implemented yet");{const r=Hg(s,n),a=bl(Rf(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],l=Of(a,s,o-s),u=Gg(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(mi(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=bi(i[e],wo(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=ao(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Gd(e,r)>1&&(a+=`_${Gd(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Fm(e),o=Mm(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=zg(n,a[e]));const s=Ro(n);t.push(s),l=0===e?n:bi(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Ro(t(r[a],o[a]))}pi(n),s.push(n)}return l=Ro(l),this.calculateLosses().forEach((e=>{l=bi(l,e)})),l}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>ci((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Fm(s),o=Mm(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Ro(r(a[e],o[e]));n=0===e?s:bi(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Ro(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,l,u,c,h,p;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;Ug(d);const f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,d);a=m[0],s=m[1],p=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Pd("validationData including sample weights is not supported yet."):new zd(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];const t=!0,n=await e.standardizeUserData(l,u,null,null,t,d);c=n[0],h=n[1],g=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];c=Vg(a,e,t),i=a,a=Vg(a,0,e),h=Vg(s,e,t),o=s,s=Vg(s,0,e),g=c.concat(h)}else null!=r.validationSteps&&(y=!0);const b=a.concat(s).concat(p);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let w,k;y?(e.makeTestFunction(),w=e.testFunction,k=v.slice().concat(v.map((e=>"val_"+e)))):(w=null,g=[],k=v.slice());const N=ag(r.callbacks,r.yieldEvery),I=await async function(e,t,n,r,a,s,i,o,l,u,c,h,p,d,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,a,d,"steps_per_epoch");let y;null!=g&&(y=Rf(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=ig(o,i,s,p,g,d,a,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<s;++i){await b.onEpochBegin(i);const s={};{if("batch"===c)throw new Pd("batch shuffling is not implemneted yet");c&&$(y);const i=bl(y),o=Hg(g,a);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),ci((()=>{const p=o[c][0],d=o[c][1],f=Of(i,p,d-p);h.batch=c,h.size=d-p;const g=Gg(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,pi(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];pi(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,h),Qm(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,b,v,d,r.epochs,r.verbose,N,w,g,r.shuffle,k,r.initialEpoch,null);return I}finally{e.isTraining=!1,qg(a,t),qg(s,n),qg(i,t),qg(o,n),qg(c,l),qg(h,u),null!=p&&hi(p)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(F(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),F(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),F(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),F(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),F(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(Wg(n.validationData))F(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Pd("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=a?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=ag(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=ig(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,u);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Pg(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=Mg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Lg(a[e],null,t[e]))}const u=r.concat(a).concat(i),d=o(u);hi(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];s[t]=n,pi(n)}await p.onBatchEnd(h,s),Qm(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=Wg(n.validationData)?jd(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):jd(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return hi(s),qg(n[0],e),qg(n[1],t),Hd(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ui().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ui().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=qd(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>qd(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=qd(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[qd(Tg(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>qd(Tg(e))));{const e={};for(const t in this.metrics)e[t]=qd(Tg(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=og(Fg(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Kd(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Kd(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Kd(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Kd(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Kd(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=es(e);if(0===t.length)throw new zd(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new zd(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new zd("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ha(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.17.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Ha(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Xa([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Cg(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Cg(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Zg.className="Model",oi(Zg);class Jg extends Zg{}Jg.className="Functional",oi(Jg);class ey extends Zg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:hf("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new zd(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof ey||e instanceof Zg;let n;if(t){if(n=e,1!==n.outputs.length)throw new zd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new zd("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new zd("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new zd("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new _m({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new zd(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new zd("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Am(this.outputs[0])}this.inboundNodes=[],new Em({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ud(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(vm(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Ld("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ld("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Ld("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ld("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new zd("Legacy serialization format not supported yet.");a=t}else F(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof ey))throw new Pd(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=og(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new zd("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new zd("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}ey.className="Sequential",oi(ey);class ty extends si{getConfig(){return{}}}class ny extends ty{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Pd(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return so(e)}(e,t)}}ny.className="elu",oi(ny);class ry extends ty{apply(e){return rl(e)}}ry.className="selu",oi(ry);class ay extends ty{apply(e){return tl(e)}}ay.className="relu",oi(ay);class sy extends ty{apply(e){return ci((()=>Ao(6,tl(e))))}}sy.className="relu6",oi(sy);class iy extends ty{apply(e){return e}}iy.className="linear",oi(iy);class oy extends ty{apply(e){return sl(e)}}oy.className="sigmoid",oi(oy);class ly extends ty{apply(e){return function(e){return ci((()=>{const t=bi(.5,wo(.2,e));return Vi(t,0,1)}))}(e)}}ly.className="hardSigmoid",oi(ly);class uy extends ty{apply(e){return pl(e)}}uy.className="softplus",oi(uy);class cy extends ty{apply(e){return function(e){return ci((()=>ao(e,bi(yi(e),1))))}(e)}}cy.className="softsign",oi(cy);class hy extends ty{apply(e){return yl(e)}}hy.className="tanh",oi(hy);class py extends ty{apply(e,t=-1){return hl(e,t)}}py.className="softmax",oi(py);class dy extends ty{apply(e,t=-1){return Io(e,t)}}dy.className="logSoftmax",oi(dy);class fy extends ty{apply(e,t=1){return ci((()=>wo(sl(wo(e,t)),e)))}}fy.className="swish",oi(fy);class my extends ty{apply(e){return ci((()=>wo(e,yl(pl(e)))))}}function gy(e){return e.getClassName()}function yy(e,t={}){return Zd(e,ii.getMap().classNameMap,t,"activation")}function by(e){if(null==e){return yy({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},yy(t)}return e instanceof ty?e:yy(e)}my.className="mish",oi(my);class xy extends si{}class vy extends xy{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return ci((()=>{let t=Ho([1]);return this.hasL1&&(t=bi(t,No(wo(this.l1,yi(e))))),this.hasL2&&(t=bi(t,No(wo(this.l2,Gf(e))))),Mi(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}vy.className="L1L2",oi(vy);const wy={l1l2:"L1L2"};function ky(e){return Yd(e)}function Ny(e,t={}){return Zd(e,ii.getMap().classNameMap,t,"regularizer")}function Iy(e){return null==e?null:"string"==typeof e?Ny({className:e in wy?wy[e]:e,config:{}}):e instanceof xy?e:Ny(e)}class Sy extends Rm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=xm(e);let n=tl(e);return null!=this.maxValue&&(n=Vi(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Sy.className="ReLU",oi(Sy);class Ty extends Rm{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=xm(e);return yo(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ty.className="LeakyReLU",oi(Ty);class Cy extends Rm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=gm(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Iy(e.alphaRegularizer),this.alphaConstraint=Xm(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new zd(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=vm(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Sm({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=xm(e),Xo(e,this.alpha.read())}getConfig(){const e={alphaInitializer:mm(this.alphaInitializer),alphaRegularizer:ky(this.alphaRegularizer),alphaConstraint:qm(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Cy.className="PReLU",oi(Cy);class Ey extends Rm{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Pd(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=xm(e);return so(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ey.className="ELU",oi(Ey);class $y extends Rm{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=xm(e);return wo(n,Ts(mo(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}$y.className="ThresholdedReLU",oi($y);class Ry extends Rm{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new py).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=xm(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ay(e,t,n){if("number"==typeof e)return Ud(e,t);if(e.length!==t)throw new zd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new zd(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function _y(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Fy(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+$f([n-t,0]);else{if("same"!==r)throw new zd(`Unsupport padding mode: ${r}.`);e*=t}return e}function Dy(e,t){return ci((()=>(bf(t),"channelsFirst"===t?Sl(e,[0,2,3,1]):e)))}function Oy(e,t){return ci((()=>(bf(t),"channelsFirst"===t?Sl(e,[0,2,3,4,1]):e)))}function My(e,t,n,r=[1,1],a="valid",s,i,o=null){return ci((()=>{if(null==s&&(s="channelsLast"),bf(s),3!==e.rank&&4!==e.rank)throw new zd(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new zd(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Dy(e,s);if("causal"===a)throw new Pd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Bl({x:l,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Sl(l,[0,3,1,2])),l}))}Ry.className="Softmax",oi(Ry);class Ly extends Rm{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ly.verifyArgs(t),this.rank=e,af(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Pd(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Ay(t.kernelSize,e,"kernelSize"),this.strides=Ay(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,xf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,bf(this.dataFormat),this.activation=by(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=gm(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Xm(t.biasConstraint),this.biasRegularizer=Iy(t.biasRegularizer),this.activityRegularizer=Iy(t.activityRegularizer),this.dilationRate=Ay(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new zd(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new zd(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new zd(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Vd("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!rf(e.kernelSize,"number",1,3))throw new zd(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:gy(this.activation),useBias:this.useBias,biasInitializer:mm(this.biasInitializer),biasRegularizer:ky(this.biasRegularizer),activityRegularizer:ky(this.activityRegularizer),biasConstraint:qm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class zy extends Ly{constructor(e,t){super(e,t),this.kernel=null,zy.verifyArgs(t),this.filters=t.filters,af(this.filters,"filters"),this.kernelInitializer=gm(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Xm(t.kernelConstraint),this.kernelRegularizer=Iy(t.kernelRegularizer)}build(e){e=vm(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zd(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return ci((()=>{let t;e=xm(e);const n=null==this.bias?null:this.bias.read(),r=of(this.activation.getClassName());if(null!=r&&2===this.rank)t=My(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return ci((()=>{if(null==s&&(s="channelsLast"),bf(s),3!==e.shape.length)throw new zd(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new zd(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new zd(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Sl(e,[0,2,1])),"causal"===a)throw new Pd("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Yi(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=jf(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=My(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Pd("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return ci((()=>{if(null==s&&(s="channelsLast"),bf(s),4!==e.rank&&5!==e.rank)throw new zd(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new zd(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Oy(e,s);if("causal"===a)throw new Pd("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ji(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=jf(o,n)),"channelsFirst"===s&&(o=Sl(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=vm(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=_y(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:mm(this.kernelInitializer),kernelRegularizer:ky(this.kernelRegularizer),kernelConstraint:qm(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new zd(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Py extends zy{constructor(e){super(2,e),Py.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!rf(e.kernelSize,"number",1,2))throw new zd(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Py.className="Conv2D",oi(Py);class By extends zy{constructor(e){super(3,e),By.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new zd(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}By.className="Conv3D",oi(By);class Wy extends Py{constructor(e){if(super(e),this.inputSpec=[new Sm({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new zd(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=vm(e)).length)throw new zd("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Sm({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return ci((()=>{let t=xm(e);if(4!==t.shape.length)throw new zd(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,Fy(i,c,l,this.padding),Fy(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Sl(t,[0,2,3,1]));let d=Zi(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Sl(d,[0,3,1,2])),null!=this.bias&&(d=jf(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=vm(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=Fy(t[r],o,s,this.padding),t[a]=Fy(t[a],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Wy.className="Conv2DTranspose",oi(Wy);class Uy extends By{constructor(e){if(super(e),this.inputSpec=[new Sm({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new zd(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=vm(e)).length)throw new zd("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zd("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Sm({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return ci((()=>{let t=xm(e);if(5!==t.shape.length)throw new zd(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],l=n[a],u=n[s],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Fy(o,d,c,this.padding),Fy(l,f,h,this.padding),Fy(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Sl(t,[0,2,3,4,1]));let y=to(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Sl(y,[0,4,1,2,3])),null!==this.bias&&(y=jf(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=vm(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Fy(t[r],u,i,this.padding),t[a]=Fy(t[a],c,o,this.padding),t[s]=Fy(t[s],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Uy.className="Conv3DTranspose",oi(Uy);class Vy extends zy{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new zd("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new zd("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new zd(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=gm(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Iy(t.depthwiseRegularizer),this.depthwiseConstraint=Xm(t.depthwiseConstraint),this.pointwiseInitializer=gm(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Iy(t.pointwiseRegularizer),this.pointwiseConstraint=Xm(t.pointwiseConstraint)}build(e){if((e=vm(e)).length<this.rank+2)throw new zd(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new zd(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Sm({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return ci((()=>{let t;if(e=xm(e),1===this.rank)throw new Pd("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Sl(e,[0,2,3,1])),t=al(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=jf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Sl(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=mm(this.depthwiseInitializer),e.pointwiseInitializer=mm(this.pointwiseInitializer),e.depthwiseRegularizer=ky(this.depthwiseRegularizer),e.pointwiseRegularizer=ky(this.pointwiseRegularizer),e.depthwiseConstraint=qm(this.depthwiseConstraint),e.pointwiseConstraint=qm(this.pointwiseConstraint),e}}Vy.className="SeparableConv";class Gy extends Vy{constructor(e){super(2,e)}}Gy.className="SeparableConv2D",oi(Gy);class Hy extends zy{constructor(e){super(1,e),Hy.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!rf(e.kernelSize,"number",1,1))throw new zd(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Hy.className="Conv1D",oi(Hy);class jy extends Rm{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ci((()=>{if(e=xm(e),"channelsLast"===this.dataFormat){const t=Lf(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Lf(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Lf(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Lf(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}jy.className="Cropping2D",oi(jy);class qy extends Rm{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,bf(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,nf(df,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return ci((()=>{let t=xm(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Sl(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?zu.resizeNearestNeighbor(t,[e,r]):zu.resizeBilinear(t,[e,r]);return Sl(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?zu.resizeNearestNeighbor(t,[e,r]):zu.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}qy.className="UpSampling2D",oi(qy);class Ky extends Ly{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=gm(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Xm(e.depthwiseConstraint),this.depthwiseRegularizer=Iy(e.depthwiseRegularizer)}build(e){if((e=vm(e)).length<4)throw new zd(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new zd(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ci((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return ci((()=>{null==a&&(a="channelsLast"),bf(a);let i=Dy(e,a);if(4!==e.rank)throw new zd(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new zd(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=no(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Sl(i,[0,3,1,2])),i}))}(e=xm(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=jf(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=vm(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=_y(t,this.kernelSize[0],this.padding,this.strides[0]),s=_y(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=mm(this.depthwiseInitializer),e.depthwiseRegularizer=ky(this.depthwiseRegularizer),e.depthwiseConstraint=qm(this.depthwiseRegularizer),e}}function Xy(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new zd("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Yy(e,t,n,r=!1,a,s,i=!1,o=!1){return ci((()=>{const l=t.shape.length;if(l<3)throw new zd(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Rf(2,l));if(t=Sl(t,u),null!=s)throw new Pd("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=Ts(Ts(a,"bool"),"float32")).rank===l-1&&(a=lo(a,-1)),a=Sl(a,u)),r&&(t=nl(t,0),null!=a&&(a=nl(a,0)));const c=[];let h,p=n;const d=t.shape[0],f=wl(t);let m,g;null!=a&&(m=wl(a));for(let t=0;t<d;++t){const n=f[t],r=ci((()=>e(n,p)));if(null==a)h=r[0],p=r[1];else{const e=ci((()=>{const e=m[t],n=ko(qo(e),e);return{output:bi(wo(r[0],e),wo(p[0],n)),newStates:p.map(((t,a)=>bi(wo(r[1][a],e),wo(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=gl(c,1)),[h,g,p]}))}Ky.className="DepthwiseConv2D",oi(Ky);class Qy extends Rm{constructor(e){let t;if(super(e),null==e.cell)throw new zd("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new sb({cells:e.cell}):e.cell,null==t.stateSize)throw new zd("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Sm({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Rf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){ym(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return ci((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Pd("Constants support is not implemented in RNN yet.");ym(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Sm({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!z(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new zd(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Sm({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){ci((()=>{if(!this.stateful)throw new Md("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new zd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ho([n,e]))):this.states_=[Ho([n,this.cell.stateSize])];else if(null==e)hi(this.states_),null!=this.keptStates&&(hi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ho([n,e]))):this.states_[0]=Ho([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new zd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):hi(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!z(r.shape,s))throw new zd(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>pi(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Xy(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Sm({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Tm){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return ci((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=xm(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new zd(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Yy(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return ci((()=>{let t=Ho(e.shape);return t=No(t,[1,2]),t=Df(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Bf(t,[1,e]):t)):this.cell.stateSize>1?[Bf(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Qy.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=og(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Qy.className="RNN",oi(Qy);class Zy extends Rm{}class Jy extends Zy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,af(this.units,"units"),this.activation=by(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=gm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Iy(e.kernelRegularizer),this.recurrentRegularizer=Iy(e.recurrentRegularizer),this.biasRegularizer=Iy(e.biasRegularizer),this.kernelConstraint=Xm(e.kernelConstraint),this.recurrentConstraint=Xm(e.recurrentConstraint),this.biasConstraint=Xm(e.biasConstraint),this.dropout=Ef([1,$f([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ef([1,$f([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=vm(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ci((()=>{if(2!==e.length)throw new zd(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ib({ones:()=>qo(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ib({ones:()=>qo(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Uf(null!=s?wo(e,s):e,this.kernel.read()),null!=this.bias&&(a=jf(a,this.bias.read())),null!=i&&(n=wo(n,i));let o=bi(a,Uf(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:gy(this.activation),useBias:this.useBias,kernelInitializer:mm(this.kernelInitializer),recurrentInitializer:mm(this.recurrentInitializer),biasInitializer:mm(this.biasInitializer),kernelRegularizer:ky(this.kernelRegularizer),recurrentRegularizer:ky(this.recurrentRegularizer),biasRegularizer:ky(this.biasRegularizer),activityRegularizer:ky(this.activityRegularizer),kernelConstraint:qm(this.kernelConstraint),recurrentConstraint:qm(this.recurrentConstraint),biasConstraint:qm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Jy.className="SimpleRNNCell",oi(Jy);class eb extends Qy{constructor(e){e.cell=new Jy(e),super(e)}call(e,t){return ci((()=>{null!=this.cell.dropoutMask&&(hi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}eb.className="SimpleRNN",oi(eb);class tb extends Zy{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new zd("GRUCell does not support reset_after parameter set to true.");this.units=e.units,af(this.units,"units"),this.activation=by(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=by(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=gm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Iy(e.kernelRegularizer),this.recurrentRegularizer=Iy(e.recurrentRegularizer),this.biasRegularizer=Iy(e.biasRegularizer),this.kernelConstraint=Xm(e.kernelConstraint),this.recurrentConstraint=Xm(e.recurrentConstraint),this.biasConstraint=Xm(e.biasConstraint),this.dropout=Ef([1,$f([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ef([1,$f([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=vm(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ci((()=>{if(2!==e.length)throw new zd(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ib({ones:()=>qo(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ib({ones:()=>qo(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=wo(e,a[0]));let u=Uf(e,this.kernel.read());this.useBias&&(u=jf(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=wo(r,s[0]));const c=this.recurrentKernel.read(),[h,p]=dl(c,[2*this.units,this.units],c.rank-1),d=Uf(r,h),[f,m,g]=dl(u,3,u.rank-1),[y,b]=dl(d,2,d.rank-1);i=this.recurrentActivation.apply(bi(f,y)),o=this.recurrentActivation.apply(bi(m,b));const x=Uf(wo(o,r),p);l=this.activation.apply(bi(g,x));const v=bi(wo(i,r),wo(bi(1,Uo(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:gy(this.activation),recurrentActivation:gy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:mm(this.kernelInitializer),recurrentInitializer:mm(this.recurrentInitializer),biasInitializer:mm(this.biasInitializer),kernelRegularizer:ky(this.kernelRegularizer),recurrentRegularizer:ky(this.recurrentRegularizer),biasRegularizer:ky(this.biasRegularizer),activityRegularizer:ky(this.activityRegularizer),kernelConstraint:qm(this.kernelConstraint),recurrentConstraint:qm(this.recurrentConstraint),biasConstraint:qm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}tb.className="GRUCell",oi(tb);class nb extends Qy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new tb(e),super(e)}call(e,t){return ci((()=>{null!=this.cell.dropoutMask&&(hi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}nb.className="GRU",oi(nb);class rb extends Zy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,af(this.units,"units"),this.activation=by(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=by(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=gm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gm(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Iy(e.kernelRegularizer),this.recurrentRegularizer=Iy(e.recurrentRegularizer),this.biasRegularizer=Iy(e.biasRegularizer),this.kernelConstraint=Xm(e.kernelConstraint),this.recurrentConstraint=Xm(e.recurrentConstraint),this.biasConstraint=Xm(e.biasConstraint),this.dropout=Ef([1,$f([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ef([1,$f([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=vm(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Qf{apply(t,r){const a=e.apply([n]),s=(new Jf).apply([n]),i=e.apply([2*n]);return Pf(Pf(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ci((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new zd(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ib({ones:()=>qo(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ib({ones:()=>qo(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=wo(e,s[0]));let h=Uf(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=wo(r,i[0])),h=bi(h,Uf(r,this.recurrentKernel.read())),this.useBias&&(h=jf(h,this.bias.read()));const[p,d,f,m]=dl(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=bi(wo(l,a),wo(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=wo(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:gy(this.activation),recurrentActivation:gy(this.recurrentActivation),useBias:this.useBias,kernelInitializer:mm(this.kernelInitializer),recurrentInitializer:mm(this.recurrentInitializer),biasInitializer:mm(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ky(this.kernelRegularizer),recurrentRegularizer:ky(this.recurrentRegularizer),biasRegularizer:ky(this.biasRegularizer),activityRegularizer:ky(this.activityRegularizer),kernelConstraint:qm(this.kernelConstraint),recurrentConstraint:qm(this.recurrentConstraint),biasConstraint:qm(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}rb.className="LSTMCell",oi(rb);class ab extends Qy{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rb(e),super(e)}call(e,t){return ci((()=>{null!=this.cell.dropoutMask&&(hi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ab.className="LSTM",oi(ab);class sb extends Zy{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ci((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;ym(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{kf(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(og(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Nm(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Im(t)}}function ib(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):qf(t(),n),o=()=>Kf(i,t,r);return!a||a<=1?pi(o().clone()):Array(a).fill(void 0).map(o).map((e=>pi(e.clone())))}sb.className="StackedRNNCells",oi(sb);var ob,lb;class ub extends Qy{constructor(e){if(e.unroll)throw new Pd("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Pd("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Sm({ndim:5})]}call(e,t){return ci((()=>{if(null!=this.cell.dropoutMask&&(hi(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(hi(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new zd("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ci((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Ho([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){ci((()=>{if(!this.stateful)throw new Md("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new zd("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ho(a))):this.states_=[Ho(a)];else if(null==e)hi(this.states_),null!=this.keptStates&&(hi(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ho(a))):this.states_[0]=Ho(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new zd(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):hi(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!z(n.shape,r))throw new zd(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>pi(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=_y(l,r[0],a,s[0],i[0]),h=_y(u,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}ub.className="ConvRNN2D";class cb extends rb{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,af(this.filters,"filters"),this.kernelSize=Ay(n,2,"kernelSize"),this.kernelSize.forEach((e=>af(e,"kernelSize"))),this.strides=Ay(r||1,2,"strides"),this.strides.forEach((e=>af(e,"strides"))),this.padding=a||"valid",xf(this.padding),this.dataFormat=s||"channelsLast",bf(this.dataFormat),this.dilationRate=Ay(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>af(e,"dilationRate")))}build(e){var t;e=vm(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new zd(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Qf{apply(e,t){return zf([n.apply([r]),jo([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ci((()=>{if(3!==e.length)throw new zd(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=ib({ones:()=>qo(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?wo(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=ib({ones:()=>qo(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3);const[y,b,x,v]=dl(this.kernel.read(),4,3),[w,k,N,I]=this.useBias?dl(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,N,this.padding),h=this.inputConv(h,v,I,this.padding);const[S,T,C,E]=dl(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const $=this.recurrentActivation.apply(bi(l,d)),R=this.recurrentActivation.apply(bi(u,f)),A=bi(wo(R,s),wo($,this.activation.apply(bi(c,m)))),_=wo(this.recurrentActivation.apply(bi(h,g)),this.activation.apply(A));return[_,_,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=Xi(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?jf(a,n,this.dataFormat):a}recurrentConv(e,t){return Xi(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}cb.className="ConvLSTM2DCell",oi(cb);class hb extends ub{constructor(e){const t=new cb(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}hb.className="ConvLSTM2D",oi(hb);class pb extends Rm{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return ci((()=>{this.invokeCallHook(e,t);const n=xm(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Kf((()=>qf(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}pb.className="Dropout",oi(pb);class db extends pb{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}db.className="SpatialDropout1D",oi(db);class fb extends Rm{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,af(this.units,"units"),this.activation=by(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=gm(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=gm(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Xm(e.kernelConstraint),this.biasConstraint=Xm(e.biasConstraint),this.kernelRegularizer=Iy(e.kernelRegularizer),this.biasRegularizer=Iy(e.biasRegularizer),this.activityRegularizer=Iy(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=vm(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=vm(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return ci((()=>{this.invokeCallHook(e,t);const n=xm(e),r=of(this.activation.getClassName());let a;return null!=r?a=Uf(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Uf(n,this.kernel.read()),null!=this.bias&&(a=jf(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:gy(this.activation),useBias:this.useBias,kernelInitializer:mm(this.kernelInitializer),biasInitializer:mm(this.biasInitializer),kernelRegularizer:ky(this.kernelRegularizer),biasRegularizer:ky(this.biasRegularizer),activityRegularizer:ky(this.activityRegularizer),kernelConstraint:qm(this.kernelConstraint),biasConstraint:qm(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}fb.className="Dense",oi(fb);class mb extends Rm{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=vm(e);for(const t of e.slice(1))if(null==t)throw new zd(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Cf(e,1)]}call(e,t){return ci((()=>{this.invokeCallHook(e,t);let n=xm(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Sl(n,e)}return function(e){if(e.rank<=1)throw new zd(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Cf(e.shape,1)];return Mi(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}mb.className="Flatten",oi(mb);class gb extends Rm{constructor(e){super(e),this.supportsMasking=!0,this.activation=by(e.activation)}call(e,t){return ci((()=>{this.invokeCallHook(e,t);const n=xm(e);return this.activation.apply(n)}))}getConfig(){const e={activation:gy(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}gb.className="Activation",oi(gb);class yb extends Rm{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ci((()=>{return e=xm(e),t=e,n=this.n,ci((()=>{if(2!==t.shape.length)throw new zd(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Bf(Df(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}yb.className="RepeatVector",oi(yb);class bb extends Rm{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new zd("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=Cf(e);if(null!==s){if(0===a||i%a!=0)throw new zd(n);r[s]=i/a}else if(i!==a)throw new zd(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ci((()=>{this.invokeCallHook(e,t);const n=xm(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Mi(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}bb.className="Reshape",oi(bb);class xb extends Rm{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Rf(1,e.dims.length+1);if(!z(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Sm({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=vm(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Sl(xm(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}xb.className="Permute",oi(xb);class vb extends Rm{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=xm(e);return vi(Vo(n,this.maskValue),-1)}call(e,t){return ci((()=>{this.invokeCallHook(e,t);const n=xm(e),r=vi(Vo(n,this.maskValue),-1,!0);return wo(n,Ts(r,n.dtype))}))}}vb.className="Masking",oi(vb);class wb extends Rm{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(jd(e.inputLength))}this.inputDim=e.inputDim,af(this.inputDim,"inputDim"),this.outputDim=e.outputDim,af(this.outputDim,"outputDim"),this.embeddingsInitializer=gm(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Iy(e.embeddingsRegularizer),this.activityRegularizer=Iy(e.activityRegularizer),this.embeddingsConstraint=Xm(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ci((()=>this.maskZero?(e=xm(e),Vo(e,Il(e))):null))}computeOutputShape(e){if(e=vm(e),null==this.inputLength)return[...e,this.outputDim];const t=jd(this.inputLength);if(t.length!==e.length-1)throw new zd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new zd(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return ci((()=>{this.invokeCallHook(e,t);let n=xm(e);"int32"!==n.dtype&&(n=Ff(n,"int32"));const r=Vf(this.embeddings.read(),Mi(n,[n.size]));return Mi(r,vm(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:mm(this.embeddingsInitializer),embeddingsRegularizer:ky(this.embeddingsRegularizer),activityRegularizer:ky(this.activityRegularizer),embeddingsConstraint:qm(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}wb.className="Embedding",oi(wb);class kb extends Rm{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Pd}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new zd("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[vm(e)]),e.length<2)throw new zd(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=ef(t),t.length>1)throw new zd(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===ef(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ci((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=$f(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Df(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=Mi(r,[a].concat(Cf(e.slice(1))));i=Sl(i,[1,0]),i=Mi(i,s),t.push(i),n=!0}else if(e>1){const a=Rf(1,e).concat([0]);t.push(Sl(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Mi(Sl(Mi(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Rf(0,a-1));r=Sl(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=ef(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return ci((()=>{if(null==t)return null;if(!Array.isArray(t))throw new zd("`mask` should be an Array");if(!Array.isArray(e))throw new zd("`inputs` should be an Array");if(t.length!==e.length)throw new zd(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:lo(e,0))))[0];for(let e=1;e<t.length-1;++e)n=So(n,t[e]);return n}))}}class Nb extends kb{constructor(e){super(e)}mergeFunction(e){return ci((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=bi(t,e[n]);return t}))}}Nb.className="Add",oi(Nb);class Ib extends kb{constructor(e){super(e)}mergeFunction(e){return ci((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=wo(t,e[n]);return t}))}}Ib.className="Multiply",oi(Ib);class Sb extends kb{constructor(e){super(e)}mergeFunction(e){return ci((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=bi(t,e[n]);return wo(1/e.length,t)}))}}Sb.className="Average",oi(Sb);class Tb extends kb{constructor(e){super(e)}mergeFunction(e){return ci((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=$o(t,e[n]);return t}))}}Tb.className="Maximum",oi(Tb);class Cb extends kb{constructor(e){super(e)}mergeFunction(e){return ci((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ao(t,e[n]);return t}))}}Cb.className="Minimum",oi(Cb);class Eb extends kb{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new zd("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(z(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new zd("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ci((()=>zf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new zd("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new zd("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new zd("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new zd(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ci((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Ts(qo(e[n]),"bool")):t[n].rank<e[n].rank?r.push(lo(t[n],-1)):r.push(t[n]);const a=Gi(r,this.axis);return xi(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function $b(e,t){for(;e<0;)e+=t;return e}Eb.className="Concatenate",oi(Eb);class Rb extends kb{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){F(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Pd("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new zd(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new zd(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>$b(t,e[n].shape.length))):[$b(this.axes,n.shape.length),$b(this.axes,r.shape.length)],this.normalize&&(n=lg(n,t[0]),r=lg(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Pd("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),F(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Pd("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return ci((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=Mi(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Mi(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?No(wo(e,t),s[0]):No(wo(Sl(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=To(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=ml(i,t)}return 1===i.shape.length&&(i=lo(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[$b(this.axes,e.length),$b(this.axes,t.length)],n}computeOutputShape(e){F(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Pd("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Rb.className="Dot",oi(Rb);class Ab extends Rm{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ci((()=>{this.invokeCallHook(e,t);const n=xm(e);return Kf((()=>bi(Wf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Ab.className="GaussianNoise",oi(Ab);class _b extends Rm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ci((()=>{this.invokeCallHook(e,t);const n=xm(e);return this.rate>0&&this.rate<1?Kf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return wo(n,Wf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}_b.className="GaussianDropout",oi(_b);class Fb extends Rm{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||xm(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ci((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Kf((()=>{const t=xm(e),r=-1.7580993408473766;let a=go(el(n),this.rate);a=Ff(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=bi(wo(t,a),wo(bi(a,-1),r));return bi(wo(o,s),i)}),(()=>xm(e)),t.training||!1)}return e}))}}function Db(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=Bi(e,t,n,r,a,s);else if(3===e.rank)i=Wi(e,t,n,r,a,s);else{if(4!==e.rank)throw new Pd(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Ui(e,t,n,r,a,s)}return i}Fb.className="AlphaDropout",oi(Fb);class Ob extends Rm{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=gm(e.betaInitializer||"zeros"),this.gammaInitializer=gm(e.gammaInitializer||"ones"),this.movingMeanInitializer=gm(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=gm(e.movingVarianceInitializer||"ones"),this.betaConstraint=Xm(e.betaConstraint),this.gammaConstraint=Xm(e.gammaConstraint),this.betaRegularizer=Iy(e.betaRegularizer),this.gammaRegularizer=Iy(e.gammaRegularizer)}build(e){e=vm(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new zd(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Sm({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ci((()=>{const n=null!=t.training&&t.training,r=xm(e),a=r.shape,s=a.length,i=Rf(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const l=Ud(1,s);l[o]=a[o];const u=i.slice();u.sort();const c=!z(u,Rf(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=Mi(this.movingMean.read(),l),t=Mi(this.movingVariance.read(),l),n=this.center?Mi(this.beta.read(),l):null,a=this.scale?Mi(this.gamma.read(),l):null;return Db(r,e,t,n,a,this.epsilon)}return Db(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,r,a=.001){return z(r.slice().sort(),Rf(0,e.rank-1))?function(e,t,n,r,a=.001){return ci((()=>{const s=Wo(e,r),i=s.mean,o=s.variance;return[Db(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return ci((()=>{const s=Wo(e,r),i=s.mean,o=s.variance,l=[];for(const t of Rf(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Mi(i,l),c=Mi(o,l),h=null==t?null:Mi(t,l),p=null==n?null:Mi(n,l);return[Db(e,u,c,p,h,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{ci((()=>{const r=1-n,a=e.read(),s=wo(ko(a,t),r);e.write(ko(a,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:mm(this.betaInitializer),gammaInitializer:mm(this.gammaInitializer),movingMeanInitializer:mm(this.movingMeanInitializer),movingVarianceInitializer:mm(this.movingVarianceInitializer),betaRegularizer:ky(this.betaRegularizer),gammaRegularizer:ky(this.gammaRegularizer),betaConstraint:qm(this.betaConstraint),gammaConstraint:qm(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ob.className="BatchNormalization",oi(Ob);class Mb extends Rm{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=gm(e.betaInitializer||"zeros"),this.gammaInitializer=gm(e.gammaInitializer||"ones"),this.betaRegularizer=Iy(e.betaRegularizer),this.gammaRegularizer=Iy(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=vm(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==ef(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=xm(e),r=n.shape,a=r.length;return ci((()=>{let{mean:e,variance:t}=Wo(n,this.axis,!0);const s=Ud(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a?Mi(e,s):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=uo(e,u),t=uo(t,u),null!=o&&(o=uo(o,c)),null!=l&&(l=uo(l,c)),Db(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:mm(this.betaInitializer),gammaInitializer:mm(this.gammaInitializer),betaRegularizer:ky(this.betaRegularizer),gammaRegularizer:ky(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Mb.className="LayerNormalization",oi(Mb);class Lb extends Rm{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new zd(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new zd(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new zd(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Sm({ndim:4})]}computeOutputShape(e){let t,n;return e=vm(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return ci((()=>{return t=xm(e),n=this.padding,r=this.dataFormat,ci((()=>{if(4!==t.rank)throw new zd(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new zd("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new zd(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Ko(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function zb(e,t,n,r,a,s){return ci((()=>{let i;bf(a),vf(s),xf(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Dy(e,a);const o="same"===r?"same":"valid";return i="max"===s?Co(e,t,n,o):Li(e,t,n,o),"channelsFirst"===a&&(i=Sl(i,[0,3,1,2])),i}))}function Pb(e,t,n,r,a,s){return ci((()=>{let i;bf(a),vf(s),xf(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Oy(e,a);const o="same"===r?"same":"valid";return i="max"===s?Eo(e,t,n,o):zi(e,t,n,o),"channelsFirst"===a&&(i=Sl(i,[0,4,1,2,3])),i}))}Lb.className="ZeroPadding2D",oi(Lb);class Bb extends Rm{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new zd(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(af(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new zd(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}af(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,xf(this.padding),this.inputSpec=[new Sm({ndim:3})]}computeOutputShape(e){const t=_y((e=vm(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ci((()=>{this.invokeCallHook(e,t),e=Df(xm(e),2);const n=this.poolingFunction(xm(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ml(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Wb extends Bb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return bf(a),xf(r),zb(e,t,n,r,a,"max")}}Wb.className="MaxPooling1D",oi(Wb);class Ub extends Bb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return bf(a),xf(r),zb(e,t,n,r,a,"avg")}}Ub.className="AveragePooling1D",oi(Ub);class Vb extends Rm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new zd(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];af(this.poolSize,"poolSize"),af(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,bf(this.dataFormat),xf(this.padding),this.inputSpec=[new Sm({ndim:4})]}computeOutputShape(e){e=vm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=_y(t,this.poolSize[0],this.padding,this.strides[0]),n=_y(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return ci((()=>(this.invokeCallHook(e,t),this.poolingFunction(xm(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Gb extends Vb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return bf(a),xf(r),zb(e,t,n,r,a,"max")}}Gb.className="MaxPooling2D",oi(Gb);class Hb extends Vb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return bf(a),xf(r),zb(e,t,n,r,a,"avg")}}Hb.className="AveragePooling2D",oi(Hb);class jb extends Rm{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new zd(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];af(this.poolSize,"poolSize"),af(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,bf(this.dataFormat),xf(this.padding),this.inputSpec=[new Sm({ndim:5})]}computeOutputShape(e){e=vm(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=_y(t,this.poolSize[0],this.padding,this.strides[0]),n=_y(n,this.poolSize[1],this.padding,this.strides[1]),r=_y(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return ci((()=>(this.invokeCallHook(e,t),this.poolingFunction(xm(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class qb extends jb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return bf(a),xf(r),Pb(e,t,n,r,a,"max")}}qb.className="MaxPooling3D",oi(qb);class Kb extends jb{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return bf(a),xf(r),Pb(e,t,n,r,a,"avg")}}Kb.className="AveragePooling3D",oi(Kb);class Xb extends Rm{constructor(e){super(e),this.inputSpec=[new Sm({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Pd}}class Yb extends Xb{constructor(e){super(e||{})}call(e,t){return ci((()=>{const t=xm(e);return Ro(t,1)}))}}Yb.className="GlobalAveragePooling1D",oi(Yb);class Qb extends Xb{constructor(e){super(e||{})}call(e,t){return ci((()=>{const t=xm(e);return vo(t,1)}))}}Qb.className="GlobalMaxPooling1D",oi(Qb);class Zb extends Rm{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,bf(this.dataFormat),this.inputSpec=[new Sm({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Pd}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Jb extends Zb{call(e,t){return ci((()=>{const t=xm(e);return"channelsLast"===this.dataFormat?Ro(t,[1,2]):Ro(t,[2,3])}))}}Jb.className="GlobalAveragePooling2D",oi(Jb);class ex extends Zb{call(e,t){return ci((()=>{const t=xm(e);return"channelsLast"===this.dataFormat?vo(t,[1,2]):vo(t,[2,3])}))}}ex.className="GlobalMaxPooling2D",oi(ex);class tx extends Rm{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=og(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class nx extends tx{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=vm(e)).length<3)throw new zd(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=vm(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return ci((()=>Yy(((e,n)=>[xm(this.layer.call(e,t)),[]]),e=xm(e),[],!1,null,null,!1,!0)[1]))}}nx.className="TimeDistributed",oi(nx);class rx extends tx{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=og(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=og(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,nf(gf,"BidirectionalMergeMode",a),e.weights)throw new Pd("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState?(r=a.slice(1),t=a[0]):t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Hd(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Xy(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new zd("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Sm({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Pd("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Tm;for(const e of s)if(e instanceof Tm!==o)throw new zd("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return ci((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=nl(a,1)),"concat"===this.mergeMode?i=zf([r,a]):"sum"===this.mergeMode?i=bi(r,a):"ave"===this.mergeMode?i=wo(.5,bi(r,a)):"mul"===this.mergeMode?i=wo(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){kf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),kf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=og(t.layer);if(delete t.layer,null!=t.numConstants)throw new Pd("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}rx.className="Bidirectional",oi(rx),fe().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(ob||(ob={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(lb||(lb={}));const ax={};function sx(e){return ax[e]}function ix(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return ox(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>ox(e,n,r,a)));const o=ox(t.inputNames.slice(e)[0],n,r,a),l=o.dataSync();return"number"===s.type?l[0]:ae(o.shape,l)}const i=t.attrParams[e];return i&&i.value}function ox(e,t,n,r){const[a,s]=cx(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[ux(a,e)]));return void 0!==i?t[ux(a,i)][s]:void 0}function lx(e,t){const[n,r,a]=cx(e);return[ux(n,t&&t.currentContextId),r,a]}function ux(e,t){return t?`${e}-${t}`:e}function cx(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function hx(e,t,n){let r=ix("pad",e,t,n);if("explicit"===r){r=ix("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function px(e){return e.kept?e:Cs(e)}const dx=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fx=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],mx=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],gx=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],yx=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],bx=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],xx=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],vx=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],wx=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],kx=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Nx=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ix=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],Sx=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],Tx=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Cx=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Ex=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],$x=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Rx=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Ax=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class _x{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,s,i,o,l,u,c,h,p,d,f,m,g,y,b,x,v,w,k].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=lx(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=lx(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=lx(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:l,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(d.initNodes=s),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=sx(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=Dx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Dx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Gx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Gx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Mx(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Mx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Vx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Vx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Ox(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ox(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=jx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=jx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Ux(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ux(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Hx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Hx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=Px(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Px(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Bx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Bx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=zx(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=zx(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=lx(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Lx(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=lx(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=lx(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Fx(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=fe().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Dx(e,t,n,r=!1){const a=e[t];return null!=a?Fx(a.s,r):n}function Ox(e,t,n){const r=e[t];return r?r.b:n}function Mx(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Lx(e){switch("string"==typeof e&&(e=ob[e]),e){case ob.DT_FLOAT:case ob.DT_HALF:return"float32";case ob.DT_INT32:case ob.DT_INT64:case ob.DT_INT8:case ob.DT_UINT8:return"int32";case ob.DT_BOOL:return"bool";case ob.DT_DOUBLE:return"float32";case ob.DT_STRING:return"string";default:return null}}function zx(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Px(e,t,n){const r=e[t];return r&&r.type?Lx(r.type):n}function Bx(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Lx(e))):n}function Wx(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function Ux(e,t,n){const r=e[t];return r&&r.shape?Wx(r.shape):n}function Vx(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Gx(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>Fx(e,r))):n}function Hx(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Wx(e))):n}function jx(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class qx{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return ox(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return ox(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Mx(this.node.rawAttrs,e,t);if(null!=n.s)return Dx(this.node.rawAttrs,e,t);if(null!=n.b)return Ox(this.node.rawAttrs,e,t);if(null!=n.shape)return Ux(this.node.rawAttrs,e,t);if(null!=n.type)return Px(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Vx(this.node.rawAttrs,e,t);if(null!=n.list.s)return Gx(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Hx(this.node.rawAttrs,e,t);if(null!=n.list.b)return jx(this.node.rawAttrs,e,t);if(null!=n.list.type)return Bx(this.node.rawAttrs,e,t)}return t}}const Kx=Ba({addN_:function(e){F(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),F(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>za(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!z(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return Ra.runKernel(Ne,r)}});function Xx(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){F(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];F(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Yx(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Qx(e,t,n){let r=Zx(e,n);const a=!Yx(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Zx(e.shape,r)})),!Yx(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Zx(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Jx{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=mi(0),pi(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Xx(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,pi(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Va([],[0].concat(this.elementShape));const n=this.readMany(e);return Xx(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),gl(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Va([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Xx(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Gi(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,wl(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];ci((()=>{t=Mi(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Mi(il(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class ev{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Xx(t,e.shape,"TensorList shape mismatch: "),pi(e)})),this.idTensor=mi(0),this.maxNumElements=r,pi(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ev([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Xx(e,this.elementShape,"TensorList shape mismatch: ");const r=Qx(this.elementShape,this.tensors,e);return ci((()=>{const e=this.tensors.map((e=>Mi(e,r)));return gl(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Qx(this.elementShape,this.tensors,e),r=this.tensors.pop();return Xx(r.shape,e,"TensorList shape mismatch: "),Mi(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Xx(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");pi(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new ev([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Xx(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Qx(this.elementShape,this.tensors,t);return Mi(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Xx(this.elementShape,t.shape,"TensorList shape mismatch: "),pi(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Xx(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Qx(this.elementShape,this.tensors,n);return 0===e.length?Va([],[0].concat(r)):ci((()=>{const t=e.map((e=>Mi(this.tensors[e],r)));return gl(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Xx(this.elementShape,t,"TensorList shape mismatch: ");const n=Qx(this.elementShape,this.tensors,t);return 0===this.size()?Va([],[0].concat(n)):ci((()=>{const e=this.tensors.map((e=>Mi(e,n)));return Gi(e,0)}))}}const tv=Ba({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:za(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Ra.runKernel(tn,s,i);return{result:o[0],indexes:o[1]}}});function nv(e,t,n){const[r,a]=ix("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,l="fusedbatchnorm"===r,u=ix("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=ix("strides",e,t,n),h=hx(e,t,n),p=ix("dataFormat",e,t,n).toUpperCase(),d=ix("dilations",e,t,n);let[f,m]=ix("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:ix("leakyreluAlpha",e,t,n)}}function rv(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Ra.runKernel(Wt,{},r)}const av=Ba({multinomial_:function(e,t,n,r=!1){const a=za(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Mi(a,[1,-1]):a},l={numSamples:t,seed:n,normalized:r},u=Ra.runKernel(ln,o,l);return 1===i?Mi(u,[u.size]):u}}),sv=async function(e){const t=za(e,"condition","whereAsync","bool"),n=await t.data(),r=eh(t.shape,n);return e!==t&&t.dispose(),r};function iv(e,t,n){return{boxes:ix("boxes",e,t,n),scores:ix("scores",e,t,n),maxOutputSize:ix("maxOutputSize",e,t,n),iouThreshold:ix("iouThreshold",e,t,n),scoreThreshold:ix("scoreThreshold",e,t,n),softNmsSigma:ix("softNmsSigma",e,t,n)}}const ov=2147483648,lv=Ba({searchSorted_:function(e,t,n="left"){const r=za(e,"sortedSequence","searchSorted"),a=za(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=Mi(r,[-1,s]),l=Mi(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(L(l.shape)>=ov)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=ov)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return Ra.runKernel(Mn,u,c)}});function uv(e,t){return lv(e,t,"right")}class cv{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=mi(0),this.tensorMap=new Map,pi(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return mi(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),ci((()=>{const e=wl(t),r=n.length,a=e.length;F(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];pi(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return ci((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return gl(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}const hv=Ba({einsum_:function(e,...t){const n=t.map(((e,t)=>za(e,`tensors${t}`,"einsum"))),r={equation:e};return Ra.runKernel(ft,n,r)}}),pv=Ba({sparseToDense_:function(e,t,n,r=0){const a=za(e,"sparseIndices","sparseToDense","int32"),s=za(t,"sparseValues","sparseToDense","string_or_numeric"),i=za(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},l={outputShape:n};return Ra.runKernel(er,o,l)}}),dv=Ba({denseBincount_:function(e,t,n,r=!1){const a=za(e,"x","denseBincount"),s=za(t,"weights","denseBincount");F("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),F(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),F(n>=0,(()=>`size must be non-negative, but got ${n}.`)),F(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const i={x:a,weights:s},o={size:n,binaryOutput:r};return Ra.runKernel(at,i,o)}}),fv=Ba({scatterND_:function(e,t,n){const r=za(e,"indices","scatterND","int32"),a=za(t,"updates","scatterND");hc(a,r,n);const s={indices:r,updates:a},i={shape:n};return Ra.runKernel(On,s,i)}}),mv=Ba({gatherND_:function(e,t){const n=za(t,"indices","gatherND","int32"),r={params:za(e,"x","gatherND","string_or_numeric"),indices:n};return Ra.runKernel($t,r)}}),gv=Ba({broadcastArgs_:function(e,t){const n=za(e,"s0","broadcastArgs","int32"),r=za(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return Ra.runKernel(Be,a)}});function yv(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return ci((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[bi(ix("a",e,t,n),ix("b",e,t,n))];case"AddN":return[Kx(ix("tensors",e,t,n))];case"FloorMod":case"Mod":return[Cd(ix("a",e,t,n),ix("b",e,t,n))];case"Mul":return[wo(ix("a",e,t,n),ix("b",e,t,n))];case"RealDiv":case"Div":return[ao(ix("a",e,t,n),ix("b",e,t,n))];case"DivNoNan":return[fd(ix("a",e,t,n),ix("b",e,t,n))];case"FloorDiv":return[ro(ix("a",e,t,n),ix("b",e,t,n))];case"Sub":return[ko(ix("a",e,t,n),ix("b",e,t,n))];case"Minimum":return[Ao(ix("a",e,t,n),ix("b",e,t,n))];case"Maximum":return[$o(ix("a",e,t,n),ix("b",e,t,n))];case"Pow":return[wu(ix("a",e,t,n),ix("b",e,t,n))];case"SquaredDifference":return[$u(ix("a",e,t,n),ix("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return ci((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[yi(ix("x",e,t,n))];case"Acos":return[rd(ix("x",e,t,n))];case"Acosh":return[ad(ix("x",e,t,n))];case"Asin":return[id(ix("x",e,t,n))];case"Asinh":return[od(ix("x",e,t,n))];case"Atan":return[ld(ix("x",e,t,n))];case"Atan2":return[ud(ix("x",e,t,n),ix("y",e,t,n))];case"Atanh":return[cd(ix("x",e,t,n))];case"Ceil":return[hd(ix("x",e,t,n))];case"Complex":return[Wa(ix("real",e,t,n),ix("imag",e,t,n))];case"Cos":return[jp(ix("x",e,t,n))];case"Cosh":return[Kp(ix("x",e,t,n))];case"Elu":return[so(ix("x",e,t,n))];case"Erf":return[gd(ix("x",e,t,n))];case"Exp":return[oo(ix("x",e,t,n))];case"Expm1":return[bd(ix("x",e,t,n))];case"Floor":return[po(ix("x",e,t,n))];case"Log":return[bo(ix("x",e,t,n))];case"Log1p":return[xo(ix("x",e,t,n))];case"Imag":return[Cl(ix("x",e,t,n))];case"Neg":return[Uo(ix("x",e,t,n))];case"Reciprocal":return[Rd(ix("x",e,t,n))];case"Real":return[El(ix("x",e,t,n))];case"Relu":return[tl(ix("x",e,t,n))];case"Round":return[mu(ix("x",e,t,n))];case"Selu":return[rl(ix("x",e,t,n))];case"Sigmoid":return[sl(ix("x",e,t,n))];case"Sin":return[Rh(ix("x",e,t,n))];case"Sign":return[Ad(ix("x",e,t,n))];case"Sinh":return[_h(ix("x",e,t,n))];case"Softplus":return[pl(ix("x",e,t,n))];case"Sqrt":return[fl(ix("x",e,t,n))];case"Square":return[Bo(ix("x",e,t,n))];case"Tanh":return[yl(ix("x",e,t,n))];case"Tan":return[Fd(ix("x",e,t,n))];case"ClipByValue":return[Vi(ix("x",e,t,n),ix("clipValueMin",e,t,n),ix("clipValueMax",e,t,n))];case"Relu6":return[Dl(ix("x",e,t,n))];case"Rsqrt":return[Hh(ox(e.inputNames[0],t,n))];case"Prod":return[$d(ix("x",e,t,n),ix("axes",e,t,n))];case"LeakyRelu":return[yo(ix("x",e,t,n),ix("alpha",e,t,n))];case"Prelu":return[Xo(ix("x",e,t,n),ix("alpha",e,t,n))];case"IsNan":return[wd(ox(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=ix("thenBranch",e,t,n),a=ix("elseBranch",e,t,n),s=ix("cond",e,t,n),i=ix("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=ix("body",e,t,n),a=ix("cond",e,t,n),s=ix("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=s;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[px(ix("pred",e,t,n))];case"Switch":{const r=ix("pred",e,t,n);let a=ix("data",e,t,n);return a.kept||(a=px(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==ox(e,t,n)));return r?[px(ox(r,t,n))]:void 0}case"Enter":{const r=ix("frameName",e,t,n),a=ix("tensor",e,t,n);return n.enterFrame(r),[px(a)]}case"Exit":{const r=ix("tensor",e,t,n);return n.exitFrame(),[px(r)]}case"NextIteration":{const r=ix("tensor",e,t,n);return n.nextIteration(),[px(r)]}case"TensorArrayV3":{const r=ix("size",e,t,n),a=ix("dtype",e,t,n),s=ix("elementShape",e,t,n),i=ix("dynamicSize",e,t,n),o=ix("clearAfterRead",e,t,n),l=ix("identicalElementShapes",e,t,n),u=ix("name",e,t,n),c=new Jx(u,a,r,s,l,i,o);return n.addTensorArray(c),[c.idTensor,mi(1)]}case"TensorArrayWriteV3":{const r=ix("tensorArrayId",e,t,n),a=ix("index",e,t,n),s=ix("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=ix("tensorArrayId",e,t,n),a=ix("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=ix("tensorArrayId",e,t,n),a=ix("indices",e,t,n),s=ix("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=ix("tensorArrayId",e,t,n),a=ix("indices",e,t,n),s=ix("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=ix("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=ix("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=ix("tensorArrayId",e,t,n),a=ix("tensor",e,t,n),s=ix("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=ix("tensorArrayId",e,t,n);return[mi(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=ix("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=ix("tensorListId",e,t,n),a=ix("index",e,t,n),s=ix("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=ix("tensorListId",e,t,n),a=ix("index",e,t,n),s=ix("elementShape",e,t,n),i=ix("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=ix("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new ev([],n,e.dtype,r),i=wl(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(ix("tensor",e,t,n),r,ix("elementShape",e,t,n),ix("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=ix("elementShape",e,t,n),a=ix("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new ev([],e,t,n)}(r,a,ix(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=ix("tensorListId",e,t,n),a=ix("indices",e,t,n),s=ix("elementShape",e,t,n),i=ix("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=ix("tensorListId",e,t,n),a=ix("elementShape",e,t,n),s=ix("elementDType",e,t,n),i=ix("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Xx(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=wl(e);return new ev(a,t,r)}(ix("tensor",e,t,n),ix("elementShape",e,t,n),ix("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=ix("tensorListId",e,t,n),a=n.getTensorList(r.id),s=ix("dtype",e,t,n),i=ix("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=ix("tensorListId",e,t,n),a=ix("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=ix("tensorListId",e,t,n),a=ix("elementShape",e,t,n),s=ix("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=ix("tensor",e,t,n),a=ix("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=Zx(e.shape.slice(1),n),i=0===r?0:e.size/r,o=ci((()=>{const n=[];e=Mi(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],l=[1,t[r],i];n[r]=Mi(il(e,o,l),s)}return e.dispose(),n})),l=new ev([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,ix("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const r=ix("tensorListId",e,t,n);return[mi(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=ix("tensorListId",e,t,n),a=ix("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return ci((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=ix("stride",e,t,n),a=ix("pad",e,t,n),s=ix("dataFormat",e,t,n).toUpperCase(),i=ix("dilation",e,t,n);return[Yi(ix("x",e,t,n),ix("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=ix("strides",e,t,n),a=hx(e,t,n),s=ix("dataFormat",e,t,n).toUpperCase(),i=ix("dilations",e,t,n);return[Xi(ix("x",e,t,n),ix("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=nv(e,t,n);return[Bl({x:ix("x",e,t,n),filter:ix("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=nv(e,t,n);return[Vl({x:ix("x",e,t,n),filter:ix("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=ix("outputShape",e,t,n),a=ix("strides",e,t,n),s=hx(e,t,n);return[Zi(ix("x",e,t,n),ix("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=ix("strides",e,t,n),a=hx(e,t,n),s=ix("dilations",e,t,n),i=ix("dataFormat",e,t,n).toUpperCase();return[no(ix("input",e,t,n),ix("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=ix("strides",e,t,n),a=ix("pad",e,t,n),s=ix("dataFormat",e,t,n).toUpperCase(),i=ix("dilations",e,t,n);return[Ji(ix("x",e,t,n),ix("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=ix("strides",e,t,n),a=ix("pad",e,t,n),s=ix("kernelSize",e,t,n);return[Li(ix("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=ix("strides",e,t,n),a=ix("pad",e,t,n),s=ix("kernelSize",e,t,n);return[Co(ix("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=ix("strides",e,t,n),a=ix("pad",e,t,n),s=ix("kernelSize",e,t,n),i=ix("includeBatchInIndex",e,t,n),{result:o,indexes:l}=tv(ix("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,l]}case"AvgPool3D":{const r=ix("strides",e,t,n),a=ix("pad",e,t,n),s=ix("kernelSize",e,t,n);return[zi(ix("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=ix("strides",e,t,n),a=ix("pad",e,t,n),s=ix("kernelSize",e,t,n);return[Eo(ix("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=ix("strides",e,t,n),a=ix("pad",e,t,n),s=ix("dilations",e,t,n),i=r[1],o=r[2],l=s[1],u=s[2];return[dd(ix("x",e,t,n),ix("filter",e,t,n),[i,o],a,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return ci((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=ix("shape",e,t,n),a=ix("dtype",e,t,n);return[ho(r,ix("value",e,t,n),a)]}case"LinSpace":return[rv(ix("start",e,t,n),ix("stop",e,t,n),ix("num",e,t,n))];case"Multinomial":{const r=ix("logits",e,t,n),a=ix("numSamples",e,t,n),s=ix("seed",e,t,n);return[av(r,a,s)]}case"OneHot":{const r=ix("indices",e,t,n),a=ix("depth",e,t,n),s=ix("onValue",e,t,n),i=ix("offValue",e,t,n);return[Go(r,a,s,i)]}case"Ones":return[jo(ix("shape",e,t,n),ix("dtype",e,t,n))];case"OnesLike":return[qo(ix("x",e,t,n))];case"RandomUniform":return[el(ix("shape",e,t,n),ix("minval",e,t,n),ix("maxval",e,t,n),ix("dtype",e,t,n))];case"Range":return[gu(ix("start",e,t,n),ix("stop",e,t,n),ix("step",e,t,n),ix("dtype",e,t,n))];case"TruncatedNormal":{const r=ix("shape",e,t,n),a=ix("mean",e,t,n),s=ix("stdDev",e,t,n),i=ix("seed",e,t,n);return[vl(r,a,s,ix("dtype",e,t,n),i)]}case"Zeros":return[Ho(ix("shape",e,t,n),ix("dtype",e,t,n))];case"ZerosLike":return[Il(ix("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=iv(e,t,n),u=await zu.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=iv(e,t,n),l=ix("padToMaxOutputSize",e,t,n),u=await zu.nonMaxSuppressionPaddedAsync(r,a,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=iv(e,t,n);return[await zu.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Ts(ix("condition",e,t,n),"bool"),a=[await sv(r)];return r.dispose(),a}case"ListDiff":return async function(e,t){const n=za(e,"x","setdiff1d"),r=za(t,"y","setdiff1d");F(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),F(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),F(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const l=new oa([o],n.dtype),u=new oa([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(l.values[t]=a[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]}(ix("x",e,t,n),ix("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return ci((()=>((e,t,n)=>{switch(e.op){case"LowerBound":return[(r=ix("sortedSequence",e,t,n),a=ix("values",e,t,n),lv(r,a,"left"))];case"TopKV2":{const r=ix("x",e,t,n),a=ix("k",e,t,n),s=ix("sorted",e,t,n),i=Dd(r,a,s);return[i.values,i.indices]}case"UpperBound":return[uv(ix("sortedSequence",e,t,n),ix("values",e,t,n))];case"Unique":{const r=ix("x",e,t,n),a=Od(r);return[a.values,a.indices]}case"UniqueV2":{const r=ix("x",e,t,n),a=ix("axis",e,t,n),s=Od(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}var r,a})(e,t,n)));case"image":return ci((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=ix("images",e,t,n),a=ix("size",e,t,n),s=ix("alignCorners",e,t,n),i=ix("halfPixelCenters",e,t,n);return[zu.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=ix("images",e,t,n),a=ix("size",e,t,n),s=ix("alignCorners",e,t,n),i=ix("halfPixelCenters",e,t,n);return[zu.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=ix("image",e,t,n),a=ix("boxes",e,t,n),s=ix("boxInd",e,t,n),i=ix("cropSize",e,t,n),o=ix("method",e,t,n),l=ix("extrapolationValue",e,t,n);return[zu.cropAndResize(r,a,s,i,o,l)]}case"ImageProjectiveTransformV3":{const r=ix("images",e,t,n),a=ix("transforms",e,t,n),s=ix("outputShape",e,t,n),i=ix("fillValue",e,t,n),o=ix("interpolation",e,t,n),l=ix("fillMode",e,t,n);return[zu.transform(r,a,o.toLowerCase(),l.toLowerCase(),i,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return ci((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=ix("default",e,t,n);return[ox(e.name,t,n)||r];case"Placeholder":return[ox(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[px(ix("x",e,t,n))];case"IdentityN":return ix("x",e,t,n).map((e=>px(e)));case"Shape":return[bl(ix("x",e,t,n).shape,"int32")];case"ShapeN":return ix("x",e,t,n).map((e=>bl(e.shape)));case"Size":return[mi(ix("x",e,t,n).size,"int32")];case"Rank":return[mi(ix("x",e,t,n).rank,"int32")];case"NoOp":return[mi(1)];case"Print":const a=ix("x",e,t,n),s=ix("data",e,t,n),i=ix("message",e,t,n),o=ix("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return ci((()=>((e,t,n)=>{switch(e.op){case"Equal":return[io(ix("a",e,t,n),ix("b",e,t,n))];case"NotEqual":return[Vo(ix("a",e,t,n),ix("b",e,t,n))];case"Greater":return[mo(ix("a",e,t,n),ix("b",e,t,n))];case"GreaterEqual":return[go(ix("a",e,t,n),ix("b",e,t,n))];case"Less":return[cp(ix("a",e,t,n),ix("b",e,t,n))];case"LessEqual":return[fu(ix("a",e,t,n),ix("b",e,t,n))];case"LogicalAnd":return[So(ix("a",e,t,n),ix("b",e,t,n))];case"LogicalNot":return[Wp(ix("a",e,t,n))];case"LogicalOr":return[Id(ix("a",e,t,n),ix("b",e,t,n))];case"Select":case"SelectV2":return[Nl(ix("condition",e,t,n),ix("a",e,t,n),ix("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return ci((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[To(ix("a",e,t,n),ix("b",e,t,n),ix("transposeA",e,t,n),ix("transposeB",e,t,n))];case"Einsum":return[hv(ix("equation",e,t,n),...ix("tensors",e,t,n))];case"Transpose":return[Sl(ix("x",e,t,n),ix("perm",e,t,n))];case"_FusedMatMul":const[r,a]=ix("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=ix("numArgs",e,t,n),l=ix("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=ix("args",e,t,n);return[Gl({a:ix("a",e,t,n),b:ix("b",e,t,n),transposeA:ix("transposeA",e,t,n),transposeB:ix("transposeB",e,t,n),bias:u,activation:a,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return ci((()=>((e,t,n)=>{switch(e.op){case"EuclideanNorm":return[yd(ix("x",e,t,n),ix("axis",e,t,n),ix("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Pi(ix("x",e,t,n),ix("mean",e,t,n),ix("variance",e,t,n),ix("offset",e,t,n),ix("scale",e,t,n),ix("epsilon",e,t,n))];case"LRN":return[kd(ix("x",e,t,n),ix("radius",e,t,n),ix("bias",e,t,n),ix("alpha",e,t,n),ix("beta",e,t,n))];case"Softmax":return[hl(ix("x",e,t,n))];case"LogSoftmax":return[Io(ix("x",e,t,n))];case"SparseToDense":return[pv(ix("sparseIndices",e,t,n),ix("outputShape",e,t,n),ix("sparseValues",e,t,n),ix("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return ci((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=ix("axis",e,t,n),a=ix("keepDims",e,t,n);return[vo(ix("x",e,t,n),r,a)]}case"Mean":{const r=ix("axis",e,t,n),a=ix("keepDims",e,t,n);return[Ro(ix("x",e,t,n),r,a)]}case"Min":{const r=ix("axis",e,t,n),a=ix("keepDims",e,t,n);return[vu(ix("x",e,t,n),r,a)]}case"Sum":{const r=ix("axis",e,t,n),a=ix("keepDims",e,t,n);return[No(ix("x",e,t,n),r,a)]}case"All":{const r=ix("axis",e,t,n),a=ix("keepDims",e,t,n);return[xi(ix("x",e,t,n),r,a)]}case"Any":{const r=ix("axis",e,t,n),a=ix("keepDims",e,t,n);return[vi(ix("x",e,t,n),r,a)]}case"ArgMax":{const r=ix("axis",e,t,n);return[wi(ix("x",e,t,n),r)]}case"ArgMin":{const r=ix("axis",e,t,n);return[sd(ix("x",e,t,n),r)]}case"Prod":{const r=ix("axis",e,t,n),a=ix("keepDims",e,t,n);return[$d(ix("x",e,t,n),r,a)]}case"Cumprod":{const r=ix("axis",e,t,n),a=ix("exclusive",e,t,n),s=ix("reverse",e,t,n);return[$p(ix("x",e,t,n),r,a,s)]}case"Cumsum":{const r=ix("axis",e,t,n),a=ix("exclusive",e,t,n),s=ix("reverse",e,t,n);return[Dh(ix("x",e,t,n),r,a,s)]}case"Bincount":const r=ix("x",e,t,n),a=ix("weights",e,t,n),s=ix("size",e,t,n);return[du(r,a,s)];case"DenseBincount":{const r=ix("x",e,t,n),a=ix("weights",e,t,n),s=ix("size",e,t,n),i=ix("binaryOutput",e,t,n);return[dv(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return ci((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=ix("n",e,t,n),a=ix("axis",e,t,n);let s=ix("tensors",e,t,n);return s=s.slice(0,r),[Gi(s,a)]}case"Gather":{const r=ix("x",e,t,n),a=ix("indices",e,t,n);return[fo(r,Ts(a,"int32"),0)]}case"GatherV2":{const r=ix("axis",e,t,n),a=ix("batchDims",e,t,n),s=ix("x",e,t,n),i=ix("indices",e,t,n);return[fo(s,Ts(i,"int32"),r,a)]}case"Reverse":{const r=ix("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=ix("x",e,t,n);return[nl(s,a)]}case"ReverseV2":{const r=ix("axis",e,t,n),a=ix("x",e,t,n);return[nl(a,r)]}case"Slice":{const r=ix("begin",e,t,n),a=ix("size",e,t,n);return[il(ix("x",e,t,n),r,a)]}case"StridedSlice":{const r=ix("begin",e,t,n),a=ix("end",e,t,n),s=ix("strides",e,t,n),i=ix("beginMask",e,t,n),o=ix("endMask",e,t,n),l=ix("ellipsisMask",e,t,n),u=ix("newAxisMask",e,t,n),c=ix("shrinkAxisMask",e,t,n),h=ix("x",e,t,n);return[_d(h,r,a,s,i,o,l,u,c)]}case"Pack":return ci((()=>{const r=ix("axis",e,t,n),a=ix("tensors",e,t,n),s=a[0].shape,i=ml(a[0]).shape,o=a.map((e=>{const t=z(e.shape,s);if(!t&&!z(ml(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Mi(e,s)}));return[gl(o,r)]}));case"Unpack":{const r=ix("axis",e,t,n),a=ix("tensor",e,t,n);return wl(a,r)}case"Tile":{const r=ix("reps",e,t,n);return[uo(ix("x",e,t,n),r)]}case"Split":case"SplitV":{const r=ix("axis",e,t,n),a=ix("numOrSizeSplits",e,t,n),s=ix("x",e,t,n);return dl(s,a,r)}case"ScatterNd":{const r=ix("indices",e,t,n),a=ix("values",e,t,n),s=ix("shape",e,t,n);return[fv(r,a,s)]}case"GatherNd":{const r=ix("x",e,t,n),a=ix("indices",e,t,n);return[mv(r,a)]}case"SparseToDense":{const r=ix("sparseIndices",e,t,n),a=ix("outputShape",e,t,n),s=ix("sparseValues",e,t,n),i=ix("defaultValue",e,t,n);return[pv(r,s,a,s.dtype===i.dtype?i:Ts(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return ci((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Bu.sparseFillEmptyRows(ix("indices",e,t,n),ix("values",e,t,n),ix("denseShape",e,t,n),ix("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=Bu.sparseReshape(ix("inputIndices",e,t,n),ix("inputShape",e,t,n),ix("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Bu.sparseSegmentMean(ix("data",e,t,n),ix("indices",e,t,n),ix("segmentIds",e,t,n))];case"SparseSegmentSum":return[Bu.sparseSegmentSum(ix("data",e,t,n),ix("indices",e,t,n),ix("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return ci((()=>((e,t,n)=>{switch(e.op){case"FFT":return[$l(ix("x",e,t,n))];case"IFFT":return[Al(ix("x",e,t,n))];case"RFFT":return[Rl(ix("x",e,t,n))];case"IRFFT":return[_l(ix("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return ci((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=Wu.stringNGrams(ix("data",e,t,n),ix("dataSplits",e,t,n),ix("separator",e,t,n),ix("nGramWidths",e,t,n),ix("leftPad",e,t,n),ix("rightPad",e,t,n),ix("padWidth",e,t,n),ix("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=Wu.stringSplit(ix("input",e,t,n),ix("delimiter",e,t,n),ix("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[Wu.stringToHashBucketFast(ix("input",e,t,n),ix("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return ci((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ts(ix("x",e,t,n),ix("dtype",e,t,n))];case"ExpandDims":{const r=ix("axis",e,t,n);return[lo(ix("x",e,t,n),r)]}case"Squeeze":{const r=ix("axis",e,t,n);return[ml(ix("x",e,t,n),r)]}case"Reshape":return[Mi(ix("x",e,t,n),ix("shape",e,t,n))];case"MirrorPad":return[Td(ix("x",e,t,n),ix("padding",e,t,n),ix("mode",e,t,n))];case"PadV2":case"Pad":return[Ko(ix("x",e,t,n),ix("padding",e,t,n),ix("constantValue",e,t,n))];case"SpaceToBatchND":{const r=ix("blockShape",e,t,n),a=ix("paddings",e,t,n);return[bh(ix("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=ix("blockShape",e,t,n),a=ix("crops",e,t,n);return[Jp(ix("x",e,t,n),r,a)]}case"DepthToSpace":{const r=ix("blockSize",e,t,n),a=ix("dataFormat",e,t,n).toUpperCase();return[pd(ix("x",e,t,n),r,a)]}case"BroadcastTo":return[kl(ix("x",e,t,n),ix("shape",e,t,n))];case"BroadcastArgs":return[gv(ix("s0",e,t,n),ix("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=ix("keyDType",e,t,n),s=ix("valueDType",e,t,n),i=new cv(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=ix("tableHandle",e,t,n,r),s=ix("keys",e,t,n),i=ix("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=ix("tableHandle",e,t,n,r),s=ix("keys",e,t,n),i=ix("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=ix("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=sx(e.op);if(a&&a.customExecutor)return a.customExecutor(new qx(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return he(a)?a.then((e=>[].concat(e))):[].concat(a)}class bv{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function xv(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const l=new Set,u=Object.keys(e).map((e=>cx(e)[0]));let c=[];null!=r&&(c=r.map((e=>cx(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(Nv(e)||Iv(e)||Sv(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const vv=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],wv=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],kv=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Nv(e){return vv.indexOf(e.op)>=0}function Iv(e){return wv.indexOf(e.op)>=0}function Sv(e){return kv.indexOf(e.op)>=0}class Tv{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Tv(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=xv(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>cx(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const l=new Set,u=[];for(;s.length>0;){const e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[cx(e)[0]])),a=t.map((e=>cx(e)[0]));let s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const l={},u={};return ci((()=>{const n=new bv(this.weightMap,l,u,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=cx(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=yv(t,r,n,this._resourceManager);if(he(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>ox(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const s=function(e,t,n){return t[ux(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=lx(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=fe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const s=new bv(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const i=t.map((e=>ox(e,this.tensorsMap,s))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[cx(e)[0]])),i=n.map((e=>cx(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=xv(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=cx(t),a=[];a[r]=e[t],d[n]=a}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(s,p,t,d,g,m,i,f,l);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!Nv(e)&&!ox(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,r,a,s,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&ix("isConstant",e.node,r,n)&&([c]=lx(e.node.name,n)),null==r[e.node.name]){const h=yv(e.node,r,n,this._resourceManager);c||([c]=lx(e.node.name,n));const p=n.currentContext;he(h)?u.push(h.then((u=>(r[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l),u)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,l))}else this.processChildNodes(e.node,t,n,r,a,l)}return u}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=lx(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!ox(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!ox(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=cx(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;F(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&F(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=cx(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=cx(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Cv{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Ev{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Cv}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Ms(e,this.loadOptions);else{const r=(t=e,n=this.loadOptions,Ja.getLoadHandlers(t,n));if(0===r.length)r.push(Ms(e,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[e]}'`);this.handler=r[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=function(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,l=L(o);let u;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Ga[n.dtype],c=e.slice(a,a+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Za()),u=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}a+=l*o}else if("string"===i){const t=L(s.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));u.push(n),a+=t}}else{const r=Ga[i],s=e.slice(a,a+l*r);if("float32"===i)u=new Float32Array(s);else if("int32"===i)u=new Int32Array(s);else if("bool"===i)u=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(s);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const a=Va(e,o,"float32"),i=Va(r,o,"float32");n[t]=Wa(a,i),a.dispose(),i.dispose()}}a+=l*r}"complex64"!==i&&(n[t]=Va(u,o,i))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Tv(_x.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=_x.Instance.transformGraph(e.modelInitializer);this.initializer=new Tv(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=es(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof ha||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function $v(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Ev(e,t);return await n.load(),n}function Rv(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(Dv(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=Rv(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function Av(e,t=Fv){return _v(e,t)}function _v(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(Dv(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=_v(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function Fv(e){return null===e?null:Dv(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Dv(e){let t=!1;if(fe().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(977);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ha)&&!(e instanceof Promise)&&!t)}function Ov(e){return Rv(e,Mv)}function Mv(e){return e instanceof ha?{value:e.clone(),recurse:!1}:Dv(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Lv{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class zv extends Lv{constructor(){super(zv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}zv.INITIAL_CAPACITY=32;class Pv{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Kv(this,e)}filter(e){return new jv(this,e)}map(e){return new qv(this,e)}mapAsync(e){return new Xv(this,e)}serialMapAsync(e){return new Xv(this,e).serial()}flatmap(e){return new Qv(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Hv(this,e,t)}columnMajorBatch(e,t=!0,n=Fv){return this.rowMajorBatch(e,t).map((e=>Av(e,n)))}concatenate(e,t){return new Zv(new Bv([this,e]),t)}take(e){return e<0||null==e?this:new Gv(this,e)}skip(e){return e<0||null==e?this:new Vv(this,e)}prefetch(e){return new tw(this,e)}shuffle(e,t){return new nw(this,e,t)}serial(){return new Uv(this)}}class Bv extends Pv{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Ov(e),done:!1}}}class Wv extends Pv{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Uv extends Pv{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Vv extends Pv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;hi(e.value)}return this.upstream.next()}}class Gv extends Pv{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Hv extends Pv{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class jv extends Pv{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;hi(e.value)}}}class qv extends Pv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ia(e.value),n=this.transform(e.value),r=Ia(n);for(const e of t)Na(e,r)||e.dispose();return{value:n,done:!1}}}class Kv extends Pv{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Xv extends Pv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ia(e.value),n=await this.transform(e.value),r=Ia(n);for(const e of t)Na(e,r)||e.dispose();return{value:n,done:!1}}}class Yv extends Pv{constructor(){super(),this.outputQueue=new zv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Qv extends Yv{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Ia(e.value),n=this.transform(e.value),r=Ia(n);this.outputQueue.pushAll(n);for(const e of t)Na(e,r)||e.dispose();return!0}}class Zv extends Pv{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var Jv,ew;(ew=Jv||(Jv={}))[ew.FAIL=0]="FAIL",ew[ew.SHORTEST=1]="SHORTEST",ew[ew.LONGEST=2]="LONGEST";class tw extends Pv{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Lv(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class nw extends tw{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Yo.alea(n||Yr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class rw{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return F(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),aw((async()=>(await n.iterator()).columnMajorBatch(e,t,sw)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,aw((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,aw((async()=>(await t.iterator()).filter((t=>ci((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return aw((async()=>(await t.iterator()).map((t=>ci((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return aw((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return aw((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,aw((async()=>{return n=(a=async()=>({value:await t.iterator(),done:!1}),new Wv(a)).take(e),new Zv(n,r);var n,r,a}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,aw((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Yo.alea(t||Yr().toString());return aw((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,aw((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function aw(e,t=null){return new class extends rw{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function sw(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof ha||X(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ha?gl(e):Va(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function iw(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&F("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}rw.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const ow=eh;class lw extends C{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new T(this,li())}nextDataId(){return lw.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,fe().get("IS_NODE")&&Ir("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Q(n[0])){const a=n.map((e=>Qr(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?wc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Zr(e)));return Ss(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ss(e.shape,e.dtype,t)}makeOutput(e,t,n){return li().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Yr();return e(),{kernelMs:Yr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){iw([e],"where");const t=this.readSync(e.dataId);return ow(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function uw(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(iw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(i.dataId).values,u=L(i.shape),c=n||i.dtype,h=q(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],a);return o.makeTensorInfo(i.shape,c,h)}}function cw(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(iw(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,a);return o.makeTensorInfo(i.shape,u,c)}}lw.nextDataId=0,di("cpu",(()=>new lw),1);const hw=uw(mt,(e=>e>=0?e:Math.exp(e)-1)),pw={kernelName:mt,backendName:"cpu",kernelFunc:hw};function dw(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const fw={kernelName:_t,backendName:"cpu",kernelFunc:dw};function mw(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;iw([a],"leakyRelu");const i=L(a.shape),o=n.data.get(a.dataId).values,l=j("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",l)}const gw={kernelName:zt,backendName:"cpu",kernelFunc:mw};function yw(e){return(t,n,r,a,s)=>{const i=Ps(t,n),o=i.length,l=ne(i),u=j(s,L(i)),c=t.length,h=n.length,p=ne(t),d=ne(n),f=Ls(t,i),m=Ls(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<u.length;++t){const n=ce(t,o,l),s=n.slice(-c);f.forEach((e=>s[e]=0));const i=ue(s,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=ue(g,h,d);u[t]=e(r[i],a[y])}return[u,i]}}const bw=yw(((e,t)=>e<0?t*e:e));function xw(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;iw([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,l]=bw(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}const vw={kernelName:vn,backendName:"cpu",kernelFunc:xw},ww=uw(Sn,(e=>Math.max(0,e))),kw={kernelName:Sn,backendName:"cpu",kernelFunc:ww},Nw=uw(An,(e=>Math.min(Math.max(0,e),6))),Iw={kernelName:An,backendName:"cpu",kernelFunc:Nw};function Sw(e){return(t,n,r)=>{const a=j(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const Tw=Sw((e=>1/(1+Math.exp(-e)))),Cw=uw(Vn,(e=>1/(1+Math.exp(-e)))),Ew={kernelName:Vn,backendName:"cpu",kernelFunc:Cw};function $w(e,t,n,r,a){if("linear"===n)return dw({inputs:{x:t},backend:e});if("relu"===n)return ww({inputs:{x:t},backend:e});if("elu"===n)return hw({inputs:{x:t},backend:e});if("relu6"===n)return Nw({inputs:{x:t},backend:e});if("prelu"===n)return xw({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return mw({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return Cw({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Rw(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const Aw={kernelName:Ge,backendName:"cpu",kernelFunc:Rw};function _w(e,t,n="float32"){if("complex64"===n)return Rw({inputs:{real:_w(e,t,"float32"),imag:_w(e,t,"float32")},backend:e});const r=ie(L(t),n);return e.makeTensorInfo(t,n,r)}function Fw(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Dw={kernelName:Nn,backendName:"cpu",kernelFunc:Fw};function Ow(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return dw({inputs:{x:a},backend:n});const e=_w(n,a.shape,a.dtype),t=Ow({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=Rw({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=Fw({inputs:{input:a},backend:n}),t=Ow({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!K(a.dtype,s)){const e=dw({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=Xr([0],a.dtype),[r,s]=yw(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const Mw={kernelName:We,backendName:"cpu",kernelFunc:Ow};function Lw(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;iw([s,i],e);const l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,c="string"===s.dtype?Zc(l):l,h="string"===s.dtype?Zc(u):u,p=r||s.dtype,[d,f]=t(s.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=Ow({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(a.dataId).values,c=Ow({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=Rw({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[l,u]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(u,a,l)}}}function zw(e){return(t,n,r,a,s,i)=>{const o=Ps(t,n),l=L(o),u=o.length,c=ne(o),h=j("float32",l),p=j("float32",l),d=Ls(t,o),f=Ls(n,o),m=wc(r,a),g=wc(s,i),y=t.length,b=ne(t),x=n.length,v=ne(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){const n=ce(t,u,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const a=ue(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=ue(s,x,v),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const Pw=yw(((e,t)=>e+t)),Bw=zw(((e,t,n,r)=>({real:e+n,imag:t+r}))),Ww=Lw(ke,Pw,Bw),Uw={kernelName:ke,backendName:"cpu",kernelFunc:Ww};function Vw(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=L(a.shape),o=V(s,i),l=L(o);F(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const u=n.data.get(a.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const Gw={kernelName:Tn,backendName:"cpu",kernelFunc:Vw};function Hw(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;iw([a,s],"matMul");const l=a.shape.length,u=s.shape.length,c=i?a.shape[l-2]:a.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],d=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=L(f),y=L(m),b=Ps(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,d]);F(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],v=Vw({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),w=Vw({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?v.shape[1]:v.shape[2],N=i?v.shape[2]:v.shape[1],I=o?w.shape[1]:w.shape[2],S=Math.max(g,y),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,E=ne(v.shape),$=ne(w.shape),[R,A,_]=i?[E[0],1,E[1]]:[E[0],E[1],1],[D,O,M]=o?[1,$[1],$[0]]:[$[1],1,$[0]],z=N*I,P=Ss([S,N,I],v.dtype),B=P.values,W=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<N;t+=W)for(let n=0;n<I;n+=W)for(let r=0;r<k;r+=W){const a=Math.min(t+W,N),s=Math.min(n+W,I),i=Math.min(r+W,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*R,s=Math.min(e,y-1)*M;n+=T[r+o*A+a*_]*C[a*D+t*O+s]}B[e*z+(o*I+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,P.dtype,P.values)}const jw={kernelName:Le,backendName:"cpu",kernelFunc:Hw},qw={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=Hw({inputs:{a,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=Ww({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=$w(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function Kw(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Xw={kernelName:xe,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;iw(t,"abs");let r=new Float32Array(L(t.shape));return r=Kw(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},Yw=uw(ve,(e=>Math.acos(e))),Qw={kernelName:ve,backendName:"cpu",kernelFunc:Yw},Zw=uw(we,(e=>Math.acosh(e))),Jw={kernelName:we,backendName:"cpu",kernelFunc:Zw},ek={kernelName:Ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;iw(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=Ss(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function tk(e,t,n,r,a){const s=t.length,i=L(t),o=ne(t),l=ne(a),u=j(n,L(a));for(let t=0;t<i;++t){const n=ce(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];u[ue(a,s,l)]=e[t]}return u}function nk(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;iw(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const l=tk(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(l,o,a.dtype),shape:o,dtype:a.dtype}}const rk={kernelName:dr,backendName:"cpu",kernelFunc:nk},ak={kernelName:Ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;iw(a,"all");const o=G(s,a.shape);let l=o;const u=Lo(l,a.shape.length);let c=a;null!=u&&(c=nk({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Po(l.length,a.shape.length)),Mo("all",l,c.shape.length);const[h,p]=Do(c.shape,l),d=L(p),f=ie(L(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Vw({inputs:{x:g},backend:n,attrs:{shape:Oo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},sk={kernelName:Se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;iw(a,"any");const o=G(s,a.shape);let l=o;const u=Lo(l,a.shape.length);let c=a;null!=u&&(c=nk({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Po(l.length,a.shape.length)),Mo("any",l,c.shape.length);const[h,p]=Do(c.shape,l),d=L(p),f=ie(L(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Vw({inputs:{x:g},backend:n,attrs:{shape:Oo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},ik={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;iw(a,"argMax");let i=G(s,a.shape);const o=Lo(i,a.shape.length);let l=a;const u=[];null!=o&&(l=nk({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),i=[i[0]],Mo("argMax",i,l.shape.length);const[c,h]=Do(l.shape,i),p=ie(L(c),"int32"),d=L(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const a=f[t+e];a>n&&(n=a,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},ok={kernelName:Ce,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;iw(a,"argMin");let i=G(s,a.shape);const o=Lo(i,a.shape.length);let l=a;const u=[];null!=o&&(l=nk({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),i=[i[0]],Mo("argMin",i,l.shape.length);const[c,h]=Do(l.shape,i),p=ie(L(c),"int32"),d=L(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const a=f[t+e];a<n&&(n=a,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},lk=uw(Ee,(e=>Math.asin(e))),uk={kernelName:Ee,backendName:"cpu",kernelFunc:lk},ck=uw($e,(e=>Math.asinh(e))),hk={kernelName:$e,backendName:"cpu",kernelFunc:ck},pk=uw(Re,(e=>Math.atan(e))),dk={kernelName:Re,backendName:"cpu",kernelFunc:pk},fk=yw(((e,t)=>Math.atan2(e,t))),mk=Lw(_e,fk),gk={kernelName:_e,backendName:"cpu",kernelFunc:mk},yk=uw(Ae,(e=>Math.atanh(e))),bk={kernelName:Ae,backendName:"cpu",kernelFunc:yk};function xk(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,d=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ss(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const v=y*i-p,w=Math.max(0,v),k=Math.min(a.inHeight,c+v),N=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(a.inWidth,h+i);let y=f,b=0,v=0;for(let n=w;n<k;n+=l){const a=m+n*r[1];for(let n=c;n<p;n+=u){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[N+n*x+t]="avg"===s?b/v:y}}}return m}function vk(e,t,n,r,a=!1,s=!1){const i=Ss(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Ss(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>v&&(v=u,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+l)}}i.set(w,e,n,o,t)}}return i}function wk(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,d=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ss(a.outShape,n),v=x.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],N=a.outShape[3]*a.outShape[4],I=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const S=w*i-m;let T=S;for(;T<0;)T+=u;const C=Math.min(a.inDepth,p+S),E=n+w*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(a.inHeight,d+i),w=E+n*N;for(let n=0;n<a.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(a.inWidth,f+i),g=w+n*I;let k=b,N=0,S=0;for(let n=T;n<C;n+=u){const a=x+n*r[1];for(let n=p;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<d;n+=h){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(N+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?N/S:k}}}}return x}const kk={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;iw(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;F(Fi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ni(a.shape,s,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&z(u.inShape,u.outShape))c=dw({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ne(a.shape),r=xk(e,a.shape,a.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,a.dtype,r.values)}return c}},Nk={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;iw(a,"avgPool3d");const c=Ii(a.shape,s,i,1,o,l,u),h=wk(n.data.get(a.dataId).values,a.shape,a.dtype,ne(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},Ik={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;iw([a,s],"avgPool3DGrad");const c=Ii(s.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,N=v-1-c.padInfo.front,I=k-1-c.padInfo.left,S=w-1-c.padInfo.top,T=Ss(s.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-N,i=r-S,o=a-I;let l=0;for(let n=0;n<v;n+=y){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=b){const a=(i+n)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(l+=E.get(e,r,a,s,t))}}}T.set(l*C,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},Sk={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;iw([a,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Ni(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,v=y-1-c.padInfo.top,w=Ss(i.shape,"float32"),k=1/(d*f),N=n.data.get(a.dataId).values,I=Ss(a.shape,"float32",N);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-v,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=I.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Tk={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;F(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),F(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),F(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),iw([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let v=0,w=0,k=0,N=0;for(let e=0;e<c.length;++e)m[e]=f[v++]+(c[e]-h[w++])*d[k++]/Math.sqrt(p[N++]+u),v>=g&&(v=0),w>=x&&(w=0),k>=y&&(k=0),N>=b&&(N=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};function Ck(e,t,n,r,a){const s=ei(r,t,n),i=L(n),o=ne(r);if(s){const n=ti(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const l=Ss(r,a,"string"===a?Zc(e):e),u=Ss(n,a);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===a?Jc(u.values):u.values}function Ek(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;iw(a,"slice");const[o,l]=ni(a,s,i);Us(a,o,l);const u=Ck(n.data.get(a.dataId).values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,u)}const $k={kernelName:Pn,backendName:"cpu",kernelFunc:Ek},Rk={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;iw([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),l=ac(a.shape,s,o),u=sc(l.length,s.length),c=ic(a.shape,s,o),h=oc(i,s.length),p=lc(c,i,s.length),d=Vw({inputs:{x:a},backend:n,attrs:{shape:l}}),f=nk({inputs:{x:d},backend:n,attrs:{perm:u}}),m=Vw({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Ek({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Ak(e,t,n,r,a){const s=L(r),i=ie(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function _k(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=Ss([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const Fk={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=Ak(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},Dk={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=Ps(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},Ok=Sw((e=>Math.ceil(e))),Mk=cw(Ue,Ok),Lk={kernelName:Ue,backendName:"cpu",kernelFunc:Mk},zk=uw(Ve,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Pk={kernelName:Ve,backendName:"cpu",kernelFunc:zk},Bk={kernelName:He,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(L(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function Wk(e,t,n,r){const a=q(n,L(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=L(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?Zc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}function Uk(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Vk={kernelName:Dt,backendName:"cpu",kernelFunc:Uk};function Gk(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=G(a,t[0].shape)[0];let i=ec(t.map((e=>e.shape)),s);if(0===L(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>L(e.shape)>0));if(1===o.length)return dw({inputs:{x:o[0]},backend:n});if(Ju(o.map((e=>e.shape)),s),"complex64"===o[0].dtype){const e=o.map((e=>Fw({inputs:{input:e},backend:n}))),t=o.map((e=>Uk({inputs:{input:e},backend:n}))),r=Gk({inputs:e,backend:n,attrs:{axis:s}}),a=Gk({inputs:t,backend:n,attrs:{axis:s}}),i=Rw({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map((e=>{const t=L(e.shape.slice(s));return Vw({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=ec(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=Wk(u,i,t[0].dtype,c),p=ec(o.map((e=>e.shape)),s),d=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const Hk={kernelName:je,backendName:"cpu",kernelFunc:Gk};function jk(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;iw([a,s],"conv2d");const h=Di(l),p=Si(a.shape,s.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,v=new oa(p.outShape,a.dtype),w=ne(a.shape),k=ne(s.shape),N=w[0],I=x?w[1]:w[2],S=x?w[2]:1,T=x?1:w[1],C=v.strides[0],E=x?v.strides[1]:v.strides[2],$=x?v.strides[2]:1,R=x?1:v.strides[1],A=n.data.get(a.dataId).values,_=n.data.get(s.dataId).values,F=v.values;for(let e=0;e<p.batchSize;++e){const t=e*N,n=e*C;for(let e=0;e<p.outHeight;++e){const r=n+e*E,a=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=a+e*m;if(n<0||n>=p.inHeight)continue;const s=e*k[0],i=t+n*I;for(let e=0;e<p.outWidth;++e){const t=r+e*$,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const a=i+r*S;let o=s+e*k[1];for(let e=0;e<p.inChannels;++e){const n=A[a+e*T];for(let e=0;e<p.outChannels;++e)F[t+e*R]+=n*_[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const qk={kernelName:qe,backendName:"cpu",kernelFunc:jk},Kk={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;iw([a,s],"conv2dBackpropFilter");const h=Di(l),p=Si(a.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new oa(p.filterShape,"float32"),x=p.padInfo.left,v=p.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,N=new oa(a.shape,a.dtype,w),I=new oa(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((v-e)/d)),n=Math.min(p.outHeight,(p.inHeight+v-e)/d);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-v;for(let e=a;e<s;++e){const n=r+e*f-x;l+=y?N.get(u,t,n,i)*I.get(u,c,e,o):N.get(u,i,t,n)*I.get(u,o,c,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Xk={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;iw([a,s],"conv2dBackpropInput");const h=ne(s.shape),p=ne(a.shape);let d=Di(u);const f=Si(i,s.shape,o,1,l,c,!1,d),m=new oa(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:N,filterWidth:I,inChannels:S,inHeight:T,inWidth:C,outChannels:E,outHeight:$,outWidth:R,strideHeight:A,strideWidth:_}=f;d=f.dataFormat;const F=N-1-f.padInfo.top,D=I-1-f.padInfo.left,O="channelsLast"===d,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=p[0],W=O?p[1]:p[2],U=O?p[2]:1,V=O?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<T;++n){const r=n-F,a=Math.max(0,Math.ceil(r/A)),s=Math.min($,(N+r)/A);for(let i=0;i<C;++i){const o=i-D,l=Math.max(0,Math.ceil(o/_)),u=Math.min(R,(I+o)/_);let c=0;for(let n=a;n<s;++n){const a=n*A-r;for(let r=l;r<u;++r){const s=B*e+W*n+U*r,i=x*(N-1-a)+v*(I-1-(r*_-o))+w*t;for(let e=0;e<E;++e)c+=y[s+V*e]*b[i+e]}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Yk={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r;iw([a,s],"conv3d");const u=Ti(a.shape,s.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,v=new oa(u.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,N=v.values,I=ne(a.shape),S=ne(s.shape);for(let e=0;e<u.batchSize;++e){const t=e*I[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],a=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*d;if(n<0||n>=u.inDepth)continue;const s=e*S[0],i=t+n*I[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const a=s+e*S[1],o=i+r*I[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const s=a+e*S[2],i=o+t*u.inChannels;let l=s;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)N[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Qk={kernelName:Qe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r;iw([a,s],"conv3dBackpropFilterV2");const u=ne(a.shape),c=ne(s.shape),h=Ti(a.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new oa(h.filterShape,"float32"),x=b.values,[v,w,k,N]=b.strides,I=n.data.get(s.dataId).values,[S,T,C,E]=c,$=n.data.get(a.dataId).values,[R,A,_,F]=u,D=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/p)),n=Math.min(h.outDepth,(h.inDepth+D-e)/p),r=e*v;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((M-a)/d)),i=Math.min(h.outHeight,(h.inHeight+M-a)/d),o=a*w+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((O-r)/f)),u=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*N+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*R,y=m*S;for(let m=t;m<n;++m){const t=(e+m*p-D)*A+h,n=m*T+y;for(let e=s;e<i;++e){const s=(a+e*d-M)*_+t,i=e*C+n;for(let e=l;e<u;++e){const t=e*E+i;g+=$[(r+e*f-O)*F+s+o]*I[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Zk={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r;iw([a],"conv3dBackpropInputV2");const u=ne(a.shape),c=ne(s.shape),h=Ti(l,s.shape,o,1,i),p=new oa(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(a.dataId).values,[x,v,w,k]=u,N=n.data.get(s.dataId).values,[I,S,T,C]=c,{batchSize:E,filterDepth:$,filterHeight:R,filterWidth:A,inChannels:_,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:U}=h,V=$-1-h.padInfo.front,G=R-1-h.padInfo.top,H=A-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<_;++t)for(let n=0;n<F;++n){const r=n-V,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,($+r)/B);for(let i=0;i<D;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(R+o)/W);for(let c=0;c<O;++c){const h=c-H,p=Math.max(0,Math.ceil(h/U)),E=Math.min(P,(A+h)/U);let _=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=l;r<u;++r){const s=r*W-o;for(let i=p;i<E;++i){const o=x*e+v*n+w*r+k*i,l=I*($-1-a)+S*(R-1-s)+T*(A-1-(i*U-h))+C*t;for(let e=0;e<M;++e)_+=b[o+e]*N[l+e]}}}d[f*e+m*n+g*i+y*c+t]=_}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Jk=uw(Je,(e=>Math.cos(e))),eN={kernelName:Je,backendName:"cpu",kernelFunc:Jk},tN=uw(et,(e=>Math.cosh(e))),nN={kernelName:et,backendName:"cpu",kernelFunc:tN},rN={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,p,d]=a.shape,f=s.shape[0],[m,g]=o,y=Ss([f,m,g,d],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(a.dataId).values,w=ne(a.shape),k=ne(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}else if("bilinear"===l){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(p-1)+l*f:.5*(r+s)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let s=r+h*w[2]+n*w[1]+i*w[0];const u=v[s];s=r+m*w[2]+n*w[1]+i*w[0];const c=v[s];s=r+h*w[2]+a*w[1]+i*w[0];const p=v[s];s=r+m*w[2]+a*w[1]+i*w[0];const d=u+(c-u)*b,f=p+(v[s]-p)*b;s=r+l*k[2]+t*k[1]+e*k[0],y.values[s]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(p-1)+n*f:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}const o=Math.round(a),l=Math.round(c);for(let r=0;r<d;r++){const a=r+o*w[2]+l*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=v[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},aN={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;iw(a,"cumprod");const l=Lo([s],a.shape.length);let u=a;null!=l&&(u=nk({inputs:{x:a},backend:n,attrs:{perm:l}}));const c=Po(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=va(u.dtype,"int32"),p=se(L(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?1:d[n];else{const r=m(e,t-1);p[n]=i?d[r]*p[r]:d[n]*p[r]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=nk({inputs:{x:g},backend:n,attrs:{perm:zo(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},sN={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;iw(a,"cumsum");const l=Lo([s],a.shape.length);let u=a;null!=l&&(u=nk({inputs:{x:a},backend:n,attrs:{perm:l}}));const c=Po(1,a.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=va(u.dtype,"int32"),p=ie(L(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const r=m(e,t-1);p[n]=i?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=nk({inputs:{x:g},backend:n,attrs:{perm:zo(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},iN={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=Ak(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=_k(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},oN={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;F("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=a.shape[0],l=a.shape[1],u=a.shape[2],c=a.shape[3],h=l*s,p=u*s,d=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){const a=Math.floor(t/s),i=(r*s+t%s)*d;for(let t=0;t<d;++t){const r=t+i+c*(a+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,d],a.dtype,m)}};function lN(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;iw([a,s],"depthwiseConv2DNative");const c=ne(a.shape),h=ne(s.shape);let p=l;null==p&&(p=[1,1]),F(Fi(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=Si(a.shape,s.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,v=b.top,w=d.outChannels/d.inChannels,k=new oa(d.outShape,a.dtype),N=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,S=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*k.strides[1],a=e*d.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=d.inHeight)continue;const s=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const a=s+e*h[1],o=i+r*d.inChannels;let l=t,u=a;for(let e=0;e<d.inChannels;++e){const t=N[o+e];for(let e=0;e<w;++e)S[l+e]+=t*I[u+e];l+=w,u+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const uN={kernelName:it,backendName:"cpu",kernelFunc:lN},cN={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;iw([a,s],"depthwiseConv2dNativeBackpropFilter");const h=Si(a.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new oa(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(a.dataId).values,w=new oa(a.shape,a.dtype,v),k=n.data.get(s.dataId).values,N=new oa(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/d)),s=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=a;e<s;++e){const n=r+e*d-y;u+=w.get(l,t,n,o)*N.get(l,c,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},hN={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;iw([a,s],"depthwiseConv2DNativeBackpropInput");const h=ne(a.shape),p=ne(s.shape),d=Si(c,s.shape,i,o,l,u,!0),f=new oa(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[v,w,k]=h,N=n.data.get(s.dataId).values,[I,S,T]=p,{batchSize:C,filterHeight:E,filterWidth:$,inChannels:R,inHeight:A,inWidth:_,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=d,z=E-1-d.padInfo.top,P=$-1-d.padInfo.left,B=F/R;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const r=n-z,a=Math.max(0,Math.ceil(r/M)),s=Math.min(D,(E+r)/M);for(let i=0;i<_;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(O,($+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*M-r;for(let r=l;r<u;++r){const s=v*e+w*n+k*r,i=I*(E-1-a)+S*($-1-(r*L-o))+T*t;for(let e=0;e<B;++e)c+=x[s+(t*B+e)]*N[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},pN={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=L(r.shape),s=n.data.get(r.dataId).values,i=Ss([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},dN={kernelName:ct,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(a.dataId).values,p=a.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:S,outShape:T}=ki(r.shape,a.shape,s,i,"NHWC",o),C=L(T),E=T.length,$=q(r.dtype,C);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let s=0;s<b;++s){const i=s*w-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*I;if(s>=0&&s<f)for(let n=0;n<N;++n){const d=i+n*S;if(d>=0&&d<m){const i=ue([e,s,d,o],c,ne(r.shape)),f=ue([t,n,o],p,ne(a.shape)),m=u[i]+h[f];m>l&&(l=m)}}}$[ue([e,t,s,o],E,ne(T))]=l}}}return{dataId:l.write(Xr($,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},fN={kernelName:pt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=ae(r.shape,u.data.get(r.dataId).values),h=ae(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:S}=ki(r.shape,a.shape,i,o,"NHWC",l);F(s.rank===S.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const T=ae(S,u.data.get(s.dataId).values),C=oe(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<w;++t){const r=n+t*N;if(r>=0&&r<d)for(let n=0;n<k;++n){const u=a+n*I;if(u>=0&&u<f){const a=c[e][r][u][s]+h[t][n][s];a>i&&(i=a,o=t,l=n)}}}C[o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(Xr(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},mN={kernelName:ht,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=ae(r.shape,u.data.get(r.dataId).values),h=ae(a.shape,u.data.get(a.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:S}=ki(r.shape,a.shape,i,o,"NHWC",l);F(s.rank===S.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const T=ae(S,u.data.get(s.dataId).values),C=oe(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*v-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*N;if(r>=0&&r<d)for(let n=0;n<k;++n){const u=a+n*I;if(u>=0&&u<f){const a=c[e][r][u][s]+h[t][n][s];a>i&&(i=a,o=r,l=u)}}}C[e][o][l][s]+=T[e][t][r][s]}}}return{dataId:u.write(Xr(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},gN=yw(((e,t)=>e*t)),yN=zw(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),bN=Lw(un,gN,yN),xN={kernelName:un,backendName:"cpu",kernelFunc:bN};function vN(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;iw(a,"sum"),o="bool"===a.dtype?Ow({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):dw({inputs:{x:a},backend:n});const l=o.shape.length,u=G(s,o.shape),c=Lo(u,l);let h=u,p=o;null!=c&&(p=nk({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Po(h.length,l)),Mo("sum",h,p.shape.length);const[d,f]=Do(p.shape,h);let m=_w(n,d,va(p.dtype,"int32"));const g=L(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=Vw({inputs:{x:m},backend:n,attrs:{shape:Oo(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const wN={kernelName:jn,backendName:"cpu",kernelFunc:vN},kN={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Rc(a,s.length);_c(i.length,l,s);const{path:u,steps:c}=Fc(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Ac(d,l[t]);let a;Dc(e)?a=s[t]:(a=nk({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);z(a.shape,i)||(a=Vw({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=bN({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=vN({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},NN={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;iw([r,a],"eluGrad");const s=new Float32Array(L(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},IN=yw(((e,t)=>e===t?1:0)),SN=Lw(bt,IN,null,"bool"),TN={kernelName:bt,backendName:"cpu",kernelFunc:SN},CN=mc,EN=gc,$N=yc,RN=bc,AN=xc,_N=vc,FN=uw(yt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+CN*n);return t*(1-((((_N*r+AN)*r+RN)*r+$N)*r+EN)*r*Math.exp(-n*n))})),DN={kernelName:yt,backendName:"cpu",kernelFunc:FN},ON=Sw((e=>Math.exp(e))),MN=cw(xt,ON,"float32"),LN={kernelName:xt,backendName:"cpu",kernelFunc:MN};function zN(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(F(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),Vw({inputs:{x:a},backend:n,attrs:{shape:o}})}const PN={kernelName:vt,backendName:"cpu",kernelFunc:zN},BN=Sw((e=>Math.expm1(e))),WN=cw(wt,BN),UN={kernelName:wt,backendName:"cpu",kernelFunc:WN},VN=yw(((e,t)=>e/t)),GN=Lw(dt,VN),HN={kernelName:dt,backendName:"cpu",kernelFunc:GN},jN=yw(((e,t)=>e-t)),qN=zw(((e,t,n,r)=>({real:e-n,imag:t-r}))),KN=Lw(or,jN,qN),XN={kernelName:or,backendName:"cpu",kernelFunc:KN};function YN(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],c=L(u),h=j("float32",c),p=j("float32",c);for(let e=0;e<a;e++){const r=Ek({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=Ek({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=Rw({inputs:{real:r,imag:a},backend:n}),{real:u,imag:c}=QN(i,t,n),d=wc(u,c);for(let t=0;t<s;t++){const n=Sc(d,t);h[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=Rw({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function QN(e,t,n){const r=L(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=ZN(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",Kr(r,"float32")),i=dw({inputs:{x:s},backend:n}),l=HN.kernelFunc({inputs:{a:e,b:s},backend:n}),u=HN.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=Ec(a*r,t,n),l=Sc(e,r);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),Tc(r,s,i,a)}return r}(wc(s,i),r,t);return kc(e)}var o}function ZN(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=wc(e,t),i=n/2,o=Nc(s),l=o.real,u=o.imag,c=[l.length],h=a.makeTensorInfo(c,"float32",l),p=a.makeTensorInfo(c,"float32",u),d=Rw({inputs:{real:h,imag:p},backend:a}),f=Ic(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),v=Rw({inputs:{real:b,imag:x},backend:a}),w=ZN(l,u,i,r,a),k=w.real,N=w.imag,I=[k.length],S=a.makeTensorInfo(I,"float32",k),T=a.makeTensorInfo(I,"float32",N),C=Rw({inputs:{real:S,imag:T},backend:a}),E=ZN(m,g,i,r,a),$=E.real,R=E.imag,A=[$.length],_=a.makeTensorInfo(A,"float32",$),F=a.makeTensorInfo(A,"float32",R),D=Rw({inputs:{real:_,imag:F},backend:a}),O=Cc(n,r),M=[O.real.length],L=a.makeTensorInfo(M,"float32",O.real),z=a.makeTensorInfo(M,"float32",O.imag),P=Rw({inputs:{real:L,imag:z},backend:a}),B=bN({inputs:{a:P,b:D},backend:a}),W=Ww({inputs:{a:C,b:B},backend:a}),U=KN({inputs:{a:C,b:B},backend:a}),V=Fw({inputs:{input:W},backend:a}),G=Fw({inputs:{input:U},backend:a}),H=Uk({inputs:{input:W},backend:a}),j=Uk({inputs:{input:U},backend:a}),q=Gk({inputs:[V,G],backend:a,attrs:{axis:0}}),K=Gk({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const JN={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=L(r.shape),s=r.shape[r.shape.length-1],i=Vw({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=YN(i,!1,n),l=Vw({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function eI(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||J(a),o=q(i,L(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const tI={kernelName:Nt,backendName:"cpu",kernelFunc:eI},nI={kernelName:It,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=j(r.dtype,L(r.shape)),[i,o,l,u]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let a=0;a<u;a++){const i=Math.round(l-e-1),o=t+n+r+a;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+a]),s[o]=h}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},rI=Sw((e=>Math.floor(e))),aI=cw(St,rI),sI={kernelName:St,backendName:"cpu",kernelFunc:aI},iI=yw(((e,t)=>Math.floor(e/t))),oI=Lw(Tt,iI,null,"int32"),lI={kernelName:Tt,backendName:"cpu",kernelFunc:oI},uI={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=jk({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=Vw({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Ww({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Ww({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=$w(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},cI={kernelName:Nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=lN({inputs:{x:a,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=Ww({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=$w(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function hI(e,t,n,r,a,s,i,o,l){const u=Ss([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=l/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return u}const pI={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=L(r.shape),i=a.shape,o=i[i.length-1],[l,u,c,h]=uc(r,a);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const p=hI(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,s);return n.makeTensorInfo(l,r.dtype,p.values)}};function dI(e,t,n){const r=Ss(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const l=e.locToIndex(a);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const fI={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;iw([a,s],"gatherV2");const l=G(i,a.shape)[0],u=n.data.get(s.dataId).values,c=a.shape[l];for(let e=0;e<u.length;++e){const t=u[e];F(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=L(s.shape),d=Qc(a,s,l,h),f=Vw({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=Vw({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=dI(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},mI=yw(((e,t)=>e>t?1:0)),gI=Lw(Rt,mI,null,"bool"),yI={kernelName:Rt,backendName:"cpu",kernelFunc:gI},bI=yw(((e,t)=>e>=t?1:0)),xI=Lw(At,bI,null,"bool"),vI={kernelName:At,backendName:"cpu",kernelFunc:xI},wI={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=L(r.shape),s=r.shape[r.shape.length-1],i=Vw({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=YN(i,!0,n),l=Vw({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},kI=uw(Ot,(e=>Number.isFinite(e)?1:0),"bool"),NI={kernelName:Ot,backendName:"cpu",kernelFunc:kI},II=uw(Mt,(e=>Math.abs(e)===1/0?1:0),"bool"),SI={kernelName:Mt,backendName:"cpu",kernelFunc:II},TI=uw(Lt,(e=>Number.isNaN(e)?1:0),"bool"),CI={kernelName:Lt,backendName:"cpu",kernelFunc:TI},EI=yw(((e,t)=>e<t?1:0)),$I=Lw(Pt,EI,null,"bool"),RI={kernelName:Pt,backendName:"cpu",kernelFunc:$I},AI=yw(((e,t)=>e<=t?1:0)),_I=Lw(Bt,AI,null,"bool"),FI={kernelName:Bt,backendName:"cpu",kernelFunc:_I};function DI(e,t,n){const r=(t-e)/(n-1),a=ie(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}const OI={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=DI(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},MI=Sw((e=>Math.log(e))),LI=cw(Ut,MI),zI={kernelName:Ut,backendName:"cpu",kernelFunc:LI},PI=uw(Vt,(e=>Math.log1p(e))),BI={kernelName:Vt,backendName:"cpu",kernelFunc:PI},WI=yw(((e,t)=>e&&t)),UI=Lw(Gt,WI,null,"bool"),VI={kernelName:Gt,backendName:"cpu",kernelFunc:UI},GI=uw(Ht,(e=>e?0:1),"bool"),HI={kernelName:Ht,backendName:"cpu",kernelFunc:GI},jI=yw(((e,t)=>e||t)),qI=Lw(jt,jI,null,"bool"),KI={kernelName:jt,backendName:"cpu",kernelFunc:qI},XI={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;iw(a,"LRN");const u=a.shape[3],c=u-1,h=n.data.get(a.dataId).values,p=L(a.shape),d=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);d[e]=n}return n.makeTensorInfo(a.shape,a.dtype,d)}},YI={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;iw(i,"LRNGrad");const h=L(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function QI(e,t,n,r){const a=j(r,L(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}function ZI(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let l=a.shape;const u=l.length,c=G(s,l);let h=c;const p=Lo(h,u);let d=o.data.get(a.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];d=tk(d,l,a.dtype,p,e),h=Po(h.length,u),l=e}iw(a,"max"),Mo("max",h,u);const[f,m]=Do(l,h),g=QI(d,L(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=Oo(f,c)),{dataId:y,shape:b,dtype:a.dtype}}const JI={kernelName:Xt,backendName:"cpu",kernelFunc:ZI},eS=yw(((e,t)=>Math.max(e,t))),tS=Lw(Yt,eS),nS={kernelName:Yt,backendName:"cpu",kernelFunc:tS},rS={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;iw(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;F(Fi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ni(a.shape,s,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&z(u.inShape,u.outShape))c=dw({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=ne(a.shape),r=xk(e,a.shape,a.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,a.dtype,r.values)}return c}},aS={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;iw(a,"maxPool3d");const c=Ii(a.shape,s,i,1,o,l,u),h=wk(n.data.get(a.dataId).values,a.shape,a.dtype,ne(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},sS={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;iw([a,s],"maxPool3DGrad");const c=Ii(s.shape,i,o,1,l,u),h=function(e,t){const n=Ss(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*a-d;let p=u;for(;p<0;)p+=o;const w=Math.min(t.inHeight,c+u);for(let a=0;a<t.outWidth;++a){const d=a*s-f;let k=d;for(;k<0;)k+=l;const N=Math.min(t.inWidth,h+d);let I=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=p;r<w;r+=o){const a=r-u;for(let s=k;s<N;s+=l){const i=s-d,o=e.get(m,t,r,s,g);o>=I&&(I=o,S=n*c*h+a*c+i)}}}n.set(S,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=b-1-c.padInfo.front,k=v-1-c.padInfo.left,N=x-1-c.padInfo.top,I=Ss(s.shape,"float32"),S=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-w,i=r-N,o=a-k;let l=0;for(let n=0;n<b;n+=m){const r=(s+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*v-1-h.get(e,r,s,u,t)===n*x*v+a*v+i?1:0;0!==p&&(l+=S.get(e,r,s,u,t)*p)}}}I.set(l,e,n,r,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},iS={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;iw([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=Ni(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=Ss(p.outShape,o.dtype,vk(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=v-1-p.padInfo.left,k=x-1-p.padInfo.top,N=Ss(o.shape,"float32"),I=n.data.get(a.dataId).values,S=Ss(a.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-k,s=r-w;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<v;a+=b){const o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,r,o,t)===n*v+a?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}N.set(i,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},oS={kernelName:tn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;iw(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Ni(r.shape,a,s,[1,1],i),[h,p]=function(e,t,n,r,a){const s=xk(e,0,n,ne(t),a,"max"),i=vk(e,t,n,a,!0,r);return[s.values,i.values]}(u,r.shape,r.dtype,o,c),d=l.write(h,c.outShape,r.dtype),f=l.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},lS={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=G(s,a.shape),l=L(Do(a.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=Ow({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=GN({inputs:{a:h,b:c},backend:n});u.push(p);const d=vN({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},uS={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;iw(a,"min");const o=G(s,a.shape);let l=o;const u=Lo(l,a.shape.length);let c=a;null!=u&&(c=nk({inputs:{x:a},backend:n,attrs:{perm:u}}),l=Po(l.length,a.shape.length)),Mo("min",l,c.shape.length);const[h,p]=Do(c.shape,l),d=L(p),f=ie(L(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=Vw({inputs:{x:g},backend:n,attrs:{shape:Oo(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},cS=yw(((e,t)=>Math.min(e,t))),hS=Lw(an,cS),pS={kernelName:an,backendName:"cpu",kernelFunc:hS},dS={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;iw(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,d=ne(a.shape),f=L(o),m=o.length,g=ne(o),y=j(a.dtype,f);for(let e=0;e<f;e++){let t=ce(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=ue(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},fS=yw(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),mS=Lw(on,fS),gS={kernelName:on,backendName:"cpu",kernelFunc:mS};function yS(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=G([o],a.shape),u=ZI({inputs:{x:a},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Oo(u.shape,l),h=Vw({inputs:{x:u},backend:n,attrs:{shape:c}}),p=KN({inputs:{a,b:h},backend:n}),d=MN({inputs:{x:p},backend:n}),f=vN({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=Vw({inputs:{x:f},backend:n,attrs:{shape:c}}),g=GN({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const bS={kernelName:Xn,backendName:"cpu",kernelFunc:yS},xS={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;iw(a,"multinomial");const l=o?a:yS({inputs:{logits:a},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,s],d=ie(L(p),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=Yo.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();d[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function vS(e,t,n){const r=Kr(-1,n);return gN([],t,r,e,n)}const wS={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;iw(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=vS(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},kS=nu,NS={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;iw(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=kS(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},IS=ru,SS={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;iw(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=IS(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},TS=au,CS={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;iw(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=TS(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},ES=yw(((e,t)=>e!==t?1:0)),$S=Lw(hn,ES,null,"bool"),RS={kernelName:hn,backendName:"cpu",kernelFunc:$S},AS={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;iw(a,"oneHot");const l=L(a.shape),u=new Float32Array(l*s);u.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<s&&(u[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",u)}};function _S(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Fw({inputs:{input:r},backend:n}),t=_S({inputs:{x:e},backend:n}),a=Uk({inputs:{input:r},backend:n}),s=_S({inputs:{x:a},backend:n}),i=Rw({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return eI({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const FS={kernelName:yr,backendName:"cpu",kernelFunc:_S},DS={kernelName:mn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Fw({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Uk({inputs:{input:a},backend:r}),i=_S({inputs:{x:s},backend:r}),o=Rw({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return eI({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function OS(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return zN({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{D(s,e.shape,"All tensors passed to stack must have matching shapes"),F(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Gk({inputs:t.map((e=>{const t=zN({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const MS={kernelName:yn,backendName:"cpu",kernelFunc:OS},LS={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;iw(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(a.dataId).values,c=L(a.shape),h=a.shape.length,p=ne(a.shape),d=L(o),f=o.length,m=ne(o),g=j(a.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[ue(ce(e,h,p).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},zS=yw(((e,t)=>Math.pow(e,t))),PS=Lw(xn,zS),BS={kernelName:xn,backendName:"cpu",kernelFunc:PS};function WS(e,t,n,r){const[a,s]=Do(e,r),i=va(t,"int32"),o=ie(L(a),i),l=L(s);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}const US={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;iw(a,"prod");const o=a.shape.length,l=G(s,a.shape),u=Lo(l,o);let c=l,h=a;const p=[];null!=u&&(h=nk({inputs:{x:a},backend:n,attrs:{perm:u}}),p.push(h),c=Po(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=WS(h.shape,h.dtype,d,c);let y=m;return i&&(y=Oo(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function VS(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ie(0,r);const a=ie(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const GS={kernelName:kn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=VS(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},HS=uw(In,(e=>1/e)),jS={kernelName:In,backendName:"cpu",kernelFunc:HS},qS={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;iw(a,"resizeBilinear");const l=ne(a.shape),[u,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(L([h,u,c,f])),y=[s&&u>1?p-1:p,s&&c>1?d-1:d],b=[s&&u>1?u-1:u,s&&c>1?c-1:c];let x=0;const v=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?v*(t+.5)-.5:v*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+s*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],p=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},KS={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;iw([s,a],"resizeBilinearGrad");const o=ne(a.shape),[l,u,c,h]=a.shape,[,p,d]=s.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),u-1),s=t+r*o[1],i=t+a*o[1],l=n-r,p=1-l;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,u=1-a,d=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],w=p*u,k=p*a,N=l*u,I=l*a;for(let e=0;e<h;e++){const t=x[v++];f[d+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*N,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},XS={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;iw(a,"resizeNearestNeighbor");const l=ne(a.shape),[u,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*u*c*f),y=[s&&u>1?p-1:p,s&&c>1?d-1:d],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],x=y[0]/b[0],v=y[1]/b[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(d-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],a.dtype,g)}},YS={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;iw([s,a],"resizeNearestNeighborGrad");const o=ne(a.shape),l=ne(s.shape),[u,c,h,p]=a.shape,[,d,f]=s.shape,m=new Float32Array(u*c*h*p),g=n.data.get(s.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],v=y[1]/b[1],w=1/x,k=1/v,N=2*Math.ceil(w)+2,I=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-N/2);for(let r=0;r<h;r++){const s=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-I/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<N;s++){const u=s+a;if(u<0||u>=d)continue;const p=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const a=p+t*l[2],s=t*v;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},QS={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;iw(a,"reverse");const i=a.shape.length,o=G(s,a.shape);if(0===i)return dw({inputs:{x:a},backend:n});const l=new oa(a.shape,a.dtype),u=n.bufferSync(a);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},ZS={kernelName:vr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=j(r.dtype,L(r.shape)),[u,c,h,p]=r.shape,[d,f]=rc(i,c,h),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const o=[u,e,r,i],b=o[2],x=o[1];let v=(b-d)*g-(x-f)*m,w=(b-d)*m+(x-f)*g;v=Math.round(v+d),w=Math.round(w+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[t+w*(h*p)+v*p+i]),l[t+n+a+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},JS=uw(Fn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),eT={kernelName:Fn,backendName:"cpu",kernelFunc:JS},tT=Sw((e=>1/Math.sqrt(e))),nT=cw(Dn,tT),rT={kernelName:Dn,backendName:"cpu",kernelFunc:nT};function aT(e,t,n,r,a,s,i,o,l,u){const c=[r/a,a],h=e.values,p=t.values;if(0===r)return Ss(n,t.dtype);const d=Ss(c,t.dtype);"string"==typeof l||"number"==typeof l?d.values.fill(l):"boolean"==typeof l&&d.values.fill(+l);for(let e=0;e<s;e++){const s=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)u?d.values[l*a+n]+=p[e*a+n]:d.values[l*a+n]=0===t.rank?p[0]:p[e*a+n]}return d}const sT={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=pc(0,a,i),p=aT(n.bufferSync(a),n.bufferSync(s),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function iT(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function oT(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}const lT={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=function(e,t,n,r,a,s){const i=q("int32",n*a);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?iT(n,t[e+l]):oT(n,t[e+l])}return i}(n.data.get(a.dataId).values,n.data.get(s.dataId).values,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}},uT={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;iw([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=va(a.dtype,s.dtype),h=ie(L(a.shape),c);let p=0;const d=0===i||i>1||1===a.shape.length?1:L(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(a.shape,c,h)}},cT=dc,hT=fc,pT=uw(zn,(e=>e>=0?hT*e:cT*(Math.exp(e)-1))),dT={kernelName:zn,backendName:"cpu",kernelFunc:pT},fT=uw(Un,(e=>e<0?-1:e>0?1:0)),mT={kernelName:Un,backendName:"cpu",kernelFunc:fT},gT=uw(Bn,(e=>Math.sin(e))),yT={kernelName:Bn,backendName:"cpu",kernelFunc:gT},bT=uw(Wn,(e=>Math.sinh(e))),xT={kernelName:Wn,backendName:"cpu",kernelFunc:bT},vT=Math.log(1.1920928955078125e-7)+2,wT=uw(Gn,(e=>{const t=e>-vT,n=e<vT,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),kT={kernelName:Gn,backendName:"cpu",kernelFunc:wT},NT={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;iw([a],"spaceToBatchND");const o=L(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const u=LS.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),c=ac(u.shape,s,o,!1),h=sc(c.length,s.length,!1),p=ic(u.shape,s,o,!1),d=Vw({inputs:{x:u},backend:n,attrs:{shape:c}}),f=nk({inputs:{x:d},backend:n,attrs:{perm:h}}),m=Vw({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function IT(e,t,n,r,a,s,i){const o=t[0],l=s[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Lc(o));return[q(n,0),[0,h],q(a,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(zc(t,n));if(n>=l)throw new Error(Pc(t,n,l));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],s=q(n,t*h),p=q(a,t),d=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=d[n],i=(0===n?0:f[n-1])+a;d[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];p[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===d[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}return[s,[t,h],p,u,c]}}const ST={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=IT(o,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function TT(e,t,n,r,a){const s=L(r),i=t[0],o=a.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(Bc(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(Wc(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/u);if(u*e!==s)throw new Error(Vc(r,l));l[c]=e}if(L(l)!==s)throw new Error(Gc(r,l));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*l[e+1]}const f=q(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[i,o],l]}const CT={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,h]=TT(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function ET(e,t,n,r,a,s=!1,i=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=q(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=a[d];for(;;){let t=0;if(f<o){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(qc(g,c));g>m&&p.fill(i,m*u,g*u);for(let t=d;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(Kc(t,r[t],l[0]));for(let t=0;t<u;t++)p[g*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)p[g*u+e]/=f-d;if(d=f,++f,m=g+1,g=t,f>o)break}return m<c&&p.fill(i,m*u,c*u),[p,h]}const $T={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=ET(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},RT={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,[u,c]=ET(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},AT={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=pc(0,a,o),d=!1,f=n.bufferSync(a);let m;switch(s.dtype){case"bool":m=aT(f,n.bufferSync(s),o,p,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),d);break;case"float32":case"int32":m=aT(f,n.bufferSync(s),o,p,c,u,l,h,n.data.get(i.dataId).values[0],d);break;case"string":m=aT(f,n.bufferSync(s),o,p,c,u,l,h,Zr(n.data.get(i.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},_T={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=G(i,a.shape)[0],l=Mc(a,s,o),u=new Array(a.shape.length).fill(0),c=a.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=Ek({inputs:{x:a},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},FT=Sw((e=>Math.sqrt(e))),DT=uw(Hn,(e=>Math.sqrt(e))),OT={kernelName:Hn,backendName:"cpu",kernelFunc:DT},MT={kernelName:nr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;iw(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},LT=yw(((e,t)=>{const n=e-t;return n*n})),zT=Lw(tr,LT),PT={kernelName:tr,backendName:"cpu",kernelFunc:zT},BT=uw(br,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),WT={kernelName:br,backendName:"cpu",kernelFunc:BT};function UT(e,t,n,r){const a=Ss(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}const VT={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;iw(a,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=ri(a.shape,s,i,o,l,u,c,h,p);let w;if(m)w=Vw({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){F(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=Gs(b,x,v),t=Ek({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=Vw({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=UT(d,n.bufferSync(a),v,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class GT{constructor(e,t,n,r,a,s){this.separator=Qr(e),this.nGramWidths=t,this.leftPad=Qr(n),this.rightPad=Qr(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(a-(i+1))),c=s-(l+u),h=t+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=q("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,l,s),a+=l})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,l=1;this.createNGrams(e,r,i,a,l,o)}}return[i,s]}}function HT(e,t,n,r,a,s,i,o){return new GT(n,r,a,s,i,o).compute(e,t)}const jT={kernelName:ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=HT(p,d,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function qT(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function KT(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=a.length;qT(e[l],t,n,a);const u=a.length-r;o[l]=u,s+=u,i=Math.max(i,u)}const l=q("int32",2*s),u=new Array(s),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=a[h],++h;return[l,u,c]}const XT={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=KT(o,l,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function YT(e,t){const n=q("int32",e.length);for(let r=0;r<e.length;++r)n[r]=qr(e[r]).modulo(t).getLowBitsUnsigned();return n}const QT={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=YT(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},ZT=uw(lr,(e=>Math.tan(e))),JT={kernelName:lr,backendName:"cpu",kernelFunc:ZT},eC=uw(ur,(e=>Math.tanh(e)));function tC(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Ss(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}const nC=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function rC(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);rC(e,t,Math.max(n,Math.floor(t-s*o/a+l)),Math.min(r,Math.floor(t+(a-s)*o/a+l)))}const a=e[t];let s=n,i=r;for(_(e,n,t),nC(e[r],a)>0&&_(e,n,r);s<i;){for(_(e,s,i),s++,i--;nC(e[s],a)<0;)s+=1;for(;nC(e[i],a)>0;)i-=1}0===nC(e[n],a)?_(e,n,i):(i+=1,_(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function aC(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],l=j(n,i*r),u=j("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(rC(i,r),i=i.slice(0,r)),a&&i.sort(nC);const c=t*r,h=l.subarray(c,c+r),p=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Ss(c,n,l),Ss(c,"int32",u)]}const sC={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=a.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=ne(a.shape),b=y[0],x=y[1],v=y[2],w=j(a.dtype,L(g));w.fill(l);const k=r.data.get(a.dataId).values,N=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<d;++a){let s;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,d=(t[3]*r+t[4]*n+t[5])/u,f=iC(c,p,o),m=iC(d,h,o);switch(i){case"nearest":s=lC(k,h,p,b,x,v,e,m,f,a,l);break;case"bilinear":s=uC(k,h,p,b,x,v,e,m,f,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}w[e*b+n*x+r*v+a]=s}return r.makeTensorInfo(g,a.dtype,w)}return{dataId:r.write(w,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function iC(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return R(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return R(0,n,t-1)}(e,t);case"nearest":return function(e,t){return R(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function oC(e,t,n,r,a,s,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*a+l*s+u]:c}function lC(e,t,n,r,a,s,i,o,l,u,c){return oC(e,t,n,r,a,s,i,Math.round(o),Math.round(l),u,c)}function uC(e,t,n,r,a,s,i,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*oC(e,t,n,r,a,s,i,h,p,u,c)+(l-p)*oC(e,t,n,r,a,s,i,h,f,u,c))+(o-h)*((f-l)*oC(e,t,n,r,a,s,i,d,p,u,c)+(l-p)*oC(e,t,n,r,a,s,i,d,f,u,c))}function cC(e,t,n,r){const a=G(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),l=new oa(s,r,e),u=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new oa(h,r);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(l.get(n,e,r),n,t,r)}));const d=n.slice();return d[a]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const hC={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;iw(a,"unsortedSegmentSum");const o=[],l=[],u=a.shape.length-s.shape.length;let c=s;for(let e=0;e<u;++e){const t=zN({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Kr(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=SN({inputs:{a:r,b:c},backend:n}),i=Ow({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=bN({inputs:{a:i,b:a},backend:n}),h=vN({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(s),l.push(i),l.push(u),l.push(h)}const h=OS({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},pC=[qw,Xw,Qw,Jw,Uw,ek,ak,sk,ik,ok,uk,hk,dk,gk,bk,kk,Nk,Ik,Sk,jw,Tk,Rk,Fk,Dk,Mw,Lk,Pk,Aw,Bk,Hk,qk,Kk,Xk,Yk,Qk,Zk,eN,nN,rN,aN,sN,iN,oN,uN,cN,hN,pN,dN,fN,mN,kN,pw,NN,TN,DN,LN,PN,UN,JN,tI,nI,sI,lI,uI,cI,pI,fI,yI,vI,fw,wI,Vk,NI,SI,CI,gw,RI,FI,OI,zI,BI,VI,HI,KI,XI,YI,JI,nS,rS,aS,sS,iS,oS,lS,uS,pS,dS,gS,xS,xN,wS,NS,SS,CS,RS,AS,DS,MS,LS,BS,vw,US,GS,Dw,HN,jS,kw,Iw,Gw,qS,KS,XS,YS,QS,ZS,eT,rT,sT,lT,uT,dT,Ew,mT,yT,xT,$k,bS,kT,NT,ST,CT,$T,RT,AT,_T,OT,MT,PT,WT,VT,jT,XT,QT,XN,wN,JT,{kernelName:ur,backendName:"cpu",kernelFunc:eC},{kernelName:cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;iw(a,"tile");const i=tC(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;iw(a,"topk");const o=n.data.get(a.dataId).values,[l,u]=aC(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},sC,rk,{kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;iw(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=cC(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},{kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);const c=new Array(i).fill(0),h=a.shape.slice();h[s]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[s]=e;const t=Ek({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});p[e]=Vw({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},hC,FS];for(const e of pC)Ar(e);const dC={},fC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function mC(e,t){if(!(e in dC)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete dC[e]}),!1),1===e?n.getContext("webgl",fC)||n.getContext("experimental-webgl",fC):n.getContext("webgl2",fC)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;dC[e]=n}const n=dC[e];return null==n||n.isContextLost()?(delete dC[e],mC(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),dC[e])}var gC,yC,bC;function xC(e,t){return[t,e]}function vC(e){const t=L(e);return B(Math.ceil(t/4))}function wC(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function kC(e,t){const n=e;let r,a,s,i,o,l,u,c,h,p;return 2===fe().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function NC(e,t){const n=t();return fe().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function IC(e){return!!(fe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function SC(e,t){return DC(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(gC||(gC={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(yC||(yC={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(bC||(bC={}));const TC=/ERROR: [0-9]+:([0-9]+):/g;function CC(e,t){const n=TC.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>W((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${W(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function EC(e,t){if(NC(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function $C(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(NC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),NC(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),NC(e,(()=>e.enableVertexAttribArray(o))),!0)}function RC(e,t,n,r){NC(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),NC(e,(()=>e.activeTexture(e.TEXTURE0+n))),NC(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),NC(e,(()=>e.uniform1i(n,r)))}function AC(e,t,n){NC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),NC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function _C(e,t){NC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),NC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function FC(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function DC(e,t,n){const r=NC(e,(()=>t()));if(null==r)throw new Error(n);return r}function OC(e,t=2){return L(e.slice(0,e.length-t))}function MC(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function LC(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[OC(e),...MC(e)]),t}function zC(e){return e%2==0}function PC(e,t){if(z(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(zC(n)&&zC(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&zC(e[0])&&zC(t[0])}let BC,WC;function UC(e,t){return null!=e.getExtension(t)}function VC(e){try{if(null!=mC(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function GC(e){const t=kC(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function HC(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&F("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const jC=fe();function qC(){let e,t,n,r,a,s,i,o,l,u;return 2===fe().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function KC(e,t,n="index"){const r=ne(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function XC(e,t,n="index"){const r=ne(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function YC(e){const t=ne(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}jC.registerFlag("HAS_WEBGL",(()=>jC.getNumber("WEBGL_VERSION")>0)),jC.registerFlag("WEBGL_VERSION",(()=>VC(2)?2:VC(1)?1:0)),jC.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),jC.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===jC.get("WEBGL_VERSION"))),jC.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),jC.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),jC.registerFlag("WEBGL_PACK",(()=>jC.getBool("HAS_WEBGL"))),jC.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_PACK_CLIP",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_PACK_REDUCE",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_LAZILY_UNPACK",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_CONV_IM2COL",(()=>jC.getBool("WEBGL_PACK"))),jC.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==BC){const t=mC(e);BC=t.getParameter(t.MAX_TEXTURE_SIZE)}return BC}(jC.getNumber("WEBGL_VERSION")))),jC.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==WC){const t=mC(e);WC=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,WC)}(jC.getNumber("WEBGL_VERSION")))),jC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=jC.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=mC(e);return t=UC(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:UC(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),jC.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>jC.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!_a())),jC.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=mC(e);if(1===e){if(!UC(t,"OES_texture_float"))return!1}else if(!UC(t,"EXT_color_buffer_float"))return!1;return GC(t)}(jC.getNumber("WEBGL_VERSION")))),jC.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!jC.getBool("WEBGL_FORCE_F16_TEXTURES")&&jC.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),jC.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=mC(e);if(1!==e){if(UC(t,"EXT_color_buffer_float"))return GC(t);const e="EXT_color_buffer_half_float";if(UC(t,e)){const n=t.getExtension(e);return function(e,t){const n=kC(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!UC(t,"OES_texture_float")&&!!UC(t,"WEBGL_color_buffer_float")&&GC(t)}(jC.getNumber("WEBGL_VERSION")))),jC.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=jC.getNumber("WEBGL_VERSION"))&&null!=mC(e).fenceSync;var e})),jC.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>jC.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),jC.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),jC.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>_a()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),jC.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),jC.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),jC.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),jC.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const QC="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:ZC}=r;function JC(e,t,n){const r=[];if(e.forEach((e=>{const t=L(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=uE(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?tE(e,r):eE(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=ZC(e.shapeInfo.logicalShape,t.logicalShape),l=lE(i),u=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===L(e.shapeInfo.logicalShape),m=1===L(t.logicalShape);if(1!==s||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&z(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=lE(l),c=ZC(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${a}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=qC(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${nE}\n    ${rE}\n    ${aE}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(z(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return z(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${XC(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=KC(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${XC(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=KC(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=KC(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=KC(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=sE),[h,l,c,a,u,s,n.userCode].join("\n")}function eE(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=iE(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${oE(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=iE(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&z(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=H(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${eE(cE(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${hE(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${oE(e)}\n      }\n    `;const u=s[0],c=s[1],h=iE(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=H(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${eE(cE(e,u),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${hE(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${oE(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===s&&null==d)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=iE(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=H(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${eE(cE(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${hE(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${oE(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=iE(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=H(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${eE(cE(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${hE(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${oE(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${iE(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=H(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${eE(cE(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${hE(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${oE(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${iE(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function tE(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${qC().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=qC();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=qC();if(null!=s&&z(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${tE(cE(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${hE(s,r)});\n        }\n      `}const o=qC();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=qC();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(s[i-1]/2);let p=h*Math.ceil(s[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const nE="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",rE="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",aE="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",sE="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function iE(e){return`offset${e}`}function oE(e){const t=e.name,n=L(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function lE(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function uE(e,t,n){const{newShape:r,keptDims:a}=H(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,l=!e&&s>1&&!z(t,n)&&r.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:a}}function cE(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function hE(e,t){return t.map((t=>e[t])).join(", ")}function pE(e,t,n){const r={},a={},s={},i=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===fe().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let i=0;i<t.variableNames.length;i++){const o=t.variableNames[i];r[o]=e.getUniformLocation(n,o,p),r[`offset${o}`]=e.getUniformLocation(n,`offset${o}`,p),t.enableShapeUniforms&&(a[`${o}Shape`]=e.getUniformLocation(n,`${o}Shape`,p),s[`${o}TexShape`]=e.getUniformLocation(n,`${o}TexShape`,p))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",p),u=e.getUniformLocation(n,"outShapeStrides",p),l=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{i[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:r,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:a,inTexShapesLocations:s,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function dE(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!z(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!z(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function fE(e){return fe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class mE{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=gC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=qC();this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?XC(["r","c","d"],e):KC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class gE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=gC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=qC();this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?XC(["r","c","d"],e):KC(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class yE{constructor(e){this.variableNames=["A"],this.outTexUsage=yC.DOWNLOAD;const t=qC();this.outputShape=e,this.userCode=`\n      ${QC}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class bE{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=yC.DOWNLOAD;const t=qC();this.outputShape=e,this.userCode=`\n      ${QC}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class xE{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=qC();this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YC(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class vE{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=qC();this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YC(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function wE(e,t,n,r,a,s){!function(e,t){const n=fe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return DC(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return NC(e,(()=>e.bindTexture(o,i))),NC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),NC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),NC(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),NC(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===fe().getNumber("WEBGL_VERSION")?NC(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))):NC(e,(()=>e.texStorage2D(o,1,r,t,n))),NC(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function kE(e){return e.internalFormatFloat}function NE(e){return e.internalFormatHalfFloat}function IE(e){return e.downloadTextureFormat}function SE(e){return e.internalFormatPackedFloat}function TE(e){return e.internalFormatPackedHalfFloat}class CE{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=fe().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){dC[e]=t}(t,e)):this.gl=mC(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===fe().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=SC(this.gl,e),UC(this.gl,t))this.textureHalfFloatExtension=SC(this.gl,t);else if(fe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),UC(this.gl,r))this.colorBufferHalfFloatExtension=SC(this.gl,r);else if(fe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",UC(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!UC(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=DC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return NC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),NC(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=DC(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return NC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),NC(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return DC(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=kC(this.gl,this.textureHalfFloatExtension)}get debug(){return fe().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;NC(e,(()=>e.finish())),NC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),NC(e,(()=>e.deleteFramebuffer(this.framebuffer))),NC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),NC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),NC(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=xC(t,n);return wE(e,a,s,kE(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=xC(t,n);return wE(e,a,s,NE(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=xC(t,n);return wE(e,a,s,IE(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){NC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===fe().getNumber("WEBGL_VERSION")?NC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):NC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===fe().getNumber("WEBGL_VERSION")?NC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):NC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),NC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,l;NC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(a),2===fe().getNumber("WEBGL_VERSION")?NC(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):NC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),NC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=wC(t,n);return wE(e,a,s,TE(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=wC(t,n);return wE(e,a,s,SE(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(_C(this.gl,this.framebuffer),this.outputTexture=null),NC(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=xC(t,n),i=new Uint8Array(t*n*4);return NC(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=wC(e,t);return n*r*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();NC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return NC(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),NC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),NC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(fe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return NC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=qC();return function(e,t){const n=DC(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(NC(e,(()=>e.shaderSource(n,t))),NC(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return DC(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return NC(t,(()=>t.attachShader(n,this.vertexShader))),NC(t,(()=>t.attachShader(n,e))),function(e,t){if(NC(e,(()=>e.linkProgram(t))),!fe().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&EC(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return NC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),$C(e,t,"clipSpacePos",n,3,20,0)&&$C(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&NC(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&EC(this.gl,this.program),NC(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return DC(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),NC(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),RC(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=wC(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&EC(this.gl,this.program),FC(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),NC(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),NC(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=SC(this.gl,2===fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await U((()=>this.disposed||this.isQueryAvailable(e,fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||U((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),AC(this.gl,e,this.framebuffer),this.debug&&FC(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(AC(this.gl,this.outputTexture,this.framebuffer),this.debug&&FC(this.gl)):_C(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;AC(r,e,this.framebuffer),this.debug&&FC(r),this.outputTexture=e,NC(r,(()=>r.viewport(0,0,t,n))),NC(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),NC(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:EE,bincountImpl:$E,bincountReduceImpl:RE,ceilImpl:AE,concatImpl:_E,equalImpl:FE,expImpl:DE,expm1Impl:OE,floorImpl:ME,gatherNdImpl:LE,gatherV2Impl:zE,greaterImpl:PE,greaterEqualImpl:BE,lessImpl:WE,lessEqualImpl:UE,linSpaceImpl:VE,logImpl:GE,maxImpl:HE,maximumImpl:jE,minimumImpl:qE,multiplyImpl:KE,negImpl:XE,notEqualImpl:YE,prodImpl:QE,rangeImpl:ZE,rsqrtImpl:JE,scatterImpl:e$,sigmoidImpl:t$,simpleAbsImpl:n$,sliceImpl:r$,sparseFillEmptyRowsImpl:a$,sparseReshapeImpl:s$,sparseSegmentReductionImpl:i$,sqrtImpl:o$,stridedSliceImpl:l$,stringNGramsImpl:u$,stringSplitImpl:c$,stringToHashBucketFastImpl:h$,subImpl:p$,tileImpl:d$,topKImpl:f$,transposeImpl:m$,uniqueImpl:g$}=N;function y$(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function b$(e,t){return 1===t?[e]:y$(e,t)}class x${constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=fE(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=b$("rc",this.rank),t=lE(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class v${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):KC(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":YC(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class w${constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=N$(t,n),a=I$(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=k$(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===bC.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===bC.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===bC.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===bC.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===bC.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=N$(n,r),s=I$(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=k$(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=fe().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function k$(e,t,n,r,a){const s=function(e,t){switch(e){case bC.PACKED_2X2_FLOAT32:return SE(t);case bC.PACKED_2X2_FLOAT16:return TE(t);case bC.UNPACKED_FLOAT32:return kE(t);case bC.UNPACKED_FLOAT16:return NE(t);case bC.PACKED_4X1_UNSIGNED_BYTE:return IE(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=wC(e[0],e[1]);i=t*n}else{const[t,n]=xC(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function N$(e,t){if(e===yC.UPLOAD)return bC.PACKED_2X2_FLOAT32;if(e===yC.RENDER||null==e)return function(e){return fe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?bC.PACKED_2X2_FLOAT32:bC.UNPACKED_FLOAT32:e?bC.PACKED_2X2_FLOAT16:bC.UNPACKED_FLOAT16}(t);if(e===yC.DOWNLOAD||e===yC.PIXELS)return bC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function I$(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class S${constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const T$="return abs(x);",C$="return x;";class E${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class $${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);const t=e.length,n=b$("rc",t),r=lE(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const R$=eh,A$={},_$=fe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class F$ extends C{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!fe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof CE)t=e;else{const n=mC(fe().getNumber("WEBGL_VERSION"),e);t=new CE(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=mC(fe().getNumber("WEBGL_VERSION"));t=new CE(e),this.binaryCache=((n=fe().getNumber("WEBGL_VERSION"))in A$||(A$[n]={}),A$[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new w$(this.gpgpu),this.numMBBeforeWarning=null==fe().global.screen?1024:fe().global.screen.height*fe().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new T(this,li())}nextDataId(){return F$.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((fe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||fe().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:yC.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(fe().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:yC.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new E$(i,C$):new S$(i,C$);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Yr()),c="complex64"===r?wc(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Yr()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new E$(r,C$):new S$(r,C$);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(fe().getBool("DEBUG")&&!fe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===fe().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==s&&fe().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...vC(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=wc(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=L(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;NC(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&li().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new E$(a,C$):new S$(a,C$);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=li().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Zr(e)));return Ss(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ss(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!IC(n)){if(fe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=L(t);if(fe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...vC(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=fe().getBool("WEBGL_PACK")&&!0===r,i=s?LC(t):t,o=s?new bE(i):new yE(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=M(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=M(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Yr(),endMs:null}}endTimer(e){return fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Yr(),e)}async getQueryTime(e){if(fe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=_$){return fe().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&L(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Ir("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return R$(e.shape,t)}packedUnaryOp(e,t,n){const r=new E$(e.shape,t),a=this.compileAndRun(r,[e],n);return li().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=n$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(fe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,T$,e.dtype);const t=new S$(e.shape,T$),n=this.compileAndRun(t,[e]);return li().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Q(n[0])){const a=n.map((e=>Qr(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return li().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new $$(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new x$(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[OC(e.shape),...MC(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[OC(t),...MC(t)],s=new v$(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;null!=t&&F(L(a)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=LC(a);let o;o=r?new gE(i):new mE(i);const l=[null!=t?t:vC(i)];return{dtype:s,shape:a,dataId:this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,a=!1,s){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===gC.DENSE){const t=null!=s?s:vC(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===L(i.shape))return o.values=j(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&L(t.shape)<=fe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!PC(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=uE(e.packedInputs,t.shape,s);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ne(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&z(t.shape,s),f=1===L(t.shape),m=Ls(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&z(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${d}_${u}_${c}_${h}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${fe().getNumber("WEBGL_VERSION")}`,s}(e,u,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=JC(a,i,t),l=function(e,t){const n=DC(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(NC(e,(()=>e.shaderSource(n,t))),NC(e,(()=>e.compileShader(n))),fe().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw CC(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return fe().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},pE(e,t,u))}(this.gpgpu,e,u,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),fe().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,a){t.program.enableShapeUniforms||(dE(t.inShapeInfos,n),dE([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===fe().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=uE(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(L(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=ne(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,p,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=fe().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Yr();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!fe().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(fe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ci((()=>{if(!fe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=fe().getBool("DEBUG");fe().set("DEBUG",!1);const t=this.abs(mi(1e-8)).dataSync()[0];if(fe().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=Yr());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=fe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?A(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=H(e);e=t.newShape}let r=L(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=OC(e);let n=2,a=2;return e.length&&([n,a]=MC(e)),r=t*(n/2)*(a/2),B(r).map((e=>2*e))}return B(r)}(n,o),t.texShape=c),null!=a){const e=LC(n);let s,i=c[1],h=c[0];const p=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!o&&p||([i,h]=wC(c[0],c[1])),s=o?new vE(e,p):new xE(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?yC.PIXELS:yC.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,a);const g=[[h,i]],y=!0,b=this.runWebGLProgram(s,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,fe().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Yr()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Y(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Zu(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw CC(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=pE(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}}F$.nextDataId=0,Fa()&&di("webgl",(()=>new F$),2);class D${constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ps(t,n),this.enableShapeUniforms=fE(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class O${constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ps(t,n);const a=this.outputShape.length;this.enableShapeUniforms=fE(a);let s="";if(r)if(0===a||1===L(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${lE(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=b$("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function M$(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const L$={kernelName:_t,backendName:"webgl",kernelFunc:M$};function z$(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=M$({inputs:{x:r},backend:n}),l=M$({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:l},s}const P$={kernelName:Ge,backendName:"webgl",kernelFunc:z$},B$="return (a < 0.) ? b * a : a;",W$="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",U$={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",Kr(s,"float32")),o=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new O$(W$,a.shape,i.shape):new D$(B$,a.shape,i.shape),l=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},V$="return (a < 0.) ? b * a : a;",G$="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",H$={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new O$(G$,r.shape,a.shape):new D$(V$,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}};function j$({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=fe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new E$(i.shape,t):new S$(i.shape,e),o.runWebGLProgram(u,[i],l)}}function q$({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new D$(e,l.shape,u.shape);return c.runWebGLProgram(i,[a,s],va(n.dtype,r.dtype))})),s=z$({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const h=s||va(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=a){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Zc(e):e,r="string"===l.dtype?Zc(t):t,[s,i]=a(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=s,o}let p;return p=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new O$(t,l.shape,u.shape,n):new D$(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function K$(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?G$:V$;if("leakyrelu"===e)return t?W$:B$;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class X${constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=fE(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class Y${constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ps(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Q$="return a * b;";function Z$(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=va(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new Y$("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new Y$("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=z$({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=KE(r.shape,a.shape,e.values,t.values,s),l=n.makeTensorInfo(o,s);return n.texData.get(l.dataId).values=i,l}let i;return i=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new O$(Q$,r.shape,a.shape):new D$(Q$,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const J$={kernelName:un,backendName:"webgl",kernelFunc:Z$};function eR(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=L(a.shape),l=V(s,o),u=L(l);F(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||PC(a.shape,l)||null!==c.texture&&PC(c.shape,l)?(i.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const r=[OC(e.shape),...MC(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[OC(t),...MC(t)],i=new v$(s,r),o=[r],l=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,l,i)}const tR={kernelName:Tn,backendName:"webgl",kernelFunc:eR};class nR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${P(e)?e.toPrecision(2):e}, ones);`}let u="";a%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class rR{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function aR(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=nc(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:l,outSize:u}=a[i];let c,h;c="mean"===n?0===i?new nR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new nR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new rR({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class sR{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=lE(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class iR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=lE(this.rank),a=y$("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function oR(e,t,n){const r=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iR(e.shape,t):new sR(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function lR(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=G(a,e.shape);let o=i;const l=Lo(o,s),u=null!=l;let c=e;u&&(c=oR(e,l,r),o=Po(o.length,s)),Mo("sum",o,s);const[h,p]=Do(c.shape,o);let d=h;n&&(d=Oo(h,i));const f=L(p),m=eR({inputs:{x:c},attrs:{shape:[L(e.shape)/f,f]},backend:r}),g=aR(m,wa(e.dtype),"sum",r),y=eR({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}const uR={kernelName:jn,backendName:"webgl",kernelFunc:lR};function cR(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=a.shape[s[e]];let u;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=m$(e,a.shape,a.dtype,s,l);u=i.makeTensorInfo(l,a.dtype),i.texData.get(u.dataId).values=t}else u=oR(a,s,i);return u}const hR={kernelName:dr,backendName:"webgl",kernelFunc:cR};function pR({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=L(m),b=L(g),x=Ps(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);F(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[y,h,d]:[y,d,h],w=r?[b,f,p]:[b,p,f],k=eR({inputs:{x:e},backend:a,attrs:{shape:v}}),N=eR({inputs:{x:t},backend:a,attrs:{shape:w}}),I=[k,N],S=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=s,E=null!=i,$="leakyrelu"===l,R=null!=l?K$(l,!0):null;let A;if((1===d||1===f)&&T>1e3&&!1===(C||E||$||null!=R)){let e=k,t=N;n&&(e=cR({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=cR({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),I.push(t));const s=1===f;let i=e;1!==f&&(i=eR({inputs:{x:e},backend:a,attrs:{shape:[S,T,1]}}),I.push(i));const o=1===f?2:1;let l=t;s&&(l=eR({inputs:{x:t},backend:a,attrs:{shape:[S,1,T]}}),I.push(l));const u=Z$({inputs:{a:i,b:l},backend:a});A=lR({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const l=va(e.dtype,t.dtype),u=new X$(v,w,[S,d,f],n,r,C,R,E,$),c=[k,N];if(null!=s&&c.push(s),E&&c.push(i),$){const e=a.makeTensorInfo([],"float32",Kr(o,"float32"));c.push(e),I.push(e)}A=a.runWebGLProgram(u,c,l)}const _=eR({inputs:{x:A},backend:a,attrs:{shape:x}});I.push(A);for(const e of I)a.disposeIntermediateTensorInfo(e);return _}const dR={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return pR({a,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},fR="return abs(x);",mR={kernelName:xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=n$(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=fe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new E$(r.shape,fR):new S$(r.shape,fR),n.runWebGLProgram(a,[r],r.dtype)}},gR=j$({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),yR={kernelName:ve,backendName:"webgl",kernelFunc:gR},bR=j$({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),xR={kernelName:we,backendName:"webgl",kernelFunc:bR},vR="return a + b;",wR=q$({opSnippet:vR,packedOpSnippet:vR,supportsComplex:!0,cpuKernelImpl:EE}),kR={kernelName:ke,backendName:"webgl",kernelFunc:wR};class NR{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class IR{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const SR={kernelName:Ne,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return M$({inputs:{x:a[0]},backend:r});if(a.length>fe().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>va(e,t))),i=a.map((e=>e.shape)),o=fe().getBool("WEBGL_PACK")?new IR(a[0].shape,i):new NR(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},TR={kernelName:Ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=G(s,a.shape);let u=l;const c=Lo(u,o);let h=a;null!=c&&(h=cR({inputs:{x:a},backend:n,attrs:{perm:c}}),u=Po(u.length,o)),Mo("all",u,o);const[p,d]=Do(h.shape,u),f=eR({inputs:{x:h},backend:n,attrs:{shape:[-1,L(d)]}}),m=aR(f,f.dtype,"all",n);let g;return g=eR(i?{inputs:{x:m},backend:n,attrs:{shape:Oo(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},CR={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=G(s,a.shape);let u=l;const c=Lo(u,o);let h=a;null!=c&&(h=cR({inputs:{x:a},backend:n,attrs:{perm:c}}),u=Po(u.length,o)),Mo("any",u,o);const[p,d]=Do(h.shape,u),f=eR({inputs:{x:h},backend:n,attrs:{shape:[-1,L(d)]}}),m=aR(f,f.dtype,"any",n);let g;return g=eR(i?{inputs:{x:m},backend:n,attrs:{shape:Oo(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class ER{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class $R{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=lE(o),u=b$("coords",o);let c,h;if(1===s){h=o+1;const e=lE(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=b$("sourceLocR",h-1).concat("inIdx.r"),g=b$("sourceLocG",h-1).concat("inIdx.g"),y=b$("sourceLocB",h-1).concat("inIdx.b"),b=b$("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,w=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function RR(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=nc(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},l=new ER(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=RR(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function AR(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=nc(a[a.length-1]),i=new $R(a,s,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=AR(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function _R(e,t,n,r){const a=[n];if(Mo("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!fe().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Do(i.shape,a),u=L(l),c=eR({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=RR(e,c,r);n.push(h);const p=eR({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return AR(e,t,r)}const FR={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=G(s,a.shape);const o=Lo(i,a.shape.length);let l=a;const u=[];null!=o&&(l=cR({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),Mo("argMax",[i[0]],l.shape.length);const c=_R(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},DR={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=G(s,a.shape);const o=Lo(i,a.shape.length);let l=a;const u=[];null!=o&&(l=cR({inputs:{x:a},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),Mo("argMin",[i[0]],l.shape.length);const c=_R(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},OR=j$({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),MR={kernelName:Ee,backendName:"webgl",kernelFunc:OR},LR=j$({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),zR={kernelName:$e,backendName:"webgl",kernelFunc:LR},PR=j$({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),BR={kernelName:Re,backendName:"webgl",kernelFunc:PR},WR=q$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),UR={kernelName:_e,backendName:"webgl",kernelFunc:WR},VR=j$({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),GR={kernelName:Ae,backendName:"webgl",kernelFunc:VR};class HR{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class jR{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,N=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const qR={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;HC(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;F(Fi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ni(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&z(u.inShape,u.outShape))return M$({inputs:{x:a},backend:n});const c=new HR(u,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},KR={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=Ii(a.shape,s,i,[1,1,1],o,l,u),h=new jR(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};class XR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const QR={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Ii(i.shape,o,l,[1,1,1],u,c),p=new YR(h);return n.runWebGLProgram(p,[a],i.dtype)}},ZR={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;HC([a,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Ni(i.shape,o,l,1,u),h=new XR(c);return n.runWebGLProgram(h,[a],i.dtype)}},JR={kernelName:Le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return pR({a,b:s,transposeA:i,transposeB:o,backend:n})}};class eA{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Ps(e,t),Ps(e,n);let i="0.0";null!=r&&(Ps(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Ps(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class tA{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ps(e,t),Ps(e,n);let i="vec4(0.0)";null!=r&&(Ps(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Ps(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const nA={kernelName:Ct,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;F(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),F(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),F(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,a,s];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=fe().getBool("WEBGL_PACK_NORMALIZATION")?new tA(r.shape,a.shape,s.shape,c,h,l):new eA(r.shape,a.shape,s.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class rA{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=lE(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return aA.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${aA[t]} = start[${t}] + coords.${aA[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const aA=["x","y","z","w","u","v"];class sA{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=lE(this.rank),n=b$("coords",this.rank),r=b$("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function iA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,l]=ni(a,s,i);if(Us(a,o,l),0===L(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=r$(e.values,o,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:u}=n.texData.get(a.dataId),c=ei(a.shape,o,l);if(u||!c){const e=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sA(l):new rA(l),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=ti(t,ne(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,n)}const oA={kernelName:Pn,backendName:"webgl",kernelFunc:iA},lA={kernelName:ze,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;F(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=ac(a.shape,s,o),u=sc(l.length,s.length),c=ic(a.shape,s,o),h=oc(i,s.length),p=lc(c,i,s.length),d=[],f=eR({inputs:{x:a},backend:n,attrs:{shape:l}}),m=cR({inputs:{x:f},backend:n,attrs:{perm:u}}),g=eR({inputs:{x:m},backend:n,attrs:{shape:c}}),y=iA({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},uA={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),l=n.readSync(s.dataId),u=$E(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}},cA={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=Ps(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},hA=q$({opSnippet:"return float(a != b);",cpuKernelImpl:YE,dtype:"bool"}),pA={kernelName:hn,backendName:"webgl",kernelFunc:hA};function dA(e){const{inputs:t,backend:n}=e,{input:r}=t;return M$({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const fA={kernelName:Nn,backendName:"webgl",kernelFunc:dA},mA={kernelName:We,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return M$({inputs:{x:s},backend:r});const t=Ho(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=z$({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=dA({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!K(s.dtype,i)){const e=M$({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new S$(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",j("bool",1)),t=hA({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},gA="return ceil(x);",yA=j$({opSnippet:gA,packedOpSnippet:gA,cpuKernelImpl:AE}),bA={kernelName:Ue,backendName:"webgl",kernelFunc:yA};class xA{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class vA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const wA={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=fe().getBool("WEBGL_PACK_CLIP")?new vA(a.shape):new xA(a.shape);const l=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,l)}};class kA{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function NA(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const IA={kernelName:He,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new kA(r.shape),i=[NA(r,a.complexTensorInfos.real),NA(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class SA{constructor(e){this.outputShape=[],this.outputShape=ec(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class TA{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ec(e,t);const n=this.outputShape,r=n.length,a=lE(r),s=b$("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${CA(i,l,t)}),\n            vec2(${CA(u,l,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${CA(i,l,d)}),\n          vec2(${CA(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function CA(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function EA(e){const{inputs:t,backend:n}=e,{input:r}=t;return M$({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const $A={kernelName:Dt,backendName:"webgl",kernelFunc:EA};function RA(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>dA({inputs:{input:e},backend:n}))),a=e.map((e=>EA({inputs:{input:e},backend:n}))),s=RA(r,t,n),i=RA(a,t,n),o=z$({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=L(e.shape.slice(t));return eR({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=ec(a.map((e=>e.shape)),1),o=1===a[0].shape[0],l=_E(s,i,r,o),u=ec(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>fe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=RA(e.slice(0,r),t,n),s=RA(e.slice(r),t,n),i=RA([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new TA(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=ec(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>eR({inputs:{x:e},attrs:{shape:[-1,L(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new SA(s.map((e=>e.shape))),l=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=eR({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function AA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=G(a,t[0].shape)[0],i=ec(t.map((e=>e.shape)),s);if(0===L(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>L(e.shape)>0));return 1===o.length?M$({inputs:{x:o[0]},backend:n}):(Ju(o.map((e=>e.shape)),s),RA(o,s,n))}const _A={kernelName:je,backendName:"webgl",kernelFunc:AA};class FA{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class DA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=fE(this.outputShape.length);const{dataFormat:n}=t,r=qC(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function MA(e,t,n,r){const a=e.shape;if(F(a.length<=1||3===a.length,(()=>`WebGL conv2d only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${a.length}.`)),1===a.length){const e=n?t[3]:t[1];F(1===a[0]||a[0]===e,(()=>`WebGL conv2d PReLU activation weights (${a}) is not compatible with the number of output channels (${e}).`))}else if(3===a.length){try{Ps(a,t)}catch(e){throw Error(`WebGL conv2d PReLU activation weights (${a}) is not compatible with the output shape of the conv2d (${t}).`)}if(!n)return cR({inputs:{x:e},backend:r,attrs:{perm:[1,2,0]}})}return e}function LA({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if(null!=s){const e=MA(s,n.outShape,d,r);e.dataId!==s.dataId&&(m.push(e),s=e)}if((1!==h&&1!==p||!(c>1e3))&&u.isPacked&&d&&null!=u.texture&&l[2]%2!=0&&z(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,F(PC(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const d=eR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=pR({a:h,b:d,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);F(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,y.shape=n.outShape,f=M$({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const l=d?e:cR({inputs:{x:e},backend:r,attrs:{perm:[0,2,3,1]}}),u=l.shape,c=eR({inputs:{x:l},backend:r,attrs:{shape:[1,u[0]*u[1]*u[2],n.inChannels]}}),h=eR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=pR({a:c,b:h,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),g=eR({inputs:{x:p},backend:r,attrs:{shape:[n.batchSize,n.outHeight,n.outWidth,n.outChannels]}});f=d?g:cR({inputs:{x:g},backend:r,attrs:{perm:[0,3,1,2]}}),d||(m.push(l),m.push(g)),m.push(c),m.push(h),m.push(p)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function zA({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[];if(null!=s){const e=MA(s,n.outShape,f,r);e.dataId!==s.dataId&&(b.push(e),s=e)}const x=eR({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=eR({inputs:{x:t},backend:r,attrs:{shape:[1,m,L(t.shape)/m]}});b.push(x),b.push(v);const w=new OA(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],N=r.runWebGLProgram(w,[x],"float32",k),I=eR({inputs:{x:N},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(N),b.push(I);const S=null!=a,T=null!=s,C="leakyrelu"===o,E=o?K$(o,!0):null,$=new X$(I.shape,v.shape,[1,g,n.outChannels],!0,!1,S,E,T,C),R=[I,v];if(a&&R.push(a),T&&R.push(s),C){const e=r.makeTensorInfo([],"float32",Kr(i,"float32"));R.push(e),b.push(e)}const A=r.runWebGLProgram($,R,"float32"),_=eR({inputs:{x:A},backend:r,attrs:{shape:[1,p,h,n.outChannels]}}),F=f?_:cR({inputs:{x:_},backend:r,attrs:{perm:[0,3,1,2]}});f||b.push(_),b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return F}const PA={kernelName:qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Di(l),p=Si(a.shape,s.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(fe().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])d=zA({x:a,filter:s,convInfo:p,backend:n});else{const e=new FA(p);d=n.runWebGLProgram(e,[a,s],"float32")}else d=LA({x:a,filter:s,convInfo:p,backend:n});const f=eR({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class BA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const GA={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Di(l),p=Si(a.shape,c,i,1,o,u,!1,h),d=new BA(p);return n.runWebGLProgram(d,[a,s],"float32")}},HA={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Di(u),p=Si(i,s.shape,o,1,l,c,!1,h),d=new WA(p);return n.runWebGLProgram(d,[a,s],"float32")}},jA={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=Ti(a.shape,s.shape,i,l,o),c=new DA(u);return n.runWebGLProgram(c,[a,s],"float32")}},qA={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=r,u=Ti(a.shape,l,i,1,o),c=new UA(u);return n.runWebGLProgram(c,[a,s],"float32")}},KA={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=r,u=Ti(l,s.shape,o,1,i),c=new VA(u);return n.runWebGLProgram(c,[a,s],"float32")}},XA=j$({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),YA={kernelName:Je,backendName:"webgl",kernelFunc:XA},QA=j$({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),ZA={kernelName:et,backendName:"webgl",kernelFunc:QA};class JA{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const e_={kernelName:rt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new JA(a.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[a,s,i],"float32")}};var t_;!function(e){e.Prod="*",e.Sum="+"}(t_||(t_={}));class n_{constructor(e,t,n,r){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.op=e,this.outputShape=t;const a=t.length,s=this.op===t_.Prod?"1.0":"0.0",i=n?s:`getX(${r_(a,"coords",this.op)})`,o=t[t.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${lE(a)} coords = getOutputCoords();\n        int end = ${a_(a,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${a_(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${r_(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function r_(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function a_(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function s_(e,t,n,r,a,s){const i=t.shape.length,o=Lo([r],i);let l=t;null!=o&&(l=cR({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Po(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=M$({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new n_(e,l.shape,!1,s),a=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,a),n.disposeIntermediateTensorInfo(i)}if(a){const t=new n_(e,l.shape,a,s),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=cR({inputs:{x:h},backend:n,attrs:{perm:zo(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const i_={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return s_(t_.Prod,a,n,s,i,o)}},o_={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return s_(t_.Sum,a,n,s,i,o)}},l_={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=$E(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=RE(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class u_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const c_={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],l=("NHWC"===i?a.shape[1]:a.shape[2])*s,u=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),h=new u_("NHWC"===i?[o,l,u,c]:[o,c,l,u],s,i);return n.runWebGLProgram(h,[a],a.dtype)}};class h_{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fE(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class p_{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=fE(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?A(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const d_={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),F(Fi(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Si(a.shape,s.shape,i,c,o,u,!0);let p;p=fe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new p_(h):new h_(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",d)}};class f_{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class m_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const g_={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Si(a.shape,c,i,o,l,u,!0),p=new f_(h);return n.runWebGLProgram(p,[a,s],"float32")}},y_={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Si(c,s.shape,i,o,l,u,!0),p=new m_(h);return n.runWebGLProgram(p,[a,s],"float32")}};class b_{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const x_={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=L(r.shape),i=eR({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new b_(s),l=n.runWebGLProgram(o,[i],i.dtype),u=eR({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class v_{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const w_={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=r,u=ki(a.shape,s.shape,i,o,"NHWC",l);let c;const h=new v_(u);c=n.runWebGLProgram(h,[a,s],"float32");const p=eR({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},k_={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:l}=Rc(a,s.length);_c(i.length,l,s);const{path:u,steps:c}=Fc(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Ac(d,l[t]);let a;Dc(e)?a=s[t]:(a=cR({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);z(a.shape,i)||(a=eR({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=Z$({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=lR({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},N_=j$({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),I_={kernelName:mt,backendName:"webgl",kernelFunc:N_},S_={kernelName:gt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=fe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new O$("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new D$("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},T_=q$({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:FE}),C_={kernelName:bt,backendName:"webgl",kernelFunc:T_},E_=j$({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${mc};\n  float a1 = ${gc};\n  float a2 = ${yc};\n  float a3 = ${bc};\n  float a4 = ${xc};\n  float a5 = ${vc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),$_={kernelName:yt,backendName:"webgl",kernelFunc:E_},R_=j$({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:DE,dtype:"float32"}),A_={kernelName:xt,backendName:"webgl",kernelFunc:R_};function __(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(F(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),eR({inputs:{x:s},backend:r,attrs:{shape:o}})}const F_={kernelName:vt,backendName:"webgl",kernelFunc:__},D_="return exp(x) - 1.0;",O_=j$({opSnippet:D_,packedOpSnippet:D_,cpuKernelImpl:OE}),M_={kernelName:wt,backendName:"webgl",kernelFunc:O_};class L_{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function z_(e,t,n){const r=n.texData.get(e.dataId),a=L(e.shape),s=e.shape[e.shape.length-1],i=eR({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,l=new L_("real",o,t),u=new L_("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=z$({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=eR({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const P_={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return z_(r,!1,n)}};class B_{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function W_(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||J(a),"string"===s){const e=q(s,L(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new B_(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const U_={kernelName:Nt,backendName:"webgl",kernelFunc:W_};class V_{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const G_={kernelName:It,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new V_(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},H_="return floor(x);",j_=j$({opSnippet:H_,packedOpSnippet:H_,cpuKernelImpl:ME}),q_={kernelName:St,backendName:"webgl",kernelFunc:j_},K_=q$({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),X_={kernelName:Tt,backendName:"webgl",kernelFunc:K_};class Y_{constructor(e){this.variableNames=["A"];const t=qC(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Q_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=qC(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Z_={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,u]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[u,l],h=[u,l,s];(o||i)&&(null==J_&&(J_=document.createElement("canvas").getContext("2d")),J_.canvas.width=l,J_.canvas.height=u,J_.drawImage(a,0,0,l,u),a=J_.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=yC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const d=fe().getBool("WEBGL_PACK")?new Q_(h):new Y_(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let J_;const eF={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=Di(c),g=Si(a.shape,s.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(fe().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=zA({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===d,l=d?K$(d,!1):null,u=new FA(g,e,l,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",Kr(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(u,c,"float32")}else y=LA({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=eR({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},tF={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),F(Fi(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Si(a.shape,s.shape,l,m,u,h,!0),y=fe().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?K$(p,y):null,x=[a,s],v=null!=i,w=null!=o,k="leakyrelu"===p;if(v&&x.push(i),w&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Kr(d,"float32"));x.push(e),f.push(e)}let N;N=y?new p_(g,v,b,w,k):new h_(g,v,b,w,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(N,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class nF{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=lE(t.length),a=lE(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const rF={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=L(r.shape),[l,u,c,h]=uc(r,a),p=eR({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),d=eR({inputs:{x:r},backend:n,attrs:{shape:[L(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=LE(e,t,r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,s.values)}const f=new nF(i,h,[u,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=eR({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class aF{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=lE(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function sF(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,l=G(i,a.shape)[0];if(fe().get("DEBUG")){const e=n.readSync(s.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){const r=e[n];F(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=Qc(a,s,l,o),c=L(s.shape),h=[],p=eR({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=eR({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(d);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=zE(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new aF(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=eR({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const iF={kernelName:Et,backendName:"webgl",kernelFunc:sF},oF=q$({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:PE,dtype:"bool"}),lF={kernelName:Rt,backendName:"webgl",kernelFunc:oF},uF=q$({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:BE}),cF={kernelName:At,backendName:"webgl",kernelFunc:uF},hF={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return z_(r,!0,n)}},pF=j$({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),dF={kernelName:Ot,backendName:"webgl",kernelFunc:pF},fF=j$({opSnippet:"return float(isinf(x));",dtype:"bool"}),mF={kernelName:Mt,backendName:"webgl",kernelFunc:fF},gF=j$({opSnippet:"return float(isnan(x));",dtype:"bool"}),yF={kernelName:Lt,backendName:"webgl",kernelFunc:gF},bF=q$({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:WE,dtype:"bool"}),xF={kernelName:Pt,backendName:"webgl",kernelFunc:bF},vF=q$({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:UE,dtype:"bool"}),wF={kernelName:Bt,backendName:"webgl",kernelFunc:vF},kF={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=VE(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},NF=j$({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:GE}),IF={kernelName:Ut,backendName:"webgl",kernelFunc:NF},SF=j$({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),TF={kernelName:Vt,backendName:"webgl",kernelFunc:SF},CF=q$({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),EF={kernelName:Gt,backendName:"webgl",kernelFunc:CF},$F=j$({opSnippet:"return float(!(x >= 1.0));"}),RF={kernelName:Ht,backendName:"webgl",kernelFunc:$F},AF=q$({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),_F={kernelName:jt,backendName:"webgl",kernelFunc:AF};class FF{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class DF{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${l})`:1===a?`1.0/(${l})`:`exp(log(${l}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const OF={kernelName:qt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r,u=fe().getBool("WEBGL_PACK_NORMALIZATION")?new DF(a.shape,s,i,o,l):new FF(a.shape,s,i,o,l);return n.runWebGLProgram(u,[a],a.dtype)}};class MF{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const LF={kernelName:Kt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new MF(a.shape,o,l,u,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function zF(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,l=G(s,a.shape);let u=l;const c=Lo(u,o),h=null!=c,p=n.shouldExecuteOnCPU([a]);let d=a;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=m$(e,a.shape,a.dtype,c,t);d=n.makeTensorInfo(t,a.dtype),n.texData.get(d.dataId).values=r}else d=oR(a,c,n);u=Po(u.length,o)}Mo("max",u,o);const[f,m]=Do(d.shape,u);let g,y=f;if(i&&(y=Oo(f,l)),p){const e=n.texData.get(d.dataId).values,t=HE(e,L(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=L(t),s=eR({inputs:{x:e},attrs:{shape:[L(e.shape)/a,a]},backend:r}),i=aR(s,e.dtype,"max",r),o=eR({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const PF={kernelName:Xt,backendName:"webgl",kernelFunc:zF},BF=q$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:jE}),WF={kernelName:Yt,backendName:"webgl",kernelFunc:BF},UF={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;HC(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;F(Fi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ni(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&z(u.inShape,u.outShape))return M$({inputs:{x:a},backend:n});const c=new HR(u,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},VF={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=Ii(a.shape,s,i,[1,1,1],o,u,l),h=new jR(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};class GF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,l=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jF={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=Ii(i.shape,o,l,[1,1,1],u,c),p=new jR(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new HF(h),m=n.runWebGLProgram(f,[a,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},qF={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;HC([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=Ni(o.shape,l,u,1,c,h),d=new HR(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new GF(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},KF={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;F(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];F(Fi(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));const c=Ni(r.shape,a,s,u,i),[h,p]=function(e,t,n,r){let a=new HR(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new HR(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,l);return[h,p]}},XF={kernelName:nn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,l=G(s,r.shape);let u=l;const c=Lo(u,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=m$(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=oR(r,c,i);d.push(f),u=Po(u.length,o)}Mo("sum",u,o);const[m,g]=Do(f.shape,u);let y=m;a&&(y=Oo(m,l));const b=function(e,t,n,r){const a=L(t),s=eR({inputs:{x:e},attrs:{shape:[L(e.shape)/a,a]},backend:r}),i=aR(s,"float32","mean",r),o=eR({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},YF={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=G(s,a.shape);let u=l;const c=Lo(u,o);let h=a;null!=c&&(h=cR({inputs:{x:a},backend:n,attrs:{perm:c}}),u=Po(u.length,a.shape.length)),Mo("min",u,o);const[p,d]=Do(h.shape,u),f=eR({inputs:{x:h},backend:n,attrs:{shape:[-1,L(d)]}}),m=aR(f,f.dtype,"min",n);let g;return g=eR(i?{inputs:{x:m},backend:n,attrs:{shape:Oo(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},QF=q$({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:qE}),ZF={kernelName:an,backendName:"webgl",kernelFunc:QF};class JF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=lE(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class eD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=lE(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=b$("rc",r),l=b$("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const tD={kernelName:sn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new eD(r.shape,a,s):new JF(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},nD=q$({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),rD={kernelName:on,backendName:"webgl",kernelFunc:nD};class aD{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const sD=q$({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),iD={kernelName:dt,backendName:"webgl",kernelFunc:sD},oD="return a - b;",lD=q$({opSnippet:oD,packedOpSnippet:oD,supportsComplex:!0,cpuKernelImpl:p$}),uD={kernelName:or,backendName:"webgl",kernelFunc:lD};function cD(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=G([s],a.shape),o=zF({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Oo(o.shape,i),u=eR({inputs:{x:o},backend:n,attrs:{shape:l}}),c=lD({inputs:{a,b:u},backend:n}),h=R_({inputs:{x:c},backend:n}),p=lR({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=eR({inputs:{x:p},backend:n,attrs:{shape:l}}),f=sD({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const hD={kernelName:Xn,backendName:"webgl",kernelFunc:cD},pD={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,l=o?a:cD({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new aD(u,c,s),p=[[i]],d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},dD={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=XE(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=fe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new E$(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new S$(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(a,[r],r.dtype)}},fD=nu,mD={kernelName:pn,backendName:"webgl",kernelFunc:function(e){Ir("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=fD(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},gD=ru,yD={kernelName:dn,backendName:"webgl",kernelFunc:function(e){Ir("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=gD(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},bD=au,xD={kernelName:fn,backendName:"webgl",kernelFunc:function(e){Ir("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=bD(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class vD{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const wD={kernelName:gn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,l=L(a.shape),u=new vD(l,s,i,o),c=eR({inputs:{x:a},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const p=eR({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};function kD(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=dA({inputs:{input:r},backend:n}),t=kD({inputs:{x:e},backend:n}),a=EA({inputs:{input:r},backend:n}),s=kD({inputs:{x:a},backend:n}),i=z$({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return W_({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const ND={kernelName:yr,backendName:"webgl",kernelFunc:kD},ID={kernelName:mn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=dA({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=EA({inputs:{input:a},backend:r}),i=kD({inputs:{x:s},backend:r}),o=z$({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return W_({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},SD={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return __({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{D(s,e.shape,"All tensors passed to stack must have matching shapes"),F(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=AA({inputs:t.map((e=>{const t=__({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class TD{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=lE(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class CD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=lE(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=b$("rc",r),l=b$("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const ED=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===L(a.shape)){const e=s.map(((e,t)=>e[0]+a.shape[t]+e[1]));return W_({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}const o=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new CD(a.shape,s,i):new TD(a.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[a],a.dtype,l)},$D={kernelName:bn,backendName:"webgl",kernelFunc:ED},RD=q$({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),AD={kernelName:xn,backendName:"webgl",kernelFunc:RD},_D={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,l=[],u=G(s,a.shape);let c=u;const h=Lo(c,o);let p,d=a;if(null!=h&&(d=cR({inputs:{x:a},backend:n,attrs:{perm:h}}),c=Po(c.length,o),l.push(d)),Mo("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:a}=QE(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=Do(d.shape,c),r=L(t),s=eR({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),i=aR(s,wa(a.dtype),"prod",n);p=eR({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(s),l.push(i)}if(i){l.push(p);const e=Oo(p.shape,u);p=eR({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},FD=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=ZE(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},DD={kernelName:kn,backendName:"webgl",kernelFunc:FD},OD=j$({opSnippet:"return 1.0 / x;"}),MD={kernelName:In,backendName:"webgl",kernelFunc:OD},LD=j$({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),zD={kernelName:Sn,backendName:"webgl",kernelFunc:LD},PD=j$({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),BD={kernelName:An,backendName:"webgl",kernelFunc:PD};class WD{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class UD{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const VD={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,c=fe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new UD(a.shape,l,u,s,i):new WD(a.shape,l,u,s,i);return n.runWebGLProgram(c,[a],"float32")}};class GD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const HD={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new GD(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class jD{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class qD{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const KD={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[l,u]=o,c=fe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new qD(a.shape,l,u,s,i):new jD(a.shape,l,u,s,i);return n.runWebGLProgram(c,[a],a.dtype)}};class XD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const YD={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new XD(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class QD{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=lE(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class ZD{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=b$("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=lE(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const JD={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=G(s,a.shape);if(0===i)return M$({inputs:{x:a},backend:n});const l=fe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZD(a.shape,o):new QD(a.shape,o);return n.runWebGLProgram(l,[a],a.dtype)}};class eO{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const tO={kernelName:vr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,l=new eO(r.shape,s),[u,c]=rc(i,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},nO=j$({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),rO={kernelName:Fn,backendName:"webgl",kernelFunc:nO},aO=j$({opSnippet:"return inversesqrt(x);",cpuKernelImpl:JE}),sO={kernelName:Dn,backendName:"webgl",kernelFunc:aO};class iO{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=lE(a.length),l=lE(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const oO={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=pc(0,a,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,a.dtype);const d=eR({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=eR({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new iO(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=eR({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class lO{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===fe().getNumber("WEBGL_VERSION")?"while (left < right) {":a,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const uO={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new lO(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",l)}};class cO{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=lE(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const hO={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new cO(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],va(a.dtype,s.dtype))}},pO=j$({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${dc};\n  float scale = ${fc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),dO={kernelName:zn,backendName:"webgl",kernelFunc:pO},fO=j$({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:t$}),mO={kernelName:Vn,backendName:"webgl",kernelFunc:fO},gO=j$({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),yO={kernelName:Un,backendName:"webgl",kernelFunc:gO},bO=j$({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),xO={kernelName:Bn,backendName:"webgl",kernelFunc:bO},vO=j$({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),wO={kernelName:Wn,backendName:"webgl",kernelFunc:vO},kO=j$({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),NO={kernelName:Gn,backendName:"webgl",kernelFunc:kO},IO={kernelName:qn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;F(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const u=[],c=ED({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=ac(c.shape,s,o,!1),p=sc(h.length,s.length,!1),d=ic(c.shape,s,o,!1),f=eR({inputs:{x:c},backend:n,attrs:{shape:h}}),m=cR({inputs:{x:f},backend:n,attrs:{perm:p}}),g=eR({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},SO={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=a$(o,r.shape,r.dtype,l,a.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},TO={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,h]=s$(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},CO={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=i$(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},EO={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),l=n.readSync(s.dataId),[u,c]=i$(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},$O={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=pc(0,a,o);if("string"===s.dtype){const e=n.bufferSync(a),t=n.bufferSync(s),r=Zr(n.readSync(i.dataId)[0]),d=e$(e,t,o,p,c,u,l,h,r,!1);return n.makeTensorInfo(o,d.dtype,d.values)}const d=new iO(u,l,a.shape.length,s.shape.length,h,[p,1],!1),f=n.runWebGLProgram(d,[s,a,i],s.dtype),m=eR({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}},RO={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=G(i,a.shape)[0],l=Mc(a,s,o),u=a.shape.length,c=new Array(u).fill(0),h=a.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=iA({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},AO="return sqrt(x);",_O=j$({opSnippet:AO,packedOpSnippet:AO,cpuKernelImpl:o$}),FO={kernelName:Hn,backendName:"webgl",kernelFunc:_O},DO={kernelName:nr,backendName:"webgl",kernelFunc:j$({opSnippet:"return x * x;"})},OO="return (a - b) * (a - b);",MO=q$({opSnippet:OO,packedOpSnippet:OO}),LO={kernelName:tr,backendName:"webgl",kernelFunc:MO},zO={kernelName:br,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new S$(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class PO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=lE(n.length),s=lE(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const BO={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:v}=ri(a.shape,s,i,o,l,u,c,h,p);let w;if(m)w=eR({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){F(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=Gs(b,x,v),t=iA({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});w=eR({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=Ss(a.shape,a.dtype,e),r=l$(d,t,v,b);w=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new PO(b,v,d);w=n.runWebGLProgram(e,[a],a.dtype)}const k=eR({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}},WO={kernelName:ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=u$(p,d,a,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},UO={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=c$(o,l,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},VO={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=h$(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},GO=j$({opSnippet:"return tan(x);"}),HO={kernelName:lr,backendName:"webgl",kernelFunc:GO},jO=j$({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),qO={kernelName:ur,backendName:"webgl",kernelFunc:jO};class KO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=lE(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function XO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Zr(e))):e,r=Ss(a.shape,a.dtype,t),i=d$(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new KO(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}const YO={kernelName:cr,backendName:"webgl",kernelFunc:XO};class QO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class ZO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function JO(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function eM(e){let t=1;for(;t<e;)t*=2;return t}const tM={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=fe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=fe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>l){const e=n.readSync(a.dataId),[t,r]=f$(e,u,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,a.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[a,W_({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(a):a,f=L(u)/c,m=eR({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&JO(n,d);const g=eM(s),y=eM(c);let b=null;const x=()=>null===b?[m,m]:[m,b],v=(e,t,r)=>{const a=x(),s=new QO(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),JO(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new ZO([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),JO(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,b.shape)}let w=b;b=iA({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),JO(n,w);let k=sF({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});JO(n,m);const N=u.slice(0,-1);N.push(s),w=b,b=eR({inputs:{x:b},attrs:{shape:N},backend:n}),JO(n,w);const I=k;return k=eR({inputs:{x:k},attrs:{shape:N},backend:n}),JO(n,I),[k,b]}};class nM{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const rM={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,p,d]=a.shape,[f,m]=null!=u?u:[h,p],g=new nM(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[a,s],"float32")}},aM={kernelName:fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;HC(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=g$(i,a,s.shape,s.dtype);return[r.makeTensorInfo(l,s.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},sM={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,l=a.shape[s],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(u[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[s]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[s]=e;const t=iA({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=eR({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class iM{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const oM=[dR,mR,yR,xR,kR,SR,TR,CR,FR,DR,MR,zR,BR,UR,GR,qR,KR,QR,ZR,JR,nA,lA,uA,cA,mA,bA,wA,P$,IA,_A,PA,GA,HA,jA,qA,KA,YA,ZA,e_,i_,o_,l_,c_,d_,g_,y_,x_,w_,k_,I_,S_,C_,$_,A_,F_,M_,P_,U_,G_,q_,X_,Z_,eF,tF,rF,iF,lF,cF,L$,hF,$A,dF,mF,yF,U$,xF,wF,kF,IF,TF,EF,RF,_F,OF,LF,PF,WF,UF,VF,jF,qF,KF,XF,YF,ZF,tD,rD,pD,J$,dD,mD,yD,xD,pA,wD,ID,SD,$D,AD,H$,_D,DD,fA,iD,MD,zD,BD,tR,VD,HD,KD,YD,JD,tO,rO,sO,oO,uO,hO,dO,mO,yO,xO,wO,oA,hD,NO,IO,SO,TO,CO,EO,$O,RO,FO,DO,LO,zO,BO,WO,UO,VO,uD,uR,HO,qO,YO,tM,rM,hR,aM,sM,{kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,l=[];let u=0;const c=Lo([u],o);let h=a;null!=c&&(h=cR({inputs:{x:a},backend:n,attrs:{perm:c}}),l.push(h),u=Po(1,o)[0]);const p=Yc(h.shape,u,i),d=L([h.shape[u]]),f=eR({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=wa(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],u=Xc(o,s),c=new iM({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),h=n.compileAndRun(c,[e,r],a);if(l.push(h),h.shape[1]===s)return h;const p=FD({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),d=XO({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,t,d,a,s)},y=eR({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const e=zo(c);b=cR({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},ND];for(const e of oM)Ar(e);function lM(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{l(r.next(e))}catch(e){s(e)}}function o(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((r=r.apply(e,t||[])).next())}))}function uM(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}var cM=function(e){return{startEndTensor:e,startPoint:il(e,[0,0],[-1,2]),endPoint:il(e,[0,2],[-1,2])}},hM={strides:[8,16],anchors:[2,6]};function pM(e,t){var n,r,a;if(e.topLeft instanceof ha&&e.bottomRight instanceof ha){var s=ci((function(){return[Gi([il(ko(t-1,e.topLeft),0,1),il(e.topLeft,1,1)]),Gi([ko(t-1,il(e.bottomRight,0,1)),il(e.bottomRight,1,1)])]}));n=s[0],r=s[1],null!=e.landmarks&&(a=ci((function(){var n=ko(bl([t-1,0]),e.landmarks),r=bl([1,-1]);return wo(n,r)})))}else{var i=e.topLeft,o=i[0],l=i[1],u=e.bottomRight,c=u[0],h=u[1];n=[t-1-o,l],r=[t-1-c,h],null!=e.landmarks&&(a=e.landmarks.map((function(e){return[t-1-e[0],e[1]]})))}var p={topLeft:n,bottomRight:r};return null!=a&&(p.landmarks=a),null!=e.probability&&(p.probability=e.probability instanceof ha?e.probability.clone():e.probability),p}function dM(e,t){return ci((function(){var n;return n=e.hasOwnProperty("box")?e.box:e,ml(function(e,t){var n=wo(e.startPoint,t),r=wo(e.endPoint,t),a=ji([n,r],1);return cM(a)}(n,t).startEndTensor)}))}var fM=function(){function e(e,t,n,r,a,s){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){for(var r=[],a=0;a<n.strides.length;a++)for(var s=n.strides[a],i=Math.floor((t+s-1)/s),o=Math.floor((e+s-1)/s),l=n.anchors[a],u=0;u<i;u++)for(var c=s*(u+.5),h=0;h<o;h++)for(var p=s*(h+.5),d=0;d<l;d++)r.push([p,c]);return r}(t,n,hM),this.anchors=xl(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=bl([t,n]),this.iouThreshold=a,this.scoreThreshold=s}return e.prototype.getBoundingBoxes=function(e,t,n){return void 0===n&&(n=!0),lM(this,void 0,void 0,(function(){var r,a,s,i,o,l,u,c,h,p,d,f,m,g,y=this;return uM(this,(function(b){switch(b.label){case 0:return r=ci((function(){var t=zu.resizeBilinear(e,[y.width,y.height]),n=wo(ko(ao(t,255),.5),2),r=y.blazeFaceModel.predict(n),a=ml(r),s=function(e,t,n){var r=il(e,[0,1],[-1,2]),a=bi(r,t),s=il(e,[0,3],[-1,2]),i=ao(s,n),o=ao(a,n),l=ao(i,2),u=ko(o,l),c=bi(o,l),h=wo(u,n),p=wo(c,n);return ji([h,p],1)}(a,y.anchors,y.inputSize),i=il(a,[0,0],[-1,1]);return[a,s,ml(sl(i))]})),a=r[0],s=r[1],i=r[2],o=console.warn,console.warn=function(){},l=zu.nonMaxSuppression(s,i,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=o,[4,l.array()];case 1:return u=b.sent(),l.dispose(),c=u.map((function(e){return il(s,[e,0],[1,-1])})),t?[3,3]:[4,Promise.all(c.map((function(e){return lM(y,void 0,void 0,(function(){var t;return uM(this,(function(n){switch(n.label){case 0:return[4,e.array()];case 1:return t=n.sent(),e.dispose(),[2,t]}}))}))})))];case 2:c=b.sent(),b.label=3;case 3:for(h=e.shape[1],p=e.shape[2],d=t?ao([p,h],this.inputSize):[p/this.inputSizeData[0],h/this.inputSizeData[1]],f=[],m=function(e){var r=c[e],s=ci((function(){var s=cM(r instanceof ha?r:xl(r));if(!n)return s;var o,l=u[e];return o=t?il(y.anchors,[l,0],[1,2]):y.anchorsData[l],{box:s,landmarks:Mi(ml(il(a,[l,5],[1,-1])),[6,-1]),probability:il(i,[l],[1]),anchor:o}}));f.push(s)},g=0;g<c.length;g++)m(g);return s.dispose(),i.dispose(),a.dispose(),[2,{boxes:f,scaleFactor:d}]}}))}))},e.prototype.estimateFaces=function(e,t,n,r){return void 0===t&&(t=!1),void 0===n&&(n=!1),void 0===r&&(r=!0),lM(this,void 0,void 0,(function(){var a,s,i,o,l,u,c=this;return uM(this,(function(h){switch(h.label){case 0:return a=function(e){return e instanceof ha?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),s=a[1],i=ci((function(){return e instanceof ha||(e=Ws(e)),lo(Ts(e,"float32"),0)})),[4,this.getBoundingBoxes(i,t,r)];case 1:return o=h.sent(),l=o.boxes,u=o.scaleFactor,i.dispose(),t?[2,l.map((function(e){var t=dM(e,u),a={topLeft:il(t,[0],[2]),bottomRight:il(t,[2],[2])};if(r){var i=e,o=i.landmarks,l=i.probability,c=i.anchor,h=wo(bi(o,c),u);a.landmarks=h,a.probability=l}return n&&(a=pM(a,s)),a}))]:[2,Promise.all(l.map((function(e){return lM(c,void 0,void 0,(function(){var t,a,i,o,l,c,h,p,d,f,m,g=this;return uM(this,(function(y){switch(y.label){case 0:return t=dM(e,u),r?[3,2]:[4,t.array()];case 1:return l=y.sent(),a={topLeft:l.slice(0,2),bottomRight:l.slice(2)},[3,4];case 2:return[4,Promise.all([e.landmarks,t,e.probability].map((function(e){return lM(g,void 0,void 0,(function(){return uM(this,(function(t){return[2,e.array()]}))}))})))];case 3:i=y.sent(),o=i[0],l=i[1],c=i[2],h=e.anchor,d=(p=u)[0],f=p[1],m=o.map((function(e){return[(e[0]+h[0])*d,(e[1]+h[1])*f]})),a={topLeft:l.slice(0,2),bottomRight:l.slice(2),landmarks:m,probability:c},function(e){e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()}(e.box),e.landmarks.dispose(),e.probability.dispose(),y.label=4;case 4:return t.dispose(),n&&(a=pM(a,s)),[2,a]}}))}))})))]}}))}))},e}();function mM(e){var t=void 0===e?{}:e,n=t.maxFaces,r=void 0===n?10:n,a=t.inputWidth,s=void 0===a?128:a,i=t.inputHeight,o=void 0===i?128:i,l=t.iouThreshold,u=void 0===l?.3:l,c=t.scoreThreshold,h=void 0===c?.75:c,p=t.modelUrl;return lM(this,void 0,void 0,(function(){var e;return uM(this,(function(t){switch(t.label){case 0:return null==p?[3,2]:[4,$v(p)];case 1:return e=t.sent(),[3,4];case 2:return[4,$v("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0})];case 3:e=t.sent(),t.label=4;case 4:return[2,new fM(e,s,o,r,u,h)]}}))}))}const gM=function(e,t){e.forEach((function(e){var n=e.topLeft[0],r=e.bottomRight[1],a=e.bottomRight[0]-n,s=e.topLeft[1]-r;t.rect(n,r,a,s),t.strokeStyle="#00FF00",t.stroke()}))};function yM(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,s=[],i=!0,o=!1;try{for(n=n.call(e);!(i=(r=n.next()).done)&&(s.push(r.value),!t||s.length!==t);i=!0);}catch(e){o=!0,a=e}finally{try{i||null==n.return||n.return()}finally{if(o)throw a}}return s}}(e,t)||function(e,t){if(e){if("string"==typeof e)return bM(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?bM(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function bM(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const xM=function(){var e=yM((0,I.useState)(window.innerWidth),2),t=e[0],n=e[1],r=yM((0,I.useState)(window.innerHeight),2),a=r[0],s=r[1],i=function(){n(window.innerWidth),s(window.innerHeight)};return(0,I.useEffect)((function(){return window.addEventListener("resize",i),function(){window.removeEventListener("resize",i)}}),[]),t<=1024&&a<=1024};var vM=n(666),wM=n.n(vM),kM=n(970),NM=n.n(kM);function IM(e,t,n,r,a,s,i){try{var o=e[s](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,a)}function SM(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var s=e.apply(t,n);function i(e){IM(s,r,a,i,o,"next",e)}function o(e){IM(s,r,a,i,o,"throw",e)}i(void 0)}))}}function TM(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const CM=function(){var e,t,n=(e=(0,I.useState)(0),t=2,function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,s=[],i=!0,o=!1;try{for(n=n.call(e);!(i=(r=n.next()).done)&&(s.push(r.value),!t||s.length!==t);i=!0);}catch(e){o=!0,a=e}finally{try{i||null==n.return||n.return()}finally{if(o)throw a}}return s}}(e,t)||function(e,t){if(e){if("string"==typeof e)return TM(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?TM(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=n[0],a=n[1],s=(0,I.useRef)(null),i=(0,I.useRef)(null);(0,I.useEffect)((function(){var e=function(){var e=SM(wM().mark((function e(){var t;return wM().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,mM();case 2:t=e.sent,setInterval((function(){o(t)}),100);case 4:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();e()}),[]);var o=function(){var e=SM(wM().mark((function e(t){var n,r,o,l,u;return wM().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(void 0===s.current||null===s.current||4!==s.current.video.readyState){e.next=14;break}return n=s.current.video,r=s.current.video.videoWidth,o=s.current.video.videoHeight,s.current.video.width=r,s.current.video.height=o,i.current.width=r,i.current.height=o,e.next=10,t.estimateFaces(n);case 10:l=e.sent,a(l.length),u=i.current.getContext("2d"),gM(l,u);case 14:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();return I.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100vh"}},xM()?void 0===s.current||null===s.current||4!==s.current.video.readyState?I.createElement("div",null,I.createElement("h1",{style:{fontFamily:"Trebuchet MS",fontSize:18,textAlign:"center",width:200}},"Please wait, your webcam is loading..."),I.createElement("h1",{style:{fontFamily:"Trebuchet MS",fontSize:18,marginLeft:10,marginRight:10,textAlign:"center",width:200}},"Please make sure your webcam is working and your browser has permission to use it.")):I.createElement("h1",{style:{fontFamily:"Trebuchet MS",fontSize:22,textAlign:"center",marginBottom:300}},r," attending"):void 0===s.current||null===s.current||4!==s.current.video.readyState?I.createElement("div",null,I.createElement("h1",{style:{fontFamily:"Trebuchet MS",fontSize:22,textAlign:"center",width:600}},"Please wait, your webcam is loading..."),I.createElement("h1",{style:{fontFamily:"Trebuchet MS",fontSize:22,marginLeft:10,marginRight:10,textAlign:"center",width:600}},"Please make sure your webcam is working and your browser has permission to use it.")):I.createElement("h1",{style:{fontFamily:"Trebuchet MS",fontSize:22,textAlign:"center",marginBottom:600}},r," attending"),I.createElement(NM(),{ref:s,muted:!0,style:{position:"absolute",marginLeft:"auto",marginRight:"auto",right:0,left:0,textAlign:"center",zindex:9,width:xM()?267:640,height:xM()?200:480}}),I.createElement("canvas",{ref:i,style:{position:"absolute",marginLeft:"auto",marginRight:"auto",right:0,left:0,textAlign:"center",zindex:9,width:xM()?267:640,height:xM()?200:480}}))},EM=function(){return I.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center "}},I.createElement(CM,null))};S.render(I.createElement(EM,null),document.getElementById("root"))})()})();